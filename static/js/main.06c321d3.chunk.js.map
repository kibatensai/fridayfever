{"version":3,"sources":["features/f1-auth/login/ui-login/LoginForm/LoginForm.module.css","main/ui/common/CustomRadio/CustomRadio.module.css","main/ui/common/stylingUtils/navlinkStyling.module.css","main/ui/common/CustomCheckbox/CustomCheckbox.module.css","main/ui/common/CustomInput/CustomInput.module.css","main/ui/errorPage/ui/ErrorPage.module.css","main/ui/common/CustomButton/CustomButton.module.css","features/f0-test/TestComponent/ui/TestComponent.module.css","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.module.css","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.module.css","main/Main.module.css","main/ui/header/Header.module.css","features/f1-auth/login/bll-login/loginInitState.ts","features/f1-auth/forgot/bll-forgot/forgotInitState.ts","features/f1-auth/profile/bll-profile/profileInitState.ts","features/f1-auth/register/bll-register/api-instance.ts","features/f1-auth/register/bll-register/registerActions.ts","features/f1-auth/register/bll-register/registerInitState.ts","features/f1-auth/setPass/bll-setPass/setPassInitState.ts","main/bll/store.ts","features/f1-auth/forgot/bll-forgot/forgotReducer.ts","features/f1-auth/login/bll-login/loginReducer.ts","features/f1-auth/profile/bll-profile/profileReducer.ts","features/f1-auth/register/bll-register/registerReducer.ts","features/f1-auth/setPass/bll-setPass/setPassReducer.ts","main/ui/common/CustomButton/CustomButton.tsx","main/ui/common/CustomCheckbox/CustomCheckbox.tsx","main/ui/common/CustomInput/CustomInput.tsx","main/ui/common/CustomRadio/CustomRadio.tsx","features/f0-test/TestComponent/ui/TestComponent.tsx","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.tsx","features/f1-auth/forgot/dal-forgot/forgotInstance.ts","features/f1-auth/forgot/bll-forgot/forgotActions.ts","features/f1-auth/forgot/ui-forgot/Forgot.tsx","features/f1-auth/forgot/bll-forgot/forgotThunks.ts","features/f1-auth/login/bll-login/loginActions.ts","features/f1-auth/login/dal-login/loginInstance.ts","features/f1-auth/login/ui-login/LoginForm/LoginForm.tsx","features/f1-auth/login/ui-login/Login.tsx","features/f1-auth/login/bll-login/loginThunks.ts","features/f1-auth/profile/ui-profile/Profile.tsx","features/f1-auth/register/ui-register/Register.tsx","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.tsx","features/f1-auth/setPass/dal-setPass/setPassInstance.ts","features/f1-auth/setPass/bll-setPass/setPassActions.ts","features/f1-auth/setPass/ui-setPass/SetPassword.tsx","features/f1-auth/setPass/bll-setPass/setPassThunks.ts","main/ui/errorPage/ui/ErrorPage.tsx","main/ui/routes/Routes.tsx","main/ui/header/Header.tsx","main/Main.tsx","main/ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","loginInitialState","error","loading","success","forgotInitialState","message","profileInitialState","instance","axios","create","baseURL","withCredentials","fridayAPI","email","password","post","RegisterActions","isRegister","type","registerInitialState","setPassInitialState","responseMessage","rootReducer","combineReducers","forgot","state","action","login","profile","register","setPass","store","createStore","applyMiddleware","thunk","window","Button","red","className","restProps","finalClassName","s","default","Checkbox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","checkboxLabel","e","currentTarget","checked","customSpan","Input","onChangeText","onKeyPress","onEnter","finalSpanClassName","superInput","input_container","value","key","CustomRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","style","label","radio","design","text","radio_wrapper","TestComponent","testContainer","CustomButton","CustomCheckbox","CustomInput","ForgotForm","props","useState","setLogin","forgotForm","onClick","disabled","to","sUtils","loginLink","forgotAPI","from","ForgotActions","Forgot","dispatch","useDispatch","useSelector","a","res","data","info","response","ForgotTC","LoginActions","loginAPI","LoginForm","rememberMe","details","setDetails","loginForm","loginGroup","htmlFor","target","id","rememberMeLabel","PATH","FORGOT","REGISTER","Login","PROFILE","Profile","Register","setEmail","pass","repPass","setrepPpass","placeholder","color","then","console","log","catch","loginTC","LOGIN","SetPasswordForm","password1","setPassword1","password2","setPassword2","setPasswordPage","setNewPassword","setError","setPassAPI","resetPasswordToken","SetPassActions","SetPassword","useParams","SetPassTC","ErrorPage","error_page","title_404","title","HOME","SET_PASS","TEST","ERROR_PAGE","Routes","path","exact","render","Header","nav_container","nav_bar","nav_link","activeClassName","current","Main","mainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,WAAa,8BAA8B,gBAAkB,qC,mBCA/ED,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,MAAQ,2BAA2B,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,8B,mBCArLD,EAAOC,QAAU,CAAC,UAAY,oC,mBCA9BD,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,SAAW,iCAAiC,WAAa,qC,mBCAjID,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,WAAa,gCAAgC,OAAS,4BAA4B,WAAa,gCAAgC,MAAQ,6B,mBCAhND,EAAOC,QAAU,CAAC,WAAa,8BAA8B,UAAY,6BAA6B,MAAQ,2B,mBCA9GD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,IAAM,4B,mBCAtGD,EAAOC,QAAU,CAAC,cAAgB,uC,mBCAlCD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,gBAAkB,2C,mBCApCD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,UAAY,0B,uCCA1ED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,cAAgB,8BAA8B,SAAW,yBAAyB,KAAO,qBAAqB,QAAU,0B,8HCO/JC,EAAoC,CAC7CC,MAAO,GACPC,SAAS,EACTC,SAAS,G,gBCFAC,EAAsC,CAC/CH,MAAO,GACPC,SAAS,EACTC,SAAS,EACTE,QAAS,ICPAC,EAAwC,G,iBCFxCC,EAAWC,IAAMC,OAAO,CACnCC,QAHqB,sCAIrBC,iBAAiB,IAGNC,EAAY,SACdC,EAAeC,GAEtB,OADgBP,EAASQ,KAAmB,iBAAkB,CAAEF,QAAOC,cCP9DE,EACM,SAACC,GAAD,MAA0B,CACzCC,KAAM,uBACND,eCHSE,EAA0C,CACrDF,YAAY,GCEDG,EAAwC,CACjDnB,MAAO,GACPoB,gBAAiB,GACjBlB,SAAS,GCDPmB,EAAcC,YAAgB,CAChCC,OCNyB,WAA6E,IAA5EC,EAA2E,uDAAnErB,EAAoBsB,EAA+C,uCACrG,OAAQA,EAAOR,MACX,IAAK,mBACD,OAAO,2BAAIO,GAAX,IAAkBxB,MAAOyB,EAAOzB,QACpC,IAAK,qBACD,OAAO,2BAAIwB,GAAX,IAAkBtB,QAASuB,EAAOvB,UACtC,IAAK,qBACD,OAAO,2BAAIsB,GAAX,IAAkBpB,QAASqB,EAAOrB,UACtC,QACI,OAAOoB,IDFfE,MEPwB,WAA0E,IAAzEF,EAAwE,uDAAhEzB,EAAmB0B,EAA6C,uCACjG,OAAQA,EAAOR,MACX,IAAK,kBACD,OAAO,2BACAO,GADP,IAEIxB,MAAOyB,EAAOzB,MACdC,SAAS,EACTC,SAAS,IAGjB,IAAK,oBACD,OAAO,2BACAsB,GADP,IAEIxB,MAAO,GACPC,SAAS,EACTC,QAASuB,EAAOvB,UAGxB,IAAK,oBACD,OAAO,2BACAsB,GADP,IAEIxB,MAAO,GACPC,QAASwB,EAAOxB,QAChBC,SAAS,IAGjB,QACI,OAAOsB,IFnBfG,QGR0B,WAAgF,IAA/EH,EAA8E,uDAAtEnB,EAAqBoB,EAAiD,uCAGjG,OAFAA,EAAOR,KAEAO,GHMfI,SIR2B,WAAmF,IAAlFJ,EAAiF,uDAAzEN,EAAsBO,EAAmD,uCAC/G,OAAQA,EAAOR,MACb,IAAK,uBACH,OAAO,2BAAKO,GAAZ,IAAmBR,WAAYS,EAAOT,aAExC,QACE,OAAOQ,IJGTK,QKV0B,WAAgF,IAA/EL,EAA8E,uDAAtEL,EAAqBM,EAAiD,uCACzG,OAAQA,EAAOR,MACX,IAAK,oBACD,OAAO,2BAAIO,GAAX,IAAkBxB,MAAOyB,EAAOzB,QACpC,IAAK,sBACD,OAAO,2BAAIwB,GAAX,IAAkBtB,QAASuB,EAAOvB,UACtC,IAAK,sBACD,OAAO,2BAAIsB,GAAX,IAAkBJ,gBAAiBK,EAAOrB,UAC9C,QACI,OAAOoB,MLIbM,EAAQC,YAAYV,EAAaW,YAAgBC,MAKxCH,IAGXI,OAAOJ,MAAQA,E,2CMCJK,EAhBgC,SAAC,GAK1C,IAHEC,EAGH,EAHGA,IAAKC,EAGR,EAHQA,UACFC,EAEN,mCACKC,EAAc,UAAMH,EAAMI,IAAEJ,IAAMI,IAAEC,QAAtB,YAAiCJ,GAErD,OACI,oCACIA,UAAWE,GACPD,K,iBCwBDI,EAlCoC,SAAC,GAS/C,EAPGzB,KAOF,IANE0B,EAMH,EANGA,SAAUC,EAMb,EANaA,gBACVP,EAKH,EALGA,UACAQ,GAIH,EALcC,cAKd,EAJGD,UAEGP,EAEN,4FAQKS,EAAmB,UAAMP,IAAEQ,SAAR,YAAoBX,GAAwB,IAErE,OACI,wBAAOA,UAAWG,IAAES,cAApB,UACI,mCACIhC,KAAM,WACN0B,SAba,SAACO,GAEtBP,GAAYA,EAASO,GAErBN,GAAmBA,EAAgBM,EAAEC,cAAcC,UAU3Cf,UAAWU,GAEPT,IACN,sBAAMD,UAAWG,IAAEa,aACpBR,GAAY,sBAAMR,UAAWG,IAAEM,cAAnB,SAAmCD,Q,iBCmB7CS,EA3CkC,SAAC,GAU5C,IARErC,EAQH,EARGA,KACA0B,EAOH,EAPGA,SAAUY,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZzD,EAKH,EALGA,MACW8C,GAId,EAJGT,UAIH,EAJcS,eAERR,EAEN,6GAeKoB,EAAkB,UAAMlB,IAAExC,MAAR,YAAiB8C,GAAgC,IACnEC,EAAmB,UAAM/C,EAAQ,GAAKwC,IAAEmB,YAE9C,OACI,sBAAKtB,UAAWG,IAAEoB,gBAAlB,UACI,mCACI3C,KAAMA,EACN0B,SArBa,SAACO,GACtBP,GACGA,EAASO,GAEZK,GAAgBA,EAAaL,EAAEC,cAAcU,QAkBrCL,WAhBe,SAACN,GACxBM,GAAcA,EAAWN,GAEf,UAAVA,EAAEY,KACCL,GACAA,KAYKpB,UAAWU,GAEPT,IAEPtC,GAAS,sBAAMqC,UAAWqB,EAAjB,SAAsC1D,Q,iBCF7C+D,EAzCoC,SAAC,GAO/C,EALG9C,KAKF,IALQ+C,EAKT,EALSA,KACNC,EAIH,EAJGA,QAASJ,EAIZ,EAJYA,MACCK,GAGb,EAHGvB,SAGH,EAHauB,gBAIRC,GADL,6EACwB,SAACjB,GACtBgB,GAAkBA,EAAehB,EAAEC,cAAcU,SAO/CO,EAAuBH,EAAUA,EAAQI,KAAI,SAACC,EAAGC,GAAJ,OAC/C,wBAAOlC,UAAWmC,IAAMC,MAAxB,UACI,uBAAOpC,UAAWmC,IAAME,MACpBV,KAAMA,EACNrB,SAAUwB,EACVlD,KAAM,QACN4C,MAAOS,EACPlB,QAASS,IAAUS,IAGvB,qBAAKjC,UAAWmC,IAAMG,SACtB,sBAAMtC,UAAWmC,IAAMI,KAAvB,SACKN,MAX2BN,EAAO,IAAMO,MAehD,GAEL,OACI,qBAAKlC,UAAWmC,IAAMK,cAAtB,SACKT,K,iBCvCAU,EAAgB,WACzB,OACI,sBAAKzC,UAAWG,IAAEuC,cAAlB,UACI,cAACC,EAAD,mBACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,CAAajB,QAAS,CAAC,EAAG,S,0CCEzBkB,EAAa,SAACC,GAAgC,IAAD,EAC5BC,mBAAS,IADmB,mBAC/C3D,EAD+C,KACxC4D,EADwC,KAKtD,OACI,sBAAKjD,UAAWG,IAAE+C,WAAlB,UACI,6CACiB,KAAhBH,EAAMpF,OAAgBoF,EAAMpF,MACV,KAAlBoF,EAAMhF,SAAkBgF,EAAMhF,QAC/B,cAAC8E,EAAD,CAAajE,KAAK,OAAO4C,MAAOnC,EAAOiB,SARzB,SAACO,GACnBoC,EAASpC,EAAEC,cAAcU,UAQrB,8BAAK,cAACmB,EAAD,CAAcQ,QAAS,kBAAMJ,EAAM7D,OAAOG,IAAQ+D,UAAWL,EAAMlF,QAAnE,oBACL,8BACI,cAAC,IAAD,CAASwF,GAAI,SAAUrD,UAAWsD,IAAOC,UAAzC,yB,yBC1BVtF,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,sCACTC,iBAAiB,IAIRmF,EAAY,SACdjF,GACH,OAAON,EAASQ,KAAK,eAAgB,CACjCF,QACAkF,KAAM,QACN1F,QAAQ,kMCTP2F,GACC,SAAC/F,GAAD,MACL,CACGiB,KAAM,mBACNjB,UAJC+F,GAMG,SAAC7F,GAAD,MACP,CACGe,KAAM,qBACNf,YATC6F,GAWG,SAAC3F,GAAD,MACP,CACGa,KAAM,qBACNb,YCZC4F,GAAS,WAClB,IAAMC,EAAWC,cACXlG,EAAQmG,aAAkC,SAAA3E,GAAK,OAAIA,EAAMD,OAAOvB,SAChEE,EAAUiG,aAAmC,SAAA3E,GAAK,OAAIA,EAAMD,OAAOrB,WACnEE,EAAU+F,aAAkC,SAAA3E,GAAK,OAAIA,EAAMD,OAAOnB,WAKxE,OACI,mCACI,cAAC,EAAD,CAAYmB,OANL,SAACX,GACZqF,ECRgB,SAACrF,GAAD,8CAAmB,WAAOqF,GAAP,iBAAAG,EAAA,sEAEnCH,EAASF,IAAyB,IAFC,SAGjBF,EAAiBjF,GAHA,OAG7ByF,EAH6B,OAInCJ,EAASF,IAAyB,IAClCE,EAASF,GAAyBM,EAAIC,KAAKC,OALR,gDAO7BvG,EAAQ,KAAEwG,SAAW,KAAEA,SAASF,KAAKtG,MAAS,gBACpDiG,EAASF,GAAuB/F,IAChCiG,EAASF,IAAyB,IATC,yDAAnB,sDDQPU,CAAS7F,KAKcZ,MAAOA,EAAOE,QAASA,EAASE,QAASA,OEbpEsG,GACC,SAAC1G,GAAD,MACT,CACCiB,KAAM,kBACNjB,UAJO0G,GAWG,SAACxG,GAAD,MACX,CACCe,KAAM,oBACNf,YChBAI,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCACTC,iBAAiB,IAIRiG,GAAW,SACbL,GACH,OAAOhG,GAASQ,KAAK,aAAcwF,I,oBCK9BM,GAA+B,SAAC,GAAoB,IAAnBlF,EAAkB,EAAlBA,MAAO1B,EAAW,EAAXA,MAAW,EAE9BqF,mBAA2B,CAACzE,MAAO,GAAIC,SAAU,GAAIgG,YAAY,IAFnC,mBAErDC,EAFqD,KAE5CC,EAF4C,KAoB5D,OACI,qCACe,KAAV/G,EAAeA,EAAQ,GACxB,sBAAKqC,UAAWG,KAAEwE,UAAlB,UACI,sBAAK3E,UAAWG,KAAEyE,WAAlB,UACI,uBAAOC,QAAQ,QAAf,oBACA,cAAChC,EAAD,CAAavC,SAtBA,SAACO,GAC1B6D,EAAW,2BAAID,GAAL,IAAclG,MAAOsC,EAAEiE,OAAOtD,UAqBiBA,MAAOiD,EAAQlG,MAAOK,KAAK,QAAQ+C,KAAK,QAAQoD,GAAG,aAEpG,sBAAK/E,UAAWG,KAAEyE,WAAlB,UACI,uBAAOC,QAAQ,WAAf,uBACA,cAAChC,EAAD,CAAavC,SAtBG,SAACO,GAC7B6D,EAAW,2BAAID,GAAL,IAAcjG,SAAUqC,EAAEiE,OAAOtD,UAqBiBA,MAAOiD,EAAQjG,SAAUI,KAAK,WAAW+C,KAAK,WAAWoD,GAAG,gBAEhH,sBAAK/E,UAAWG,KAAEyE,WAAlB,UACI,cAAChC,EAAD,CAAgBtC,SArBE,SAACO,GAC/B6D,EAAW,2BAAID,GAAL,IAAcD,WAAY3D,EAAEiE,OAAO/D,YAoBoBA,QAAS0D,EAAQD,aACtE,uBAAOxE,UAAWG,KAAE6E,gBAApB,4BAEJ,qBAAKhF,UAAWG,KAAEyE,WAAlB,SACI,cAACjC,EAAD,CAAc/D,KAAK,SAAQuE,QArBvB,SAACtC,GACjBxB,EAAMoF,IAoBM,uBAEJ,sBAAKzE,UAAWG,KAAEyE,WAAlB,UACI,cAAC,IAAD,CAASvB,GAAI4B,GAAKC,OAAQlF,UAAWsD,IAAOC,UAA5C,qBACA,cAAC,IAAD,CAASF,GAAI4B,GAAKE,SAAUnF,UAAWsD,IAAOC,UAA9C,gCC/CP6B,GAAQ,WAEjB,IAAMxB,EAAWC,cACXhG,EAAUiG,aAAmC,SAAA3E,GAAK,OAAIA,EAAME,MAAMxB,WAClEF,EAAQmG,aAAkC,SAAA3E,GAAK,OAAIA,EAAME,MAAM1B,SAMrE,OAAIE,EAAgB,cAAC,IAAD,CAAUwF,GAAI4B,GAAKI,UAGnC,mCACI,cAAC,GAAD,CAAWhG,MARL,SAACoF,GCVG,IACpBR,EDUML,GCVNK,EDUsBQ,ECXF,uCAE2C,WAC/Db,GAD+D,eAAAG,EAAA,+EAI3CO,GAAgBL,GAJ2B,cAK7DL,EAASS,IAAwB,IAL4B,gDAOrD1G,EAAQ,KAAEwG,SAAW,KAAEA,SAASF,KAAKtG,MAAS,KAAEI,QAAU,gCAChE6F,EAASS,IAAwB,IACjCT,EAASS,GAAsB1G,IAT4B,yDAF3C,yDDkBeA,MAAOA,OEvB/B2H,GAAU,WACnB,OACI,qDCOKC,GAAW,WACtB,IAAM3B,EAAWC,cAEXlF,EAAamF,aAAmC,SAAC3E,GAAD,OAAWA,EAAMI,SAASZ,cAHpD,EAKFqE,mBAAS,IALP,mBAKrBzE,EALqB,KAKdiH,EALc,OAMJxC,mBAAS,IANL,mBAMrByC,EANqB,KAMfjG,EANe,OAOGwD,mBAAS,IAPZ,mBAOrB0C,EAPqB,KAOZC,EAPY,KAuB5B,OAAIhH,EACK,cAAC,IAAD,CAAU0E,GAAI,WAIrB,qDAEE,cAAC,EAAD,CAAO7B,MAAOjD,EAAO+B,SArBL,SAACO,GACnB2E,EAAS3E,EAAEC,cAAcU,QAoBqBoE,YAAa,qBACzD,cAAC,EAAD,CAAOpE,MAAOiE,EAAMnF,SAnBL,SAACO,GAClBrB,EAAQqB,EAAEC,cAAcU,QAkBoB5C,KAAM,WAAYgH,YAAa,oBACxEH,IAASC,EAAU,qBAAKvD,MAAO,CAAE0D,MAAO,OAArB,wCAAiE,KACrF,cAAC,EAAD,CAAOrE,MAAOkE,EAASpF,SAlBL,SAACO,GACrB8E,EAAY9E,EAAEC,cAAcU,QAiBsB5C,KAAM,WAAYgH,YAAa,gBAC/E,cAAC,EAAD,CAAQzC,QAfK,WACfS,ElBbmB,SAACrF,EAAeC,GAAhB,OAAqC,SAACoF,GAC3DtF,EACYC,EAAOC,GAChBsH,MAAK,SAAC9B,GACL+B,QAAQC,IAAI,OACZpC,EAASlF,GAAgC,OAE1CuH,OAAM,SAACtI,GACNoI,QAAQC,IAAI,akBKLE,CAAQ3H,EAAOkH,KActB,sBACA,cAAC,IAAD,CAASpC,GAAI4B,GAAKkB,MAAlB,yB,oBC/BOC,GAAkB,SAACrD,GAA4B,IAAD,EAErBC,mBAAS,IAFY,mBAEhDqD,EAFgD,KAErCC,EAFqC,OAGrBtD,mBAAS,IAHY,mBAGhDuD,EAHgD,KAGrCC,EAHqC,KAevD,OACI,sBAAKxG,UAAWG,KAAEsG,gBAAlB,UACqB,KAAhB1D,EAAMpF,OAAgBoF,EAAMpF,MACF,KAA1BoF,EAAMhE,iBAA0BgE,EAAMhE,gBACvC,8BAAK,cAAC8D,EAAD,CAAajE,KAAM,WAAY4C,MAAO6E,EAAW/F,SAfpC,SAACO,GACvByF,EAAazF,EAAEiE,OAAOtD,YAelB,8BAAK,cAACqB,EAAD,CAAajE,KAAM,WAAY4C,MAAO+E,EAAWjG,SAbpC,SAACO,GACvB2F,EAAa3F,EAAEiE,OAAOtD,YAalB,8BAAK,cAACmB,EAAD,CAAcQ,QAVO,WAC9BkD,IAAcE,EAAYxD,EAAM2D,eAAeL,GAAatD,EAAM4D,SAAS,yBAShBvD,UAAWL,EAAMlF,QAAnE,gCChCXI,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,sCACTC,iBAAiB,IAIRuI,GAAa,SACVpI,EAAkBqI,GAC1B,OAAO5I,GAASQ,KAAK,yBAA0B,CAC3CD,WACAqI,wBCRCC,GACC,SAACnJ,GAAD,MAAoB,CAC1BiB,KAAM,oBACNjB,UAHKmJ,GAKG,SAACjJ,GAAD,MAAuB,CAC/Be,KAAM,sBACNf,YAPKiJ,GASW,SAAC/I,GAAD,MAAsB,CACtCa,KAAM,sBACNb,YCPKgJ,GAAc,WAEvB,IAAMnD,EAAWC,cACXlG,EAAQmG,aAAkC,SAAA3E,GAAK,OAAIA,EAAMK,QAAQ7B,SACjEE,EAAUiG,aAAmC,SAAA3E,GAAK,OAAIA,EAAMK,QAAQ3B,WACpEkB,EAAkB+E,aAAkC,SAAA3E,GAAK,OAAIA,EAAMK,QAAQT,mBAC1EgG,EAAMiC,cAANjC,GAcP,OACI,cAAC,GAAD,CAAiB2B,eAdE,SAAClI,GAChBuG,GAAa,QAAPA,EAENnB,ECda,SAACrF,EAAewG,GAAhB,8CAA+B,WAAOnB,GAAP,iBAAAG,EAAA,sEAEhDH,EAASkD,IAA0B,IAFa,SAG9BF,GAAuBrI,EAAOwG,GAHA,OAG1Cf,EAH0C,OAIhDJ,EAASkD,IAA0B,IACnClD,EAASkD,GAAkC9C,EAAIC,KAAKC,OACpDN,EAASkD,GAAwB,KANe,kDAQ1CnJ,EAAQ,KAAEwG,SAAW,KAAEA,SAASF,KAAKtG,MAAS,gBACpDiG,EAASkD,GAAwBnJ,IACjCiG,EAASkD,IAA0B,IAVa,0DAA/B,sDDcJG,CAAUzI,EAAUuG,IACf,QAAPA,GACPnB,EAASkD,GAAwB,8EASYnJ,MAAOA,EAAOE,QAASA,EACvDkB,gBAAiBA,EAAiB4H,SANtC,SAAChJ,GACdiG,EAASkD,GAAwBnJ,Q,oBEvB5BuJ,GAAY,WACrB,OACI,sBAAKlH,UAAWmC,KAAMgF,WAAtB,UACI,qBAAKnH,UAAWmC,KAAMiF,UAAtB,iBACA,qBAAKpH,UAAWmC,KAAMkF,MAAtB,sEACA,iFACiD,uBADjD,kCAE2C,uBAF3C,kECICpC,GAAO,CAChBqC,KAAM,IACNnB,MAAO,SACPhB,SAAU,YACVE,QAAS,WACTH,OAAQ,UACRqC,SAAU,wBACVC,KAAM,QACNC,WAAY,QAMHC,GAAS,WAClB,OACI,mCACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAM1C,GAAKqC,KAAMM,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUxE,GAAI4B,GAAKuC,UAE/D,cAAC,IAAD,CAAOG,KAAM1C,GAAKkB,MAAO0B,OAAQ,kBAAM,cAAC,GAAD,OACvC,cAAC,IAAD,CAAOF,KAAM1C,GAAKE,SAAU0C,OAAQ,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOF,KAAM1C,GAAKI,QAASwC,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOF,KAAM1C,GAAKC,OAAQ2C,OAAQ,kBAAM,cAAC,GAAD,OACxC,cAAC,IAAD,CAAOF,KAAM1C,GAAKsC,SAAUM,OAAQ,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOF,KAAM1C,GAAKuC,KAAMK,OAAQ,kBAAM,cAAC,EAAD,OAItC,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,GAAD,a,mBCpCxBC,GAAS,WAIlB,OACI,qBAAK9H,UAAWmC,KAAM4F,cAAtB,SACA,sBAAK/H,UAAWmC,KAAM6F,QAAtB,UACI,cAAC,IAAD,CAAS3E,GAAI4B,GAAKuC,KAAMxH,UAAWmC,KAAM8F,SAAUC,gBAAiB/F,KAAMgG,QAA1E,kBACA,cAAC,IAAD,CAAS9E,GAAI4B,GAAKkB,MAAOnG,UAAWmC,KAAM8F,SAAUC,gBAAiB/F,KAAMgG,QAA3E,mBACA,cAAC,IAAD,CAAS9E,GAAI4B,GAAKE,SAAUnF,UAAWmC,KAAM8F,SAAUC,gBAAiB/F,KAAMgG,QAA9E,sBACA,cAAC,IAAD,CAAS9E,GAAI4B,GAAKI,QAASrF,UAAWmC,KAAM8F,SAAUC,gBAAiB/F,KAAMgG,QAA7E,qBACA,cAAC,IAAD,CAAS9E,GAAI4B,GAAKC,OAAQlF,UAAWmC,KAAM8F,SAAUC,gBAAiB/F,KAAMgG,QAA5E,oBACA,cAAC,IAAD,CAAS9E,GAAI4B,GAAKsC,SAAUvH,UAAWmC,KAAM8F,SAAUC,gBAAiB/F,KAAMgG,QAA9E,gC,oBCZCC,GAAO,WAChB,OACI,sBAAKpI,UAAWG,KAAEkI,cAAlB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,QCWGC,I,MAdH,WACV,OACE,qBAAKtI,UAAU,MAAf,SACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,GAAD,cCEG8I,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.06c321d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginGroup\":\"LoginForm_loginGroup__1-DhW\",\"rememberMeLabel\":\"LoginForm_rememberMeLabel__1Zjjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_wrapper\":\"CustomRadio_radio_wrapper__2csJO\",\"label\":\"CustomRadio_label__dv_Q7\",\"radio\":\"CustomRadio_radio__39bWq\",\"text\":\"CustomRadio_text__3nabw\",\"design\":\"CustomRadio_design__3xiGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginLink\":\"navlinkStyling_loginLink__ZVbKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabel\":\"CustomCheckbox_checkboxLabel__2j4wa\",\"checkbox\":\"CustomCheckbox_checkbox__-WVPU\",\"customSpan\":\"CustomCheckbox_customSpan__3LJe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"CustomInput_input_container__3QSF7\",\"superInput\":\"CustomInput_superInput__2d6Um\",\"fadeIn\":\"CustomInput_fadeIn__3h5xZ\",\"errorInput\":\"CustomInput_errorInput__33rO6\",\"error\":\"CustomInput_error__2toCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_page\":\"ErrorPage_error_page__1JMk3\",\"title_404\":\"ErrorPage_title_404__2TK1J\",\"title\":\"ErrorPage_title__3KXLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"CustomButton_default__sFbn4\",\"fadeIn\":\"CustomButton_fadeIn__2Hen-\",\"red\":\"CustomButton_red__14ffV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testContainer\":\"TestComponent_testContainer__tijZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotForm\":\"ForgotForm_forgotForm__3Yds1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPasswordPage\":\"SetPasswordForm_setPasswordPage__2U4iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__1V-Yf\",\"animation\":\"Main_animation__RFjm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Header_nav_bar__3fhKf\",\"nav_container\":\"Header_nav_container__WKhEF\",\"nav_link\":\"Header_nav_link__VnHL2\",\"fill\":\"Header_fill__EoQTU\",\"current\":\"Header_current__2wyH0\"};","\r\nexport type LoginInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n\r\n}\r\n\r\nexport const loginInitialState: LoginInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false\r\n}","\r\nexport type ForgotInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\n\r\nexport const forgotInitialState: ForgotInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: true,\r\n    message: \"\"\r\n}","\r\nexport type ProfileInitState = {\r\n\r\n}\r\n\r\n\r\nexport const profileInitialState: ProfileInitState = {}","import axios from 'axios';\r\n\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nexport const instance = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\n\r\nexport const fridayAPI = {\r\n  register(email: string, password: string) {\r\n    const promise = instance.post<ResponseType>('/auth/register', { email, password });\r\n    return promise;\r\n  },\r\n};\r\n\r\nexport type ResponseType = {\r\n  addedUser: Object;\r\n  error?: string;\r\n};\r\n","import { InferActionsType } from '../../../../main/bll/action-types';\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n  setIsRegisterAC: (isRegister: boolean) => ({\r\n    type: 'register/IS-REGISTER',\r\n    isRegister,\r\n  } as const),\r\n};\r\n","export type RegisterInitState = {\r\n  isRegister: boolean;\r\n};\r\n\r\nexport const registerInitialState: RegisterInitState = {\r\n  isRegister: false,\r\n};\r\n","export type SetPassInitState = {\r\n    error: string\r\n    responseMessage: string\r\n    success: boolean\r\n}\r\n\r\n\r\nexport const setPassInitialState: SetPassInitState = {\r\n    error: '',\r\n    responseMessage: '',\r\n    success: true\r\n}","import { loginReducer } from './../../features/f1-auth/login/bll-login/loginReducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { forgotReducer } from \"../../features/f1-auth/forgot/bll-forgot/forgotReducer\";\r\nimport { profileReducer } from '../../features/f1-auth/profile/bll-profile/profileReducer';\r\nimport { registerReducer } from '../../features/f1-auth/register/bll-register/registerReducer';\r\nimport { setPassReducer } from '../../features/f1-auth/setPass/bll-setPass/setPassReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    setPass: setPassReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\n    window.store = store","import {ForgotActionsType} from \"./forgotActions\";\r\nimport {forgotInitialState, ForgotInitState} from \"./forgotInitState\";\r\n\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: ForgotActionsType): ForgotInitState => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"forgot/SET_SUCCESS\":\r\n            return {...state, success: action.success}\r\n        case \"forgot/SET_MESSAGE\":\r\n            return {...state, message: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { LoginActionsType } from \"./loginActions\";\r\nimport { loginInitialState, LoginInitState } from \"./loginInitState\";\r\n\r\n\r\nexport const loginReducer = (state = loginInitialState, action: LoginActionsType): LoginInitState => {\r\n    switch (action.type) {\r\n        case \"login/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"login/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { ProfileActionsType } from \"./profileActions\";\r\nimport { profileInitialState, ProfileInitState } from \"./profileInitState\";\r\n\r\n\r\nexport const profileReducer = (state = profileInitialState, action: ProfileActionsType): ProfileInitState => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { fridayAPI } from './api-instance';\r\nimport { RegisterActions, RegisterActionsType } from './registerActions';\r\nimport { registerInitialState, RegisterInitState } from './registerInitState';\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActionsType): RegisterInitState => {\r\n  switch (action.type) {\r\n    case 'register/IS-REGISTER':\r\n      return { ...state, isRegister: action.isRegister };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginTC = (email: string, password: string) => (dispatch: Dispatch<RegisterActionsType>) => {\r\n  fridayAPI\r\n    .register(email, password)\r\n    .then((res) => {\r\n      console.log('res');\r\n      dispatch(RegisterActions.setIsRegisterAC(true));\r\n    })\r\n    .catch((error) => {\r\n      console.log('error');\r\n    });\r\n};\r\n","import {SetPassActionsType} from \"./setPassActions\";\r\nimport {setPassInitialState, SetPassInitState} from \"./setPassInitState\";\r\n\r\n\r\nexport const setPassReducer = (state = setPassInitialState, action: SetPassActionsType): SetPassInitState => {\r\n    switch (action.type) {\r\n        case 'setPass/SET_ERROR':\r\n            return {...state, error: action.error}\r\n        case 'setPass/SET_SUCCESS':\r\n            return {...state, success: action.success}\r\n        case 'setPass/SET_MESSAGE':\r\n            return {...state, responseMessage: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from './CustomButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default Button;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./CustomCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.checkboxLabel}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            /><span className={s.customSpan}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n        // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default Checkbox;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./CustomInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.input_container}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport style from './CustomRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst CustomRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label className={style.label} key={name + \"-\" + i}>\n            <input className={style.radio}\n                name={name}\n                onChange={onChangeCallback}\n                type={\"radio\"}\n                value={o}\n                checked={value === o}\n                // name, checked, value, onChange\n            />\n            <div className={style.design}></div>\n            <span className={style.text}>\n                {o}\n            </span>\n\n        </label>\n    )) : [];\n\n    return (\n        <div className={style.radio_wrapper}>\n            {mappedOptions}\n        </div>\n    );\n}\n\nexport default CustomRadio;\n","import React from \"react\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomRadio from \"../../../../main/ui/common/CustomRadio/CustomRadio\"\r\nimport s from './TestComponent.module.css'\r\n\r\nexport const TestComponent = () => {\r\n    return (\r\n        <div className={s.testContainer}>\r\n            <CustomButton>test</CustomButton>\r\n            <CustomCheckbox />\r\n            <CustomInput />\r\n            <CustomRadio options={[1, 2]} />\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport s from './ForgotForm.module.css'\r\n\r\n\r\ntype ForgotFormPropsType = {\r\n    forgot: (email: string) => void\r\n    error: string\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\nexport const ForgotForm = (props: ForgotFormPropsType) => {\r\n    const [login, setLogin] = useState('')\r\n    const onLoginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.forgotForm}>\r\n            <div>Your login</div>\r\n            {props.error !== '' && props.error}\r\n            {props.message !== '' && props.message}\r\n            <CustomInput type=\"text\" value={login} onChange={onLoginChange}/>\r\n            <div><CustomButton onClick={() => props.forgot(login)} disabled={!props.success}>send</CustomButton></div>\r\n            <div>\r\n                <NavLink to={'/login'} className={sUtils.loginLink}>Login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const forgotAPI = {\r\n    forgot(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"roman\",\r\n            message: `<div style=\"background-color: black; border-radius: 15px; color: #FFFFFF; padding: 15px\">password recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type ForgotActionsType = InferActionsType<typeof ForgotActions>;\r\n\r\nexport const ForgotActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"forgot/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"forgot/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setMessage: (message: string) =>\r\n        ({\r\n            type: \"forgot/SET_MESSAGE\",\r\n            message,\r\n        } as const)\r\n\r\n}","import {ForgotForm} from \"./ForgotForm/ForgotForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ForgotTC} from \"../bll-forgot/forgotThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\n\r\n\r\nexport const Forgot = () => {\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.forgot.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.forgot.success)\r\n    const message = useSelector<AppStoreType, string>(state => state.forgot.message)\r\n    const forgot = (email: string) => {\r\n        dispatch(ForgotTC(email))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ForgotForm forgot={forgot} error={error} success={success} message={message}/>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {forgotAPI} from \"../dal-forgot/forgotInstance\";\r\nimport {ForgotActions} from \"./forgotActions\";\r\n\r\nexport const ForgotTC = (email: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(ForgotActions.setSuccess(false))\r\n        const res = await forgotAPI.forgot(email)\r\n        dispatch(ForgotActions.setSuccess(true))\r\n        dispatch(ForgotActions.setMessage(res.data.info))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(ForgotActions.setError(error))\r\n        dispatch(ForgotActions.setSuccess(true))\r\n    }\r\n}","import { InferActionsType } from \"../../../../main/bll/action-types\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setError: (error: string) =>\r\n    ({\r\n      type: \"login/SET_ERROR\",\r\n      error,\r\n    } as const),\r\n    setLoading: (loading: boolean) =>\r\n    ({\r\n      type: \"login/SET_LOADING\",\r\n      loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) =>\r\n    ({\r\n      type: \"login/SET_SUCCESS\",\r\n      success,\r\n    } as const),\r\n\r\n};\r\n","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const loginAPI = {\r\n    signIn(data: LoginDetailsType) {\r\n        return instance.post('auth/login', data)\r\n\r\n    }\r\n}\r\n\r\nexport type LoginDetailsType = {\r\n    email: string | ReadonlyArray<string> | number\r\n    password: string | ReadonlyArray<string> | number\r\n    rememberMe: boolean\r\n}","import React, { ChangeEvent, FC, MouseEvent, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport CustomButton from '../../../../../main/ui/common/CustomButton/CustomButton'\r\nimport CustomCheckbox from '../../../../../main/ui/common/CustomCheckbox/CustomCheckbox'\r\nimport CustomInput from '../../../../../main/ui/common/CustomInput/CustomInput'\r\nimport s from './LoginForm.module.css'\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport { LoginDetailsType } from '../../dal-login/loginInstance'\r\nimport { PATH } from '../../../../../main/ui/routes/Routes'\r\n\r\ntype LoginFormType = {\r\n    login: (userDetails: LoginDetailsType) => void\r\n    error: string\r\n}\r\n\r\nexport const LoginForm: FC<LoginFormType> = ({login, error}) => {\r\n\r\n    const [details, setDetails] = useState<LoginDetailsType>({email: '', password: '', rememberMe: false})\r\n\r\n    const emailOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({...details, email: e.target.value})\r\n    }\r\n\r\n    const passwordOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({...details, password: e.target.value})\r\n    }\r\n\r\n    const rememberMeOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({...details, rememberMe: e.target.checked})\r\n    }\r\n\r\n    const detailsWrap = (e: MouseEvent<HTMLButtonElement>) => {\r\n        login(details)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error !== '' ? error : ''}\r\n            <div className={s.loginForm}>\r\n                <div className={s.loginGroup}>\r\n                    <label htmlFor='email'>Email:</label>\r\n                    <CustomInput onChange={emailOnChangeHandler} value={details.email} type='email' name='email' id='email'/>\r\n                </div>\r\n                <div className={s.loginGroup}>\r\n                    <label htmlFor='password'>Password:</label>\r\n                    <CustomInput onChange={passwordOnChangeHandler} value={details.password} type='password' name='password' id='password'/>\r\n                </div>\r\n                <div className={s.loginGroup}>\r\n                    <CustomCheckbox onChange={rememberMeOnChangeHandler} checked={details.rememberMe} />\r\n                    <label className={s.rememberMeLabel}>remember me</label>\r\n                </div>\r\n                <div className={s.loginGroup}>\r\n                    <CustomButton type='submit'onClick={detailsWrap}>Sign in</CustomButton>\r\n                </div>\r\n                <div className={s.loginGroup}>\r\n                    <NavLink to={PATH.FORGOT} className={sUtils.loginLink}>forgot?</NavLink>\r\n                    <NavLink to={PATH.REGISTER} className={sUtils.loginLink}>register</NavLink>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { signIn } from \"../bll-login/loginThunks\"\r\nimport { LoginDetailsType } from \"../dal-login/loginInstance\"\r\nimport { LoginForm } from \"./LoginForm/LoginForm\"\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n\r\n    const login = (details: LoginDetailsType) => {\r\n        dispatch(signIn(details))\r\n    }\r\n\r\n    if (success) return <Redirect to={PATH.PROFILE} />\r\n\r\n    return (\r\n        <>\r\n            <LoginForm login={login} error={error}/>\r\n        </>\r\n    )\r\n}","import { LoginActions, LoginActionsType } from \"./loginActions\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport { loginAPI, LoginDetailsType } from \"../dal-login/loginInstance\";\r\n\r\nexport const signIn = (\r\n  data: LoginDetailsType\r\n): ThunkAction<void, AppStoreType, unknown, LoginActionsType> => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await loginAPI.signIn(data);\r\n    dispatch(LoginActions.setSuccess(true))\r\n  } catch (e) {\r\n      const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n      dispatch(LoginActions.setSuccess(false))\r\n      dispatch(LoginActions.setError(error))\r\n\r\n  }\r\n};\r\n","export const Profile = () => {\r\n    return (\r\n        <>\r\n            Profile Page\r\n        </>\r\n    )\r\n}","import { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Button from '../../../../main/ui/common/CustomButton/CustomButton';\r\nimport Input from '../../../../main/ui/common/CustomInput/CustomInput';\r\nimport { PATH } from '../../../../main/ui/routes/Routes';\r\nimport { loginTC } from '../bll-register/registerReducer';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\n\r\nexport const Register = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isRegister = useSelector<AppStoreType, boolean>((state) => state.register.isRegister);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [repPass, setrepPpass] = useState('');\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n  const changePass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPass(e.currentTarget.value);\r\n  };\r\n  const changeRepPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setrepPpass(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(loginTC(email, pass));\r\n  };\r\n\r\n  if (isRegister) {\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      Register Page\r\n      <Input value={email} onChange={changeEmail} placeholder={'Enter your email'} />\r\n      <Input value={pass} onChange={changePass} type={'password'} placeholder={'Enter your pass'} />\r\n      {pass !== repPass ? <div style={{ color: 'red' }}>Passwords should be equal </div> : null}\r\n      <Input value={repPass} onChange={changeRepPass} type={'password'} placeholder={'Repeat pass'} />\r\n      <Button onClick={onSubmit}>register</Button>\r\n      <NavLink to={PATH.LOGIN}>Sign in</NavLink>\r\n    </>\r\n  );\r\n};\r\n","import CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport s from './SetPasswordForm.module.css'\r\n\r\ntype SetPasswordType = {\r\n    setNewPassword: (password: string) => void\r\n    success: boolean\r\n    error: string\r\n    responseMessage: string\r\n    setError: (error: string) => void\r\n}\r\n\r\nexport const SetPasswordForm = (props: SetPasswordType) => {\r\n\r\n    const [password1, setPassword1] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const onPassword1Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.target.value)\r\n    }\r\n    const onPassword2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.target.value)\r\n    }\r\n\r\n    const onSetPasswordClickHandler = () => {\r\n        password1 === password2 ? props.setNewPassword(password1) : props.setError('Passwords must match')\r\n    }\r\n\r\n    return (\r\n        <div className={s.setPasswordPage}>\r\n            {props.error !== '' && props.error}\r\n            {props.responseMessage !== '' && props.responseMessage}\r\n            <div><CustomInput type={'password'} value={password1} onChange={onPassword1Change}/></div>\r\n            <div><CustomInput type={'password'} value={password2} onChange={onPassword2Change}/></div>\r\n            <div><CustomButton onClick={onSetPasswordClickHandler} disabled={!props.success}>Set Password</CustomButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const setPassAPI = {\r\n    setPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type SetPassActionsType = InferActionsType<typeof SetPassActions>;\r\n\r\nexport const SetPassActions = {\r\n    setError: (error: string) => ({\r\n        type: 'setPass/SET_ERROR',\r\n        error\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'setPass/SET_SUCCESS',\r\n        success\r\n    } as const),\r\n    setResponseMessage: (message: string) => ({\r\n        type: 'setPass/SET_MESSAGE',\r\n        message\r\n    } as const)\r\n}","import React from \"react\"\r\nimport {SetPasswordForm} from \"./SetPasswordForm/SetPasswordForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {SetPassTC} from \"../bll-setPass/setPassThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {SetPassActions} from \"../bll-setPass/setPassActions\";\r\n\r\nexport const SetPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.setPass.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.setPass.success)\r\n    const responseMessage = useSelector<AppStoreType, string>(state => state.setPass.responseMessage)\r\n    const {id} = useParams<{ id?: string }>();\r\n    const setNewPassword = (password: string) => {\r\n        if (id && id !== ':id') {\r\n\r\n            dispatch(SetPassTC(password, id))\r\n        } else if (id === ':id') {\r\n            dispatch(SetPassActions.setError('If you want to change your password you should open this page using link'))\r\n        }\r\n    }\r\n\r\n    const setError = (error: string) => {\r\n        dispatch(SetPassActions.setError(error))\r\n    }\r\n\r\n    return (\r\n        <SetPasswordForm setNewPassword={setNewPassword} error={error} success={success}\r\n                         responseMessage={responseMessage} setError={setError}/>\r\n    )\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {setPassAPI} from \"../dal-setPass/setPassInstance\";\r\nimport {SetPassActions} from \"./setPassActions\";\r\n\r\nexport const SetPassTC = (email: string, id: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        const res = await setPassAPI.setPassword(email, id)\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        dispatch(SetPassActions.setResponseMessage(res.data.info))\r\n        dispatch(SetPassActions.setError(''))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(SetPassActions.setError(error))\r\n        dispatch(SetPassActions.setSuccess(true))\r\n    }\r\n}\r\n","import style from './ErrorPage.module.css'\r\n\r\nexport const ErrorPage = () => {\r\n    return (\r\n        <div className={style.error_page}>\r\n            <div className={style.title_404}>404</div>\r\n            <div className={style.title}>UH OH! You're lost. ฅ/ᐠ.̫ .ᐟ\\ฅ</div>\r\n            <span>\r\n                The page you are looking for does not exist. <br />\r\n                        How you got here is a mystery! <br />\r\n                        But you can choose the section above and have fun there!\r\n                    </span>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\"\r\nimport {Switch} from \"react-router\"\r\nimport {Redirect, Route} from \"react-router-dom\"\r\nimport {TestComponent} from \"../../../features/f0-test/TestComponent/ui/TestComponent\"\r\nimport {Forgot} from \"../../../features/f1-auth/forgot/ui-forgot/Forgot\"\r\nimport {Login} from \"../../../features/f1-auth/login/ui-login/Login\"\r\nimport {Profile} from \"../../../features/f1-auth/profile/ui-profile/Profile\"\r\nimport {Register} from \"../../../features/f1-auth/register/ui-register/Register\"\r\nimport {SetPassword} from \"../../../features/f1-auth/setPass/ui-setPass/SetPassword\"\r\nimport {ErrorPage} from \"../errorPage/ui/ErrorPage\"\r\n\r\nexport const PATH = {\r\n    HOME: '/',\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    PROFILE: \"/profile\",\r\n    FORGOT: '/forgot',\r\n    SET_PASS: '/set-new-password/:id',\r\n    TEST: '/test',\r\n    ERROR_PAGE: '/404'\r\n\r\n    // add paths\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу TEST*/}\r\n                <Route path={PATH.HOME} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.FORGOT} render={() => <Forgot/>}/>\r\n                <Route path={PATH.SET_PASS} render={() => <SetPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestComponent/>}/>\r\n\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <ErrorPage/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { PATH } from \"../routes/Routes\";\nimport style from './Header.module.css'\n\nexport const Header = () => {\n\n\n\n    return (\n        <div className={style.nav_container}>\n        <div className={style.nav_bar}>\n            <NavLink to={PATH.TEST} className={style.nav_link} activeClassName={style.current}>Home</NavLink>\n            <NavLink to={PATH.LOGIN} className={style.nav_link} activeClassName={style.current}>Login</NavLink>\n            <NavLink to={PATH.REGISTER} className={style.nav_link} activeClassName={style.current}>Register</NavLink>\n            <NavLink to={PATH.PROFILE} className={style.nav_link} activeClassName={style.current}>Profile</NavLink>\n            <NavLink to={PATH.FORGOT} className={style.nav_link} activeClassName={style.current}>Forgot</NavLink>\n            <NavLink to={PATH.SET_PASS} className={style.nav_link} activeClassName={style.current}>Set Password</NavLink>\n        </div>\n        </div>\n    );\n}\n","import { Routes } from \"./ui/routes/Routes\"\r\nimport { Header } from './ui/header/Header'\r\nimport s from './Main.module.css'\r\n\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <Header />\r\n            <Routes />\r\n        </div>\r\n    )\r\n}","import { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from '../bll/store';\nimport { Main } from '../Main';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <>\n        <HashRouter>\n          <Provider store={store}>\n            <Main />\n          </Provider>\n        </HashRouter>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/main/ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
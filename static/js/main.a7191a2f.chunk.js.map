{"version":3,"sources":["features/f1-auth/login/bll-login/loginInitState.ts","features/f1-auth/forgot/bll-forgot/forgotInitState.ts","features/f1-auth/profile/bll-profile/profileInitState.ts","features/f1-auth/register/bll-register/api-instance.ts","features/f1-auth/register/bll-register/registerActions.ts","features/f1-auth/register/bll-register/registerInitState.ts","features/f1-auth/setPass/bll-setPass/setPassInitState.ts","features/f2-cards/packs/bll/packsInitState.ts","features/f2-cards/cards/bll/cardsInitState.ts","main/utils/ErrorHandling/bll/errorHandlingInitState.ts","main/bll/store.ts","features/f1-auth/forgot/bll-forgot/forgotReducer.ts","features/f1-auth/login/bll-login/loginReducer.ts","features/f1-auth/profile/bll-profile/profileReducer.ts","features/f1-auth/register/bll-register/registerReducer.ts","features/f1-auth/setPass/bll-setPass/setPassReducer.ts","features/f2-cards/packs/bll/packsReducer.ts","features/f2-cards/cards/bll/cardsReducer.ts","main/utils/ErrorHandling/bll/errorHandlingReducer.ts","main/ui/common/CustomButton/CustomButton.tsx","main/ui/common/CustomCheckbox/CustomCheckbox.tsx","main/ui/common/CustomInput/CustomInput.tsx","main/ui/common/CustomRadio/CustomRadio.tsx","features/f0-test/TestComponent/ui/TestComponent.tsx","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.tsx","features/f1-auth/forgot/dal-forgot/forgotInstance.ts","features/f1-auth/forgot/bll-forgot/forgotActions.ts","features/f1-auth/forgot/ui-forgot/Forgot.tsx","features/f1-auth/forgot/bll-forgot/forgotThunks.ts","features/f1-auth/login/bll-login/loginActions.ts","main/dal/instance.ts","main/dal/baseURLs.ts","features/f1-auth/login/dal-login/loginInstance.ts","features/f1-auth/login/bll-login/loginThunks.ts","main/ui/common/CustomSnackbar/CustomSnackbar.tsx","main/assets/dbringload.svg","main/ui/common/CustomPreloader/CustomPreloader.tsx","features/f1-auth/login/ui-login/LoginForm/LoginForm.tsx","features/f1-auth/login/ui-login/Login.tsx","features/f1-auth/profile/ui-profile/Profile.tsx","features/f1-auth/register/ui-register/Register.tsx","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.tsx","features/f1-auth/setPass/dal-setPass/setPassInstance.ts","features/f1-auth/setPass/bll-setPass/setPassActions.ts","features/f1-auth/setPass/ui-setPass/SetPassword.tsx","features/f1-auth/setPass/bll-setPass/setPassThunks.ts","main/ui/common/CustomModalWindow/CustomModalWindow.tsx","main/utils/ErrorHandling/bll/errorHandlingActions.ts","features/f2-cards/cards/bll/cardsActions.ts","features/f2-cards/cards/dal/cardsInstance.ts","features/f2-cards/cards/bll/cardsThunks.ts","features/f2-cards/cards/ui/CardsTable.tsx","main/ui/common/SearchComponent/SearchComponent.tsx","main/ui/common/SortComponent/Sort.tsx","main/ui/common/DoubleRangeSlider/DoubleRangeSlider.tsx","features/f2-cards/cards/ui/Cards.tsx","main/ui/common/CustomTable/CustomTable.tsx","features/f2-cards/packs/bll/packsActions.ts","features/f2-cards/packs/dal/packsInstance.ts","features/f2-cards/packs/bll/packsThunks.ts","features/f2-cards/packs/ui/Paginator.tsx","features/f2-cards/packs/ui/Packs.tsx","main/ui/errorPage/ui/ErrorPage.tsx","main/ui/routes/Routes.tsx","main/ui/header/Header.tsx","main/Main.tsx","main/ui/App.tsx","reportWebVitals.ts","index.tsx","features/f1-auth/login/ui-login/LoginForm/LoginForm.module.css","main/ui/common/stylingUtils/navlinkStyling.module.css","main/ui/common/CustomModalWindow/CustomModalWindow.module.css","main/ui/common/CustomRadio/CustomRadio.module.css","features/f2-cards/packs/ui/Packs.module.css","main/ui/common/CustomCheckbox/CustomCheckbox.module.css","features/f2-cards/cards/ui/Cards.module.css","main/ui/common/CustomInput/CustomInput.module.css","main/ui/errorPage/ui/ErrorPage.module.css","main/ui/common/CustomButton/CustomButton.module.css","features/f2-cards/packs/ui/Paginator.module.css","features/f0-test/TestComponent/ui/TestComponent.module.css","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.module.css","main/ui/common/CustomSnackbar/CustomSnackbar.module.css","main/ui/common/CustomPreloader/CustomPreloader.module.css","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.module.css","main/ui/common/SearchComponent/Search.module.css","main/ui/common/DoubleRangeSlider/DoubleRangeSlider.module.css","main/Main.module.css","main/ui/common/CustomTable/CustomTable.module.css","main/ui/header/Header.module.css"],"names":["loginInitialState","error","loading","success","user_id","forgotInitialState","message","profileInitialState","instance","axios","create","baseURL","withCredentials","fridayAPI","email","password","post","RegisterActions","isRegister","type","registerInitialState","setPassInitialState","responseMessage","PacksInitState","packs","packUser_id","recent_pack_id","minCardsCount","maxCardsCount","page","CardsInitState","cards","recent_card_id","errorHandlingInitialState","rootReducer","combineReducers","forgot","state","action","login","userId","profile","register","setPass","id","errorHandling","store","createStore","applyMiddleware","thunk","window","Button","red","className","restProps","finalClassName","s","default","Checkbox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","checkboxLabel","e","currentTarget","checked","customSpan","Input","onChangeText","onKeyPress","onEnter","finalSpanClassName","superInput","input_container","value","key","CustomRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","style","label","radio","design","text","radio_wrapper","TestComponent","testContainer","CustomButton","CustomCheckbox","CustomInput","ForgotForm","props","useState","setLogin","forgotForm","onClick","disabled","to","sUtils","loginLink","forgotAPI","from","ForgotActions","Forgot","dispatch","useDispatch","useSelector","a","res","data","info","response","ForgotTC","LoginActions","loginAPI","delete","me","status","_id","CustomSnackbar","memo","title","timer","visual","setVisual","useEffect","show","setTimeout","clearTimeout","snackbar","Preloader","preloaderContainer","src","preloader","alt","LoginForm","rememberMe","details","setDetails","loginForm","loginGroup","htmlFor","target","rememberMeLabel","PATH","FORGOT","REGISTER","Login","PROFILE","Profile","isAuth","setIsAuth","logout","useCallback","LOGIN","Register","setEmail","pass","repPass","setrepPpass","placeholder","color","then","console","log","catch","loginTC","SetPasswordForm","password1","setPassword1","password2","setPassword2","setPasswordPage","setNewPassword","setError","setPassAPI","resetPasswordToken","SetPassActions","SetPassword","useParams","SetPassTC","CustomModalWindow","active","setActive","modalStylingClass","modal","modal_active","modalContentStylingClass","modal_content","modal_content_active","stopPropagation","ErrorHandlingActions","CardsActions","cardsAPI","cardsPack_id","params","get","pageCount","card","question","grade","Math","floor","random","answer","put","getCards","CardsTable","cardId","addItemCallback","deleteItemCallback","updateItemCallback","saveRecentIdCallback","setModalView","cardIdSaver","titleFiller","t","dataFiller","dataItem","dataIndex","trStyling","tdStyling","date","updated","Date","toLocaleDateString","day","month","year","tableStyling","Search","setValue","searchFunction","search","Sort","sort","sortByMore","sortByFewer","DoubleRangeSlider","onChangeRange","max","min","doubleRangeSlider","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","Cards","minGrade","setMinGrade","maxGrade","setMaxGrade","modalActive","setModalActive","questionFromModal","setQuestionFromModal","answerFromModal","setAnswerFromModal","updateCardHandler","pack_id","updateCard","PACKS","searchUtils","searchBlock","values","searchInputs","cardQuestion","cardAnswer","sortBlock","sortCards","addCard","deleteCard","CustomTable","packIdSaver","cardsCount","CARDS","navlinkStyling","PacksActions","packsAPI","cardsPack","getPacks","cardPacks","Pagination","clickPage","innerHTML","arr","push","fontWeight","pages","Packs","setMin","setMax","getMyPacks","setGetMyPacks","finallyUserId","undefined","titleFromModal","setTitleFromModal","updatePackHandler","packsContainer","packName","sortComponent","sortPacks","deletePack","ErrorPage","error_page","title_404","HOME","SET_PASS","TEST","ERROR_PAGE","Routes","path","exact","render","Header","samePath","nav_container","nav_bar","nav_link","activeClassName","current","Main","mainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a7191a2f.chunk.js","sourcesContent":["\r\nexport type LoginInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    user_id: string | null\r\n}\r\n\r\nexport const loginInitialState: LoginInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false,\r\n    user_id: null\r\n}","\r\nexport type ForgotInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\n\r\nexport const forgotInitialState: ForgotInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: true,\r\n    message: \"\"\r\n}","\r\nexport type ProfileInitState = {\r\n\r\n}\r\n\r\n\r\nexport const profileInitialState: ProfileInitState = {\r\n\r\n}","import axios from 'axios';\r\n\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nexport const instance = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\n\r\nexport const fridayAPI = {\r\n  register(email: string, password: string) {\r\n    const promise = instance.post<ResponseType>('/auth/register', { email, password });\r\n    return promise;\r\n  },\r\n};\r\n\r\nexport type ResponseType = {\r\n  addedUser: Object;\r\n  error?: string;\r\n};\r\n","import { InferActionsType } from '../../../../main/bll/action-types';\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n  setIsRegisterAC: (isRegister: boolean) => ({\r\n    type: 'register/IS-REGISTER',\r\n    isRegister,\r\n  } as const),\r\n};\r\n","export type RegisterInitState = {\r\n  isRegister: boolean;\r\n};\r\n\r\nexport const registerInitialState: RegisterInitState = {\r\n  isRegister: false,\r\n};\r\n","export type SetPassInitState = {\r\n    error: string\r\n    responseMessage: string\r\n    success: boolean\r\n}\r\n\r\n\r\nexport const setPassInitialState: SetPassInitState = {\r\n    error: '',\r\n    responseMessage: '',\r\n    success: true\r\n}","export type PackType = {\r\n  _id: string;\r\n  user_id: string;\r\n  user_name: string;\r\n  private: boolean;\r\n\r\n  name: string;\r\n  path: string;\r\n  grade: number;\r\n  shots: number;\r\n\r\n  cardsCount: number;\r\n  deckCover: string;\r\n\r\n  type: string;\r\n  rating: number;\r\n  more_id: string;\r\n\r\n  created: string;\r\n  updated: string;\r\n};\r\n\r\nexport type PacksStateType = {\r\n    packs: PackType[]\r\n    packUser_id: string\r\n    recent_pack_id: string\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    page: number\r\n\r\n}\r\n\r\nexport const PacksInitState: PacksStateType = {\r\n    packs: [],\r\n    packUser_id: '',\r\n    recent_pack_id: '',\r\n    minCardsCount: 0,\r\n    maxCardsCount: 100,\r\n    page: 1\r\n}\r\n\r\n","export type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n\r\n    questionImg: string\r\n    answerImg: string\r\n    answerVideo: string\r\n    questionVideo: string\r\n\r\n    comments: string\r\n\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type CardsStateType = {\r\n    cards: CardType[]\r\n    recent_card_id: string\r\n}\r\n\r\nexport const CardsInitState: CardsStateType = {\r\n    cards: [],\r\n    recent_card_id: ''\r\n}","\r\nexport type ErrorHandlingInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n\r\n}\r\n\r\nexport const errorHandlingInitialState: ErrorHandlingInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false\r\n}","import { loginReducer } from './../../features/f1-auth/login/bll-login/loginReducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { forgotReducer } from \"../../features/f1-auth/forgot/bll-forgot/forgotReducer\";\r\nimport { profileReducer } from '../../features/f1-auth/profile/bll-profile/profileReducer';\r\nimport { registerReducer } from '../../features/f1-auth/register/bll-register/registerReducer';\r\nimport { setPassReducer } from '../../features/f1-auth/setPass/bll-setPass/setPassReducer';\r\nimport { packsReducer } from '../../features/f2-cards/packs/bll/packsReducer';\r\nimport { cardsReducer } from '../../features/f2-cards/cards/bll/cardsReducer';\r\nimport { errorHandlingReducer } from '../utils/ErrorHandling/bll/errorHandlingReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    setPass: setPassReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    errorHandling: errorHandlingReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\n    window.store = store","import {ForgotActionsType} from \"./forgotActions\";\r\nimport {forgotInitialState, ForgotInitState} from \"./forgotInitState\";\r\n\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: ForgotActionsType): ForgotInitState => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"forgot/SET_SUCCESS\":\r\n            return {...state, success: action.success}\r\n        case \"forgot/SET_MESSAGE\":\r\n            return {...state, message: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { LoginActionsType } from \"./loginActions\";\r\nimport { loginInitialState, LoginInitState } from \"./loginInitState\";\r\n\r\n\r\nexport const loginReducer = (state = loginInitialState, action: LoginActionsType): LoginInitState => {\r\n    switch (action.type) {\r\n        case \"login/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"login/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_USER_ID\": {\r\n            return {\r\n                ...state,\r\n                user_id: action.userId\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { ProfileActionsType } from \"./profileActions\";\r\nimport { profileInitialState, ProfileInitState } from \"./profileInitState\";\r\n\r\n\r\nexport const profileReducer = (state = profileInitialState, action: ProfileActionsType): ProfileInitState => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { fridayAPI } from './api-instance';\r\nimport { RegisterActions, RegisterActionsType } from './registerActions';\r\nimport { registerInitialState, RegisterInitState } from './registerInitState';\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActionsType): RegisterInitState => {\r\n  switch (action.type) {\r\n    case 'register/IS-REGISTER':\r\n      return { ...state, isRegister: action.isRegister };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginTC = (email: string, password: string) => (dispatch: Dispatch<RegisterActionsType>) => {\r\n  fridayAPI\r\n    .register(email, password)\r\n    .then((res) => {\r\n      console.log('res');\r\n      dispatch(RegisterActions.setIsRegisterAC(true));\r\n    })\r\n    .catch((error) => {\r\n      console.log('error');\r\n    });\r\n};\r\n","import {SetPassActionsType} from \"./setPassActions\";\r\nimport {setPassInitialState, SetPassInitState} from \"./setPassInitState\";\r\n\r\n\r\nexport const setPassReducer = (state = setPassInitialState, action: SetPassActionsType): SetPassInitState => {\r\n    switch (action.type) {\r\n        case 'setPass/SET_ERROR':\r\n            return {...state, error: action.error}\r\n        case 'setPass/SET_SUCCESS':\r\n            return {...state, success: action.success}\r\n        case 'setPass/SET_MESSAGE':\r\n            return {...state, responseMessage: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { PacksActionsType } from './packsActions'\r\nimport {PacksInitState, PacksStateType} from './packsInitState'\r\n\r\nexport const packsReducer = (state = PacksInitState, action: PacksActionsType): PacksStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET_PACKS\": {\r\n            return {\r\n                ...state,\r\n                packs: action.packs\r\n            }\r\n        }\r\n        case \"packs/SET_PACK_ID\": {\r\n            return {\r\n                ...state,\r\n                recent_pack_id: action.id\r\n            }\r\n        }\r\n        case 'packs/SET_MIN_CARDS_COUNT': {\r\n            return {\r\n                ...state,\r\n                minCardsCount: action.minCardsCount\r\n            }\r\n        }\r\n        case 'packs/SET_MAX_CARDS_COUNT': {\r\n            return {\r\n                ...state,\r\n                maxCardsCount: action.maxCardsCount\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {CardsActionsType} from './cardsActions'\r\nimport {CardsInitState, CardsStateType} from './cardsInitState'\r\n\r\nexport const cardsReducer = (state = CardsInitState, action: CardsActionsType): CardsStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET_CARDS\": {\r\n            return {\r\n                ...state,\r\n                cards: action.cards\r\n            }\r\n        }\r\n        case 'cards/SET_CARD_ID': {\r\n            return {\r\n                ...state,\r\n                recent_card_id: action.id\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ErrorHadnlingActionsType } from \"./errorHandlingActions\";\r\nimport { errorHandlingInitialState, ErrorHandlingInitState } from \"./errorHandlingInitState\";\r\n\r\nexport const errorHandlingReducer = (state = errorHandlingInitialState, action: ErrorHadnlingActionsType): ErrorHandlingInitState => {\r\n    switch (action.type) {\r\n        case \"errorHandling/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"errorHandling/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"errorHandling/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from './CustomButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default Button;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./CustomCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.checkboxLabel}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            /><span className={s.customSpan}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n        // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default Checkbox;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./CustomInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.input_container}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport style from './CustomRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst CustomRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label className={style.label} key={name + \"-\" + i}>\n            <input className={style.radio}\n                name={name}\n                onChange={onChangeCallback}\n                type={\"radio\"}\n                value={o}\n                checked={value === o}\n                // name, checked, value, onChange\n            />\n            <div className={style.design}></div>\n            <span className={style.text}>\n                {o}\n            </span>\n\n        </label>\n    )) : [];\n\n    return (\n        <div className={style.radio_wrapper}>\n            {mappedOptions}\n        </div>\n    );\n}\n\nexport default CustomRadio;\n","import React from \"react\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomRadio from \"../../../../main/ui/common/CustomRadio/CustomRadio\"\r\nimport s from './TestComponent.module.css'\r\n\r\nexport const TestComponent = () => {\r\n    return (\r\n        <div className={s.testContainer}>\r\n            <CustomButton>test</CustomButton>\r\n            <CustomCheckbox />\r\n            <CustomInput />\r\n            <CustomRadio options={[1, 2]} />\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport s from './ForgotForm.module.css'\r\n\r\n\r\ntype ForgotFormPropsType = {\r\n    forgot: (email: string) => void\r\n    error: string\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\nexport const ForgotForm = (props: ForgotFormPropsType) => {\r\n    const [login, setLogin] = useState('')\r\n    const onLoginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.forgotForm}>\r\n            <div>Your login</div>\r\n            {props.error !== '' && props.error}\r\n            {props.message !== '' && props.message}\r\n            <CustomInput type=\"text\" value={login} onChange={onLoginChange}/>\r\n            <div><CustomButton onClick={() => props.forgot(login)} disabled={!props.success}>send</CustomButton></div>\r\n            <div>\r\n                <NavLink to={'/login'} className={sUtils.loginLink}>Login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const forgotAPI = {\r\n    forgot(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"roman\",\r\n            message: `<div style=\"background-color: black; border-radius: 15px; color: #FFFFFF; padding: 15px\">password recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type ForgotActionsType = InferActionsType<typeof ForgotActions>;\r\n\r\nexport const ForgotActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"forgot/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"forgot/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setMessage: (message: string) =>\r\n        ({\r\n            type: \"forgot/SET_MESSAGE\",\r\n            message,\r\n        } as const)\r\n\r\n}","import {ForgotForm} from \"./ForgotForm/ForgotForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ForgotTC} from \"../bll-forgot/forgotThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\n\r\n\r\nexport const Forgot = () => {\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.forgot.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.forgot.success)\r\n    const message = useSelector<AppStoreType, string>(state => state.forgot.message)\r\n    const forgot = (email: string) => {\r\n        dispatch(ForgotTC(email))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ForgotForm forgot={forgot} error={error} success={success} message={message}/>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {forgotAPI} from \"../dal-forgot/forgotInstance\";\r\nimport {ForgotActions} from \"./forgotActions\";\r\n\r\nexport const ForgotTC = (email: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(ForgotActions.setSuccess(false))\r\n        const res = await forgotAPI.forgot(email)\r\n        dispatch(ForgotActions.setSuccess(true))\r\n        dispatch(ForgotActions.setMessage(res.data.info))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(ForgotActions.setError(error))\r\n        dispatch(ForgotActions.setSuccess(true))\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"login/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setLoading: (loading: boolean) =>\r\n        ({\r\n            type: \"login/SET_LOADING\",\r\n            loading,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"login/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setUserId: (userId: string) =>\r\n        ({\r\n            type: \"login/SET_USER_ID\",\r\n            userId\r\n        } as const)\r\n};\r\n","import axios from \"axios\";\r\nimport { devURL, herokuURL } from \"./baseURLs\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    baseURL: herokuURL,\r\n    withCredentials: true,\r\n});","export const devURL = 'http://localhost:7542/2.0/'\r\nexport const herokuURL = 'https://neko-back.herokuapp.com/2.0/'","import { instance } from \"../../../../main/dal/instance\";\r\n\r\nexport const loginAPI = {\r\n    signIn(data: LoginDetailsType) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    signOut() {\r\n        return instance.delete('auth/me')\r\n    },\r\n    me() {\r\n        return instance.post('auth/me')\r\n    }\r\n}\r\n\r\nexport type LoginDetailsType = {\r\n    email: string | ReadonlyArray<string> | number\r\n    password: string | ReadonlyArray<string> | number\r\n    rememberMe: boolean\r\n}","import { ProfileActionsType } from './../../profile/bll-profile/profileActions';\r\nimport { LoginActions, LoginActionsType } from './loginActions';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\nimport { loginAPI, LoginDetailsType } from '../dal-login/loginInstance';\r\n\r\nexport const signIn = (\r\n  data: LoginDetailsType\r\n): ThunkAction<void, AppStoreType, unknown, LoginActionsType | ProfileActionsType> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signIn(data);\r\n    dispatch(LoginActions.setSuccess(true));\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response ? e.response.data.error : e.message + ', more details in the console';\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const signOut = (): ThunkAction<void, AppStoreType, unknown, LoginActionsType> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signOut();\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response ? e.response.data.error : e.message + ', more details in the console';\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const me = (): ThunkAction<void, AppStoreType, unknown, LoginActionsType> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.me();\r\n    if(res.status === 200) {\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setSuccess(true))\r\n    dispatch(LoginActions.setUserId(res.data._id))\r\n    }\r\n  } catch (e) {\r\n    const error = e.response ? e.response.data.error : e.message + ', more details in the console';\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n","import s from './CustomSnackbar.module.css'\r\nimport { FC, memo, useEffect, useState } from 'react'\r\n\r\ntype CustomSnackbarType = {\r\n    title: string\r\n    timer: number\r\n}\r\n\r\nexport const CustomSnackbar: FC<CustomSnackbarType> = memo(({ title, timer }) => {\r\n\r\n    const [visual, setVisual] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        setVisual(() => true)\r\n        const show = setTimeout(() => {\r\n            setVisual(() => false)\r\n        }, timer)\r\n        return () => {\r\n            clearTimeout(show)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                visual &&\r\n                <div className={s.snackbar}>\r\n                    {title}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/dbringload.46fb05e0.svg\";","import preloader from './../../../assets/dbringload.svg'\r\nimport s from './CustomPreloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (<div className={s.preloaderContainer}>\r\n        <img src={preloader} alt='Loading...' />\r\n    </div>)\r\n}","import React, { ChangeEvent, FC, memo, MouseEvent, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport CustomButton from '../../../../../main/ui/common/CustomButton/CustomButton'\r\nimport CustomCheckbox from '../../../../../main/ui/common/CustomCheckbox/CustomCheckbox'\r\nimport CustomInput from '../../../../../main/ui/common/CustomInput/CustomInput'\r\nimport s from './LoginForm.module.css'\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport { LoginDetailsType } from '../../dal-login/loginInstance'\r\nimport { PATH } from '../../../../../main/ui/routes/Routes'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStoreType } from '../../../../../main/bll/store'\r\nimport { CustomSnackbar } from '../../../../../main/ui/common/CustomSnackbar/CustomSnackbar'\r\nimport { Preloader } from '../../../../../main/ui/common/CustomPreloader/CustomPreloader'\r\n\r\ntype LoginFormType = {\r\n    login: (userDetails: LoginDetailsType) => void\r\n    error: string\r\n}\r\n\r\nexport const LoginForm: FC<LoginFormType> = memo(({ login, error }) => {\r\n\r\n    const [details, setDetails] = useState<LoginDetailsType>({ email: 'nya-admin@nya.nya', password: '1qazxcvBG', rememberMe: false })\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n\r\n    const emailOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, email: e.target.value })\r\n    }\r\n\r\n    const passwordOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, password: e.target.value })\r\n    }\r\n\r\n    const rememberMeOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, rememberMe: e.target.checked })\r\n    }\r\n\r\n    const detailsWrap = (e: MouseEvent<HTMLButtonElement>) => {\r\n        login(details)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <>\r\n                    {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n                    <div className={s.loginForm}>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='email'>Email:</label>\r\n                            <CustomInput onChange={emailOnChangeHandler} value={details.email} type='email' name='email' id='email' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='password'>Password:</label>\r\n                            <CustomInput onChange={passwordOnChangeHandler} value={details.password} type='password' name='password' id='password' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomCheckbox onChange={rememberMeOnChangeHandler} checked={details.rememberMe} />\r\n                            <label className={s.rememberMeLabel}>remember me</label>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomButton type={'submit'} onClick={detailsWrap} disabled={loading}>Sign in</CustomButton>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <NavLink to={PATH.FORGOT} className={sUtils.loginLink}>forgot?</NavLink>\r\n                            <NavLink to={PATH.REGISTER} className={sUtils.loginLink}>register</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n})","import { memo, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { LoginActions } from \"../bll-login/loginActions\"\r\nimport { signIn } from \"../bll-login/loginThunks\"\r\nimport { LoginDetailsType } from \"../dal-login/loginInstance\"\r\nimport { LoginForm } from \"./LoginForm/LoginForm\"\r\n\r\nexport const Login = memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n\r\n    useEffect(() => {\r\n        dispatch(LoginActions.setError(''))\r\n    }, [dispatch])\r\n\r\n    const login = (details: LoginDetailsType) => {\r\n        dispatch(signIn(details))\r\n    }\r\n\r\n    if (success) return <Redirect to={PATH.PROFILE} />\r\n\r\n    return (\r\n        <>\r\n            <LoginForm login={login} error={error}/>\r\n        </>\r\n    )\r\n})","import React, { useCallback, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { me, signOut } from \"../../login/bll-login/loginThunks\"\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n    const [isAuth, setIsAuth] = useState<boolean>(success)\r\n\r\n    useEffect(() => {\r\n        dispatch(me())\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(signOut())\r\n        setIsAuth(() => false)\r\n    }, [])\r\n\r\n    if (!isAuth) { return <Redirect to={PATH.LOGIN} /> }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <>\r\n                    <span>You are authorized</span>\r\n                    <CustomButton onClick={logout} disabled={loading}>\r\n                        Log Out\r\n                    </CustomButton>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","import { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Button from '../../../../main/ui/common/CustomButton/CustomButton';\r\nimport Input from '../../../../main/ui/common/CustomInput/CustomInput';\r\nimport { PATH } from '../../../../main/ui/routes/Routes';\r\nimport { loginTC } from '../bll-register/registerReducer';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\n\r\nexport const Register = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isRegister = useSelector<AppStoreType, boolean>((state) => state.register.isRegister);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [repPass, setrepPpass] = useState('');\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n  const changePass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPass(e.currentTarget.value);\r\n  };\r\n  const changeRepPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setrepPpass(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(loginTC(email, pass));\r\n  };\r\n\r\n  if (isRegister) {\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      Register Page\r\n      <Input value={email} onChange={changeEmail} placeholder={'Enter your email'} />\r\n      <Input value={pass} onChange={changePass} type={'password'} placeholder={'Enter your pass'} />\r\n      {pass !== repPass ? <div style={{ color: 'red' }}>Passwords should be equal </div> : null}\r\n      <Input value={repPass} onChange={changeRepPass} type={'password'} placeholder={'Repeat pass'} />\r\n      <Button onClick={onSubmit}>register</Button>\r\n      <NavLink to={PATH.LOGIN}>Sign in</NavLink>\r\n    </>\r\n  );\r\n};\r\n","import CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport s from './SetPasswordForm.module.css'\r\n\r\ntype SetPasswordType = {\r\n    setNewPassword: (password: string) => void\r\n    success: boolean\r\n    error: string\r\n    responseMessage: string\r\n    setError: (error: string) => void\r\n}\r\n\r\nexport const SetPasswordForm = (props: SetPasswordType) => {\r\n\r\n    const [password1, setPassword1] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const onPassword1Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.target.value)\r\n    }\r\n    const onPassword2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.target.value)\r\n    }\r\n\r\n    const onSetPasswordClickHandler = () => {\r\n        password1 === password2 ? props.setNewPassword(password1) : props.setError('Passwords must match')\r\n    }\r\n\r\n    return (\r\n        <div className={s.setPasswordPage}>\r\n            {props.error !== '' && props.error}\r\n            {props.responseMessage !== '' && props.responseMessage}\r\n            <div><CustomInput type={'password'} value={password1} onChange={onPassword1Change}/></div>\r\n            <div><CustomInput type={'password'} value={password2} onChange={onPassword2Change}/></div>\r\n            <div><CustomButton onClick={onSetPasswordClickHandler} disabled={!props.success}>Set Password</CustomButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const setPassAPI = {\r\n    setPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type SetPassActionsType = InferActionsType<typeof SetPassActions>;\r\n\r\nexport const SetPassActions = {\r\n    setError: (error: string) => ({\r\n        type: 'setPass/SET_ERROR',\r\n        error\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'setPass/SET_SUCCESS',\r\n        success\r\n    } as const),\r\n    setResponseMessage: (message: string) => ({\r\n        type: 'setPass/SET_MESSAGE',\r\n        message\r\n    } as const)\r\n}","import React from \"react\"\r\nimport {SetPasswordForm} from \"./SetPasswordForm/SetPasswordForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {SetPassTC} from \"../bll-setPass/setPassThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {SetPassActions} from \"../bll-setPass/setPassActions\";\r\n\r\nexport const SetPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.setPass.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.setPass.success)\r\n    const responseMessage = useSelector<AppStoreType, string>(state => state.setPass.responseMessage)\r\n    const {id} = useParams<{ id: string }>();\r\n    const setNewPassword = (password: string) => {\r\n        if (id && id !== ':id') {\r\n\r\n            dispatch(SetPassTC(password, id))\r\n        } else if (id === ':id') {\r\n            dispatch(SetPassActions.setError('If you want to change your password you should open this page using link'))\r\n        }\r\n    }\r\n\r\n    const setError = (error: string) => {\r\n        dispatch(SetPassActions.setError(error))\r\n    }\r\n\r\n    return (\r\n        <SetPasswordForm setNewPassword={setNewPassword} error={error} success={success}\r\n                         responseMessage={responseMessage} setError={setError}/>\r\n    )\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {setPassAPI} from \"../dal-setPass/setPassInstance\";\r\nimport {SetPassActions} from \"./setPassActions\";\r\n\r\nexport const SetPassTC = (email: string, id: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        const res = await setPassAPI.setPassword(email, id)\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        dispatch(SetPassActions.setResponseMessage(res.data.info))\r\n        dispatch(SetPassActions.setError(''))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(SetPassActions.setError(error))\r\n        dispatch(SetPassActions.setSuccess(true))\r\n    }\r\n}\r\n","import { FC } from 'react'\r\nimport s from './CustomModalWindow.module.css'\r\n\r\ninterface ICustomModalWindow {\r\n    active: boolean\r\n    setActive: (flag: boolean) => void\r\n}\r\n\r\nexport const CustomModalWindow: FC<ICustomModalWindow> = ({active, setActive, children}) => {\r\n    const modalStylingClass = active ? `${s.modal} ${s.modal_active}` : `${s.modal}`\r\n    const modalContentStylingClass = active ? `${s.modal_content} ${s.modal_content_active}` : `${s.modal_content}`\r\n    return (\r\n        <div className={modalStylingClass} onClick={() => setActive(false)}>\r\n            <div className={modalContentStylingClass} onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { InferActionsType } from \"../../../bll/action-types\";\r\n\r\nexport type ErrorHadnlingActionsType = InferActionsType<typeof ErrorHandlingActions>;\r\n\r\nexport const ErrorHandlingActions = {\r\n    setError: (error: string) =>\r\n    ({\r\n      type: \"errorHandling/SET_ERROR\",\r\n      error,\r\n    } as const),\r\n    setLoading: (loading: boolean) =>\r\n    ({\r\n      type: \"errorHandling/SET_LOADING\",\r\n      loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) =>\r\n    ({\r\n      type: \"errorHandling/SET_SUCCESS\",\r\n      success,\r\n    } as const),\r\n};","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\nimport {CardType} from \"./cardsInitState\";\r\n\r\n\r\nexport type CardsActionsType = InferActionsType<typeof CardsActions>\r\n\r\nexport const CardsActions = {\r\n    setCards: (cards: CardType[]) => ({\r\n        type: 'cards/SET_CARDS',\r\n        cards\r\n    } as const),\r\n    setCardId: (id: string) => ({\r\n        type: 'cards/SET_CARD_ID',\r\n        id\r\n    } as const),\r\n}","import {instance} from \"../../../../main/dal/instance\";\r\nimport {CardType} from \"../bll/cardsInitState\";\r\n\r\ntype GetCardsDataType = {\r\n    cards: CardType[];\r\n    error: string;\r\n    maxGrade: number;\r\n    minGrade: number\r\n};\r\n\r\nexport type GetCardsParamsType = {\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n    cardQuestion?: string\r\n    cardAnswer?: string\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPack_id: string, params?: GetCardsParamsType) {\r\n        return instance.get<GetCardsDataType>(\r\n            `cards/card?cardsPack_id=${cardsPack_id}`, {\r\n                params: {\r\n                    pageCount: 100,\r\n                    ...params\r\n                }\r\n            }\r\n        );\r\n    },\r\n  addCard(cardsPack_id: string) {\r\n    return instance.post(\"cards/card\", {\r\n      card: {\r\n        cardsPack_id,\r\n        question: \"Why are we here?\",\r\n        grade: Math.floor(Math.random() * 5),\r\n        answer: \"Just to suffer\",\r\n      },\r\n    });\r\n  },\r\n  deleteCard(id: string) {\r\n    return instance.delete(`cards/card?&id=${id}`);\r\n  },\r\n  updateCard(id: string, question: string, answer: string) {\r\n    return instance.put(`cards/card`, {\r\n      card: {\r\n        _id: id,\r\n        question,\r\n        answer,\r\n      },\r\n    });\r\n  },\r\n};\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {\r\n    ErrorHadnlingActionsType,\r\n    ErrorHandlingActions,\r\n} from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport {cardsAPI, GetCardsParamsType} from \"../dal/cardsInstance\";\r\nimport {CardsActions, CardsActionsType} from \"./cardsActions\";\r\n\r\nexport const getCards = (\r\n    id: string, params?: GetCardsParamsType\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHadnlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .getCards(id, params)\r\n        .then(({data}) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(CardsActions.setCards(data.cards));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const addCard = (\r\n    id: string\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHadnlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .addCard(id)\r\n        .then(({data}) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(getCards(id));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const deleteCard = (\r\n    id: string,\r\n    pack_id: string\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHadnlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .deleteCard(id)\r\n        .then((data) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(getCards(pack_id));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const updateCard = (\r\n  id: string,\r\n  pack_id: string,\r\n  question: string,\r\n  answer: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  CardsActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  cardsAPI\r\n    .updateCard(id, question, answer)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getCards(pack_id));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n","import React, { FC, memo } from \"react\";\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport s from './../../../../main/ui/common/CustomTable/CustomTable.module.css';\r\n\r\nexport type CardsTablePropsType = {\r\n    title: string[]\r\n    data?: any\r\n    cardId: string\r\n    disabled: boolean\r\n    addItemCallback?: (id: string) => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n    saveRecentIdCallback?: (id: string) => void\r\n    setModalView?: (flag: boolean) => void\r\n\r\n}\r\n\r\nexport const CardsTable: FC<CardsTablePropsType> = memo(({ title, data, cardId, disabled, addItemCallback, deleteItemCallback, updateItemCallback, saveRecentIdCallback, setModalView }) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback(cardId)\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n        cardIdSaver(id)\r\n        setModalView && setModalView(true)\r\n    }\r\n\r\n    const cardIdSaver = (id: string) => {\r\n        saveRecentIdCallback && saveRecentIdCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling} key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.question}</td>\r\n        <td className={s.tdStyling}>{dataItem.answer}</td>\r\n        <td className={s.tdStyling}>{dataItem.grade}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)} disabled={disabled}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)} disabled={disabled}>del</CustomButton>\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                    <tr>\r\n                        {titleFiller}\r\n                        <th><CustomButton onClick={onAddItemButtonClick} disabled={disabled}>Add</CustomButton></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport CustomInput from \"../CustomInput/CustomInput\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport s from './Search.module.css'\r\n\r\n\r\ntype SearchPropsType = {\r\n    placeholder?: string\r\n    searchFunction: (value: string) => void\r\n}\r\nexport const Search = (props: SearchPropsType) => {\r\n    const [value, setValue] = useState(\"\")\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        e.key === 'Enter' && props.searchFunction(value)\r\n    }\r\n    const Search = () => {\r\n        props.searchFunction(value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.search}>\r\n            <CustomInput placeholder={props.placeholder} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}/>\r\n            <CustomButton onClick={Search}>Search</CustomButton>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport s from './Sort.module.css'\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\n\r\ntype SortPropsType = {\r\n    sortByMore: () => void\r\n    sortByFewer: () => void\r\n}\r\n\r\nexport const Sort = (props: SortPropsType) => {\r\n\r\n    return (\r\n        <div className={s.sort}>\r\n            <CustomButton onClick={props.sortByMore}>/\\</CustomButton>\r\n            <CustomButton onClick={props.sortByFewer}>\\/</CustomButton>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\nimport s from './DoubleRangeSlider.module.css'\r\n\r\ntype DoubleRangeSliderProps = {\r\n    onChangeRange?: (value: [number, number]) => void\r\n    value?: [number, number]\r\n    min?: number\r\n    max?: number\r\n}\r\nexport const DoubleRangeSlider: React.FC<DoubleRangeSliderProps> = (\r\n    {\r\n        onChangeRange, value, max, min\r\n    }) => {\r\n\r\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\r\n        if (typeof (newValue) !== 'number') {\r\n            onChangeRange && onChangeRange([newValue[0], newValue[1]]);\r\n        }\r\n    };\r\n\r\n    function valuetext(value: number) {\r\n        return `${value}`;\r\n    }\r\n\r\n    return (\r\n        <div className={s.doubleRangeSlider}>\r\n            <Slider value={value} min={min} max={max} onChange={handleSliderChange} valueLabelDisplay={'auto'}\r\n                    aria-labelledby={\"range-slider\"} getAriaValueText={valuetext}/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink, useParams } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport { CustomModalWindow } from \"../../../../main/ui/common/CustomModalWindow/CustomModalWindow\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { CustomSnackbar } from \"../../../../main/ui/common/CustomSnackbar/CustomSnackbar\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { ErrorHandlingActions } from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\"\r\nimport { CardsActions } from \"../bll/cardsActions\"\r\nimport { CardType } from \"../bll/cardsInitState\"\r\nimport { addCard, deleteCard, getCards, updateCard } from \"../bll/cardsThunks\"\r\nimport { CardsTable } from \"./CardsTable\"\r\nimport {Search} from \"../../../../main/ui/common/SearchComponent/SearchComponent\";\r\nimport {Sort} from \"../../../../main/ui/common/SortComponent/Sort\";\r\nimport {DoubleRangeSlider} from \"../../../../main/ui/common/DoubleRangeSlider/DoubleRangeSlider\";\r\nimport s from './Cards.module.css'\r\n\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cards.cards)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.errorHandling.error)\r\n    \r\n    const [minGrade, setMinGrade] = useState(0)\r\n    const [maxGrade, setMaxGrade] = useState(6)\r\n\r\n    const recent_card_id = useSelector<AppStoreType, string>(state => state.cards.recent_card_id)\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    const [questionFromModal, setQuestionFromModal] = useState<string>('')\r\n    const [answerFromModal, setAnswerFromModal] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        dispatch(getCards(id))\r\n    }, [dispatch, id])\r\n\r\n    const addCardHandler = (id: string) => {\r\n        dispatch(addCard(id))\r\n    }\r\n\r\n    const deleteCardHandler = (cardId: string) => {\r\n        dispatch(deleteCard(cardId, id))\r\n    }\r\n\r\n    const updateCardHandler = () => {\r\n        dispatch(updateCard(recent_card_id, id, questionFromModal, answerFromModal))\r\n        setModalActive(false)\r\n        setQuestionFromModal('')\r\n        setAnswerFromModal('')\r\n    }\r\n\r\n    const cardIdSaver = (id: string) => {\r\n        dispatch(CardsActions.setCardId(id))\r\n    }\r\n\r\n    const searchByQuestion = (cardQuestion: string) => {\r\n        dispatch(getCards(id, {cardQuestion, min: minGrade, max: maxGrade}))\r\n    }\r\n\r\n    const searchByAnswer = (cardAnswer: string) => {\r\n        dispatch(getCards(id, {cardAnswer, min: minGrade, max: maxGrade}))\r\n    }\r\n\r\n    const sortByHigher = () => {\r\n        dispatch(getCards(id, {sortCards: \"0grade\"}))\r\n    }\r\n\r\n    const sortByLower = () => {\r\n        dispatch(getCards(id, {sortCards: \"1grade\"}))\r\n    }\r\n\r\n    const onSearchingGradesChange = (values: [number, number]) => {\r\n        setMinGrade(values[0])\r\n        setMaxGrade(values[1])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            Cards Page\r\n            {loading && <Preloader/>}\r\n            {error !== '' && <CustomSnackbar title={error} timer={3000}/>}\r\n            <NavLink to={PATH.PACKS}><CustomButton>Back</CustomButton></NavLink>\r\n            SearchByQuestion\r\n            <div className={s.searchUtils}>\r\n                <div className={s.searchBlock}>\r\n                    Grade range:\r\n                    <DoubleRangeSlider min={0} max={6} value={[minGrade, maxGrade]}\r\n                                       onChangeRange={onSearchingGradesChange}/>\r\n                    Enter card question or enter card answer:\r\n                    <div className={s.searchInputs}>\r\n                        <Search placeholder={\"Enter card question\"} searchFunction={searchByQuestion}/>\r\n                        <Search placeholder={\"Enter card answer\"} searchFunction={searchByAnswer}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.sortBlock}>\r\n                    Sort by grade:\r\n                    <Sort sortByMore={sortByHigher} sortByFewer={sortByLower}/>\r\n                </div>\r\n            </div>\r\n            <CardsTable title={['question', 'answer', 'grade', 'udated', 'url']}\r\n                data={cards} cardId={id}\r\n                addItemCallback={addCardHandler}\r\n                deleteItemCallback={deleteCardHandler}\r\n                saveRecentIdCallback={cardIdSaver}\r\n                setModalView={setModalActive}\r\n                disabled={loading}/>\r\n            <CustomModalWindow active={modalActive} setActive={setModalActive}>\r\n                <p>Change Question and Answer</p>\r\n                <p>Question</p>\r\n                <CustomInput value={questionFromModal} onChange={e => setQuestionFromModal(e.target.value)}/>\r\n                <p>Answer</p>\r\n                <CustomInput value={answerFromModal} onChange={e => setAnswerFromModal(e.target.value)}/>\r\n                <CustomButton onClick={() => updateCardHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n        </>\r\n    )\r\n}","import React, { FC, memo } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { PATH } from \"../../routes/Routes\"\r\nimport CustomButton from './../CustomButton/CustomButton'\r\nimport navlinkStyling from './../stylingUtils/navlinkStyling.module.css'\r\nimport s from './CustomTable.module.css'\r\n\r\nexport type CustomTablePropsType = {\r\n    title: string[]\r\n    data: any\r\n    addItemCallback?: () => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n    saveRecentIdCallback?: (id: string) => void\r\n    setModalView?: (flag: boolean) => void\r\n\r\n    disabled?: boolean\r\n\r\n}\r\n\r\nexport const CustomTable: FC<CustomTablePropsType> = memo(({ title, data, disabled, addItemCallback, deleteItemCallback, updateItemCallback, saveRecentIdCallback, setModalView}) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback()\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n        packIdSaver(id)\r\n        setModalView && setModalView(true)\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        saveRecentIdCallback && saveRecentIdCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling} key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.name}</td>\r\n        <td className={s.tdStyling}>{dataItem.cardsCount}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)} disabled={disabled}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)} disabled={disabled}>del</CustomButton>\r\n            <NavLink to={`${PATH.CARDS}/${dataItem._id}`} className={navlinkStyling.loginLink} onClick={() => packIdSaver(dataItem._id)}>Cards</NavLink>\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                    <tr>\r\n                        {titleFiller}\r\n                        <th><CustomButton onClick={onAddItemButtonClick} disabled={disabled}>Add</CustomButton></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import { InferActionsType } from \"../../../../main/bll/action-types\";\r\nimport { PackType } from \"./packsInitState\";\r\n\r\n\r\nexport type PacksActionsType = InferActionsType<typeof PacksActions>\r\n\r\nexport const PacksActions = {\r\n    setPacks: (packs: PackType[]) =>\r\n    ({\r\n      type: \"packs/SET_PACKS\",\r\n      packs,\r\n    } as const),\r\n    setPage: (page: number) =>\r\n    ({\r\n      type: \"page/SET_PAGE\",\r\n      page,\r\n    } as const),\r\n    setPackId: (id: string) => ({\r\n      type: 'packs/SET_PACK_ID',\r\n      id\r\n  } as const),\r\n    setMinCardsCount: (minCardsCount: number) => ({\r\n        type: 'packs/SET_MIN_CARDS_COUNT',\r\n        minCardsCount\r\n    } as const),\r\n    setMaxCardsCount: (maxCardsCount: number) => ({\r\n        type: 'packs/SET_MAX_CARDS_COUNT',\r\n        maxCardsCount\r\n    } as const),\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { instance } from \"../../../../main/dal/instance\";\r\nimport { PackType } from \"../bll/packsInitState\";\r\n// Conflict №3 Unnecessary url import\r\n\r\n\r\nexport type ParamsType = {\r\n  packName?: string | undefined;\r\n  min?: number | undefined;\r\n  max?: number | undefined;\r\n  sortPacks?: string | undefined;\r\n  page?: number | undefined;\r\n  pageCount?: number | undefined;\r\n  user_id?: string | undefined;\r\n};\r\n\r\nexport const packsAPI = {\r\n  getPacks(params: ParamsType) {\r\n    return instance.get<GetDataType>('cards/pack', {\r\n      params: {\r\n        pageCount: 100,\r\n        ...params,\r\n      },\r\n    });\r\n  },\r\n  addPack() {\r\n    return instance.post('cards/pack', {\r\n      cardsPack: {\r\n        name: 'adding pack test',\r\n      },\r\n    });\r\n  },\r\n  deletePack(id: string) {\r\n    return instance.delete(`cards/pack?id=${id}`);\r\n  },\r\n  updatePack(id: string, name: string) {\r\n    return instance.put('cards/pack', {\r\n      cardsPack: {\r\n        _id: id,\r\n        name,\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport type GetDataType = {\r\n  cardPacks: PackType[];\r\n  error: string;\r\n  cardPacksTotalCount: number;\r\n  maxCardsCount: number;\r\n  minCardsCount: number;\r\n  page: number;\r\n  pageCount: number;\r\n  token: string;\r\n  tokenDeathTime: number;\r\n};\r\n\r\n","import {\r\n    ErrorHandlingActions,\r\n    ErrorHadnlingActionsType,\r\n} from \"./../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {packsAPI, ParamsType} from \"../dal/packsInstance\";\r\nimport {PacksActions, PacksActionsType} from \"./packsActions\";\r\n\r\n//Conflict №5 Difference in thunks for some reason (3 old ones)\r\nexport const getPacks = (\r\n    params: ParamsType\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    PacksActionsType | ErrorHadnlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    packsAPI\r\n        .getPacks(params)\r\n        .then(({data}) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(PacksActions.setPacks(data.cardPacks));\r\n            dispatch(PacksActions.setMinCardsCount(data.minCardsCount));\r\n            dispatch(PacksActions.setMaxCardsCount(data.maxCardsCount));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const addPack = (): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    PacksActionsType | ErrorHadnlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    packsAPI\r\n        .addPack()\r\n        .then((data) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(getPacks({}));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const deletePack = (\r\n    id: string\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    PacksActionsType | ErrorHadnlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    packsAPI\r\n        .deletePack(id)\r\n        .then((data) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(getPacks({}));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const updatePack = (\r\n  id: string, name: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .updatePack(id, name)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getPacks({}));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n","import { MouseEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\nimport { getPacks } from '../bll/packsThunks';\r\n\r\nimport s from './Paginator.module.css';\r\n\r\nexport const Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const page = useSelector<AppStoreType, number>((state) => state.packs.page);\r\n\r\n  const clickPage = (event: MouseEvent<HTMLButtonElement>) => {\r\n    //dispatch(PacksActions.setPage(+event.currentTarget.innerHTML));\r\n    dispatch(getPacks({page: +event.currentTarget.innerHTML}));\r\n    console.log(event.currentTarget)\r\n  };\r\n  const arr = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    arr.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <span style={{ fontWeight: 'bold' }}>Pages:</span>{' '}\r\n      {arr.map((pages, id) => {\r\n        return (\r\n          <span key={id} className={`${page - 1 === id ? s.active : ''} ${s.page}`} onClick={clickPage}>\r\n            {pages}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { CustomSnackbar } from \"../../../../main/ui/common/CustomSnackbar/CustomSnackbar\"\r\nimport { CustomTable } from \"../../../../main/ui/common/CustomTable/CustomTable\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { ErrorHandlingActions } from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\"\r\nimport { me } from \"../../../f1-auth/login/bll-login/loginThunks\"\r\nimport { PacksActions } from \"../bll/packsActions\"\r\nimport { addPack, deletePack, getPacks, updatePack } from \"../bll/packsThunks\"\r\nimport { Pagination } from \"./Paginator\"\r\nimport s from './Packs.module.css'\r\nimport { CustomModalWindow } from \"../../../../main/ui/common/CustomModalWindow/CustomModalWindow\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { PackType } from \"../bll/packsInitState\"\r\nimport {Sort} from \"../../../../main/ui/common/SortComponent/Sort\";\r\nimport {Search} from \"../../../../main/ui/common/SearchComponent/SearchComponent\";\r\nimport {DoubleRangeSlider} from \"../../../../main/ui/common/DoubleRangeSlider/DoubleRangeSlider\";\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\";\r\n\r\n\r\nexport const Packs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const packs = useSelector<AppStoreType, PackType[]>(state => state.packs.packs)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.errorHandling.error)\r\n\r\n    const minCardsCount = useSelector<AppStoreType, number>(state => state.packs.minCardsCount)\r\n    const maxCardsCount = useSelector<AppStoreType, number>(state => state.packs.maxCardsCount)\r\n    const userId = useSelector<AppStoreType, string | null>(state => state.login.user_id)\r\n    const [min, setMin] = useState(minCardsCount)\r\n    const [max, setMax] = useState(maxCardsCount)\r\n    const [getMyPacks, setGetMyPacks] = useState(false)\r\n    const finallyUserId = getMyPacks && userId !== null ? userId : undefined\r\n\r\n    const recent_pack_id = useSelector<AppStoreType, string>(state => state.packs.recent_pack_id)\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    const [titleFromModal, setTitleFromModal] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        if (!success) {\r\n            dispatch(me())\r\n        }\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        dispatch(getPacks({}))\r\n    }, [dispatch])\r\n\r\n    const addPackHandler = () => {\r\n        dispatch(addPack())\r\n    }\r\n\r\n    const deletePackHandler = (id: string) => {\r\n        dispatch(deletePack(id))\r\n    }\r\n\r\n    const updatePackHandler = () => {\r\n        dispatch(updatePack(recent_pack_id, titleFromModal))\r\n        setTitleFromModal('')\r\n        setModalActive(false)\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        dispatch(PacksActions.setPackId(id))\r\n    }\r\n\r\n\r\n    const sortByMore = () => {\r\n        dispatch(getPacks({sortPacks: \"0cardsCount\", user_id: finallyUserId}))\r\n    }\r\n\r\n    const sortByFewer = () => {\r\n        dispatch(getPacks({sortPacks: \"1cardsCount\", user_id: finallyUserId}))\r\n    }\r\n\r\n    const searchByName = (name: string) => {\r\n        dispatch(getPacks({packName: name, min, max, user_id: finallyUserId}))\r\n    }\r\n\r\n    const onSearchingValuesChange = (values: [number, number]) => {\r\n        setMin(values[0])\r\n        setMax(values[1])\r\n    }\r\n\r\n    const onMyPacksCheckboxChange = (value: boolean) => {\r\n        setGetMyPacks(value)\r\n        dispatch(getPacks({min, max, user_id: value && userId !== null ? userId : undefined}))\r\n    }\r\n\r\n    if (!success) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsContainer}>\r\n            Packs page\r\n            {loading && <Preloader/>}\r\n            {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n            <Pagination/>\r\n            <div className={s.searchUtils}>\r\n                <div className={s.checkbox}>\r\n                    My packs\r\n                    <CustomCheckbox onChangeChecked={onMyPacksCheckboxChange}/>\r\n                </div>\r\n                <div className={s.searchBlock}>\r\n                    Search by amount of cards:\r\n                    <DoubleRangeSlider min={minCardsCount} max={maxCardsCount} value={[min, max]}\r\n                                       onChangeRange={onSearchingValuesChange}/>\r\n                    Search by name:\r\n                    <Search placeholder={\"Search by name\"} searchFunction={searchByName}/>\r\n                </div>\r\n                <div className={s.sortComponent}>Sorting by amout of cards:\r\n                    <Sort sortByMore={sortByMore} sortByFewer={sortByFewer}/>\r\n                </div>\r\n            </div>\r\n            <CustomTable title={['Packs', 'Cards', 'Updated', 'url']}\r\n                data={packs} addItemCallback={addPackHandler}\r\n                deleteItemCallback={deletePackHandler}\r\n                saveRecentIdCallback={packIdSaver}\r\n                setModalView={setModalActive}\r\n                disabled={loading}/>\r\n            <CustomModalWindow active={modalActive} setActive={setModalActive}>\r\n                <p>Change Title</p>\r\n                <CustomInput value={titleFromModal} onChange={e => setTitleFromModal(e.target.value)}/>\r\n                <CustomButton onClick={() => updatePackHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n\r\n        </div>\r\n    )\r\n}","import style from './ErrorPage.module.css'\r\n\r\nexport const ErrorPage = () => {\r\n    return (\r\n        <div className={style.error_page}>\r\n            <div className={style.title_404}>404</div>\r\n            <div className={style.title}>UH OH! You're lost. ฅ/ᐠ.̫ .ᐟ\\ฅ</div>\r\n            <span>\r\n                The page you are looking for does not exist. <br />\r\n                        How you got here is a mystery! <br />\r\n                        But you can choose the section above and have fun there!\r\n                    </span>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\"\r\nimport {Switch} from \"react-router\"\r\nimport {Redirect, Route, useParams} from \"react-router-dom\"\r\nimport {TestComponent} from \"../../../features/f0-test/TestComponent/ui/TestComponent\"\r\nimport {Forgot} from \"../../../features/f1-auth/forgot/ui-forgot/Forgot\"\r\nimport {Login} from \"../../../features/f1-auth/login/ui-login/Login\"\r\nimport {Profile} from \"../../../features/f1-auth/profile/ui-profile/Profile\"\r\nimport {Register} from \"../../../features/f1-auth/register/ui-register/Register\"\r\nimport {SetPassword} from \"../../../features/f1-auth/setPass/ui-setPass/SetPassword\"\r\nimport { Cards } from \"../../../features/f2-cards/cards/ui/Cards\"\r\nimport { Packs } from \"../../../features/f2-cards/packs/ui/Packs\"\r\nimport {ErrorPage} from \"../errorPage/ui/ErrorPage\"\r\n\r\nexport const PATH = {\r\n    HOME: '/',\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    PROFILE: \"/profile\",\r\n    FORGOT: '/forgot',\r\n    SET_PASS: '/set-new-password/:id',\r\n    TEST: '/test',\r\n    ERROR_PAGE: '/404',\r\n    CARDS: '/cards',\r\n    PACKS: '/packs'\r\n\r\n    // add paths\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу TEST*/}\r\n                <Route path={PATH.HOME} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.FORGOT} render={() => <Forgot/>}/>\r\n                <Route path={PATH.SET_PASS} render={() => <SetPassword/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={`${PATH.CARDS}/:id`} render={() => <Cards/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestComponent/>}/>\r\n\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <ErrorPage/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStoreType } from \"../../bll/store\";\r\nimport { PATH } from \"../routes/Routes\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n\r\n    const recent_pack_id = useSelector<AppStoreType, string>(state => state.packs.recent_pack_id)\r\n    const samePath = recent_pack_id ? `${recent_pack_id}` : ''\r\n\r\n\r\n    return (\r\n        <div className={style.nav_container}>\r\n        <div className={style.nav_bar}>\r\n            <NavLink to={PATH.TEST} className={style.nav_link} activeClassName={style.current}>Home</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={style.nav_link} activeClassName={style.current}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTER} className={style.nav_link} activeClassName={style.current}>Register</NavLink>\r\n            <NavLink to={PATH.PROFILE} className={style.nav_link} activeClassName={style.current}>Profile</NavLink>\r\n            <NavLink to={PATH.FORGOT} className={style.nav_link} activeClassName={style.current}>Forgot</NavLink>\r\n            <NavLink to={PATH.SET_PASS} className={style.nav_link} activeClassName={style.current}>Set Password</NavLink>\r\n            <NavLink to={PATH.PACKS} className={style.nav_link} activeClassName={style.current}>Packs</NavLink>\r\n            <NavLink to={`${PATH.CARDS}/${samePath}`} className={style.nav_link} activeClassName={style.current}>Cards</NavLink>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Routes } from \"./ui/routes/Routes\"\r\nimport { Header } from './ui/header/Header'\r\nimport s from './Main.module.css'\r\n\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <Header />\r\n            <Routes />\r\n        </div>\r\n    )\r\n}","import { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from '../bll/store';\nimport { Main } from '../Main';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <>\n        <HashRouter>\n          <Provider store={store}>\n            <Main />\n          </Provider>\n        </HashRouter>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/main/ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginGroup\":\"LoginForm_loginGroup__1-DhW\",\"rememberMeLabel\":\"LoginForm_rememberMeLabel__1Zjjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginLink\":\"navlinkStyling_loginLink__ZVbKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"CustomModalWindow_modal__AzbSk\",\"modal_content\":\"CustomModalWindow_modal_content__3d7aU\",\"modal_active\":\"CustomModalWindow_modal_active__20VAj\",\"modal_content_active\":\"CustomModalWindow_modal_content_active__iLTh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_wrapper\":\"CustomRadio_radio_wrapper__2csJO\",\"label\":\"CustomRadio_label__dv_Q7\",\"radio\":\"CustomRadio_radio__39bWq\",\"text\":\"CustomRadio_text__3nabw\",\"design\":\"CustomRadio_design__3xiGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__1bB-7\",\"searchUtils\":\"Packs_searchUtils__1rutC\",\"sortComponent\":\"Packs_sortComponent__2W1QX\",\"checkbox\":\"Packs_checkbox__3ySCY\",\"searchBlock\":\"Packs_searchBlock__3a2dK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabel\":\"CustomCheckbox_checkboxLabel__2j4wa\",\"checkbox\":\"CustomCheckbox_checkbox__-WVPU\",\"customSpan\":\"CustomCheckbox_customSpan__3LJe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchUtils\":\"Cards_searchUtils__2hU0L\",\"searchInputs\":\"Cards_searchInputs__3zfvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"CustomInput_input_container__3QSF7\",\"superInput\":\"CustomInput_superInput__2d6Um\",\"fadeIn\":\"CustomInput_fadeIn__3h5xZ\",\"errorInput\":\"CustomInput_errorInput__33rO6\",\"error\":\"CustomInput_error__2toCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_page\":\"ErrorPage_error_page__1JMk3\",\"title_404\":\"ErrorPage_title_404__2TK1J\",\"title\":\"ErrorPage_title__3KXLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"CustomButton_default__sFbn4\",\"fadeIn\":\"CustomButton_fadeIn__2Hen-\",\"red\":\"CustomButton_red__14ffV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Paginator_page__mxGzt\",\"active\":\"Paginator_active__2c1Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testContainer\":\"TestComponent_testContainer__tijZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotForm\":\"ForgotForm_forgotForm__3Yds1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"CustomSnackbar_snackbar__3ASh3\",\"fadein\":\"CustomSnackbar_fadein__1KaRy\",\"fadeout\":\"CustomSnackbar_fadeout__1NqJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"CustomPreloader_preloaderContainer__1xumz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPasswordPage\":\"SetPasswordForm_setPasswordPage__2U4iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__1THbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRangeSlider\":\"DoubleRangeSlider_doubleRangeSlider__2lqSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__1V-Yf\",\"animation\":\"Main_animation__RFjm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableStyling\":\"CustomTable_tableStyling__IChfo\",\"trStyling\":\"CustomTable_trStyling__1RtpW\",\"tdStyling\":\"CustomTable_tdStyling__2hrBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Header_nav_bar__3fhKf\",\"nav_container\":\"Header_nav_container__WKhEF\",\"nav_link\":\"Header_nav_link__VnHL2\",\"fill\":\"Header_fill__EoQTU\",\"current\":\"Header_current__2wyH0\"};"],"sourceRoot":""}
{"version":3,"sources":["main/ui/header/Header.module.css","main/ui/common/CustomTable/CustomTable.module.css","features/f3-learning/learning/ui/Learning.module.css","main/ui/common/stylingUtils/navlinkStyling.module.css","features/f1-auth/login/ui-login/LoginForm/LoginForm.module.css","main/ui/common/CustomModalWindow/CustomModalWindow.module.css","main/ui/common/CustomRadio/CustomRadio.module.css","features/f2-cards/packs/ui/Packs.module.css","main/ui/common/CustomCheckbox/CustomCheckbox.module.css","features/f2-cards/cards/ui/Cards.module.css","main/ui/common/CustomInput/CustomInput.module.css","main/ui/errorPage/ui/ErrorPage.module.css","main/ui/common/CustomButton/CustomButton.module.css","features/f2-cards/packs/ui/Paginator.module.css","features/f0-test/TestComponent/ui/TestComponent.module.css","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.module.css","main/ui/common/CustomSnackbar/CustomSnackbar.module.css","main/ui/common/CustomPreloader/CustomPreloader.module.css","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.module.css","main/ui/common/SearchComponent/Search.module.css","main/ui/common/DoubleRangeSlider/DoubleRangeSlider.module.css","main/Main.module.css","features/f1-auth/login/bll-login/loginInitState.ts","features/f1-auth/forgot/bll-forgot/forgotInitState.ts","features/f1-auth/profile/bll-profile/profileInitState.ts","features/f1-auth/register/bll-register/api-instance.ts","features/f1-auth/register/bll-register/registerActions.ts","features/f1-auth/register/bll-register/registerInitState.ts","features/f1-auth/setPass/bll-setPass/setPassInitState.ts","features/f2-cards/packs/bll/packsInitState.ts","features/f2-cards/cards/bll/cardsInitState.ts","main/utils/ErrorHandling/bll/errorHandlingInitState.ts","main/bll/store.ts","features/f1-auth/forgot/bll-forgot/forgotReducer.ts","features/f1-auth/login/bll-login/loginReducer.ts","features/f1-auth/profile/bll-profile/profileReducer.ts","features/f1-auth/register/bll-register/registerReducer.ts","features/f1-auth/setPass/bll-setPass/setPassReducer.ts","features/f2-cards/packs/bll/packsReducer.ts","features/f2-cards/cards/bll/cardsReducer.ts","main/utils/ErrorHandling/bll/errorHandlingReducer.ts","main/ui/common/CustomButton/CustomButton.tsx","main/ui/common/CustomCheckbox/CustomCheckbox.tsx","main/ui/common/CustomInput/CustomInput.tsx","main/ui/common/CustomRadio/CustomRadio.tsx","features/f0-test/TestComponent/ui/TestComponent.tsx","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.tsx","features/f1-auth/forgot/dal-forgot/forgotInstance.ts","features/f1-auth/forgot/bll-forgot/forgotActions.ts","features/f1-auth/forgot/ui-forgot/Forgot.tsx","features/f1-auth/forgot/bll-forgot/forgotThunks.ts","features/f1-auth/login/bll-login/loginActions.ts","main/dal/instance.ts","main/dal/baseURLs.ts","features/f1-auth/login/dal-login/loginInstance.ts","features/f1-auth/login/bll-login/loginThunks.ts","main/ui/common/CustomSnackbar/CustomSnackbar.tsx","main/assets/dbringload.svg","main/ui/common/CustomPreloader/CustomPreloader.tsx","features/f1-auth/login/ui-login/LoginForm/LoginForm.tsx","features/f1-auth/login/ui-login/Login.tsx","features/f1-auth/profile/ui-profile/Profile.tsx","features/f1-auth/register/ui-register/Register.tsx","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.tsx","features/f1-auth/setPass/dal-setPass/setPassInstance.ts","features/f1-auth/setPass/bll-setPass/setPassActions.ts","features/f1-auth/setPass/ui-setPass/SetPassword.tsx","features/f1-auth/setPass/bll-setPass/setPassThunks.ts","main/ui/common/CustomModalWindow/CustomModalWindow.tsx","main/utils/ErrorHandling/bll/errorHandlingActions.ts","features/f2-cards/cards/bll/cardsActions.ts","features/f2-cards/cards/dal/cardsInstance.ts","features/f2-cards/cards/bll/cardsThunks.ts","features/f2-cards/cards/ui/CardsTable.tsx","main/ui/common/SearchComponent/SearchComponent.tsx","main/ui/common/SortComponent/Sort.tsx","main/ui/common/DoubleRangeSlider/DoubleRangeSlider.tsx","features/f2-cards/cards/ui/Cards.tsx","main/ui/common/CustomTable/CustomTable.tsx","features/f2-cards/packs/bll/packsActions.ts","features/f2-cards/packs/dal/packsInstance.ts","features/f2-cards/packs/bll/packsThunks.ts","features/f2-cards/packs/ui/Paginator.tsx","features/f2-cards/packs/ui/Packs.tsx","main/ui/errorPage/ui/ErrorPage.tsx","features/f3-learning/learning/ui/Learning.tsx","main/ui/routes/Routes.tsx","main/ui/header/Header.tsx","main/Main.tsx","main/ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","loginInitialState","error","loading","success","user_id","forgotInitialState","message","profileInitialState","instance","axios","create","baseURL","withCredentials","fridayAPI","email","password","post","RegisterActions","isRegister","type","registerInitialState","setPassInitialState","responseMessage","PacksInitState","packs","packUser_id","recent_pack_id","minCardsCount","maxCardsCount","page","CardsInitState","cards","recent_card_id","errorHandlingInitialState","rootReducer","combineReducers","forgot","state","action","login","userId","profile","register","setPass","id","map","card","_id","card_id","grade","rate","errorHandling","store","createStore","applyMiddleware","thunk","window","Button","red","className","restProps","finalClassName","s","default","Checkbox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","checkboxLabel","e","currentTarget","checked","customSpan","Input","onChangeText","onKeyPress","onEnter","finalSpanClassName","superInput","input_container","value","key","CustomRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","o","i","style","label","radio","design","text","radio_wrapper","TestComponent","testContainer","CustomButton","CustomCheckbox","CustomInput","ForgotForm","props","useState","setLogin","forgotForm","onClick","disabled","to","sUtils","loginLink","forgotAPI","from","ForgotActions","Forgot","dispatch","useDispatch","useSelector","a","res","data","info","response","ForgotTC","LoginActions","loginAPI","delete","me","status","CustomSnackbar","memo","title","timer","visual","setVisual","useEffect","show","setTimeout","clearTimeout","snackbar","Preloader","preloaderContainer","src","preloader","alt","LoginForm","rememberMe","details","setDetails","loginForm","loginGroup","htmlFor","target","rememberMeLabel","PATH","FORGOT","REGISTER","Login","PROFILE","Profile","isAuth","setIsAuth","logout","useCallback","LOGIN","Register","setEmail","pass","repPass","setrepPpass","placeholder","color","then","console","log","catch","loginTC","SetPasswordForm","password1","setPassword1","password2","setPassword2","setPasswordPage","setNewPassword","setError","setPassAPI","resetPasswordToken","SetPassActions","SetPassword","useParams","SetPassTC","CustomModalWindow","active","setActive","modalStylingClass","modal","modal_active","modalContentStylingClass","modal_content","modal_content_active","stopPropagation","ErrorHandlingActions","CardsActions","cardsAPI","cardsPack_id","params","get","pageCount","question","answer","Math","floor","random","put","getCards","CardsTable","cardId","addItemCallback","deleteItemCallback","updateItemCallback","saveRecentIdCallback","setModalView","setNewModalView","cardIdSaver","titleFiller","t","dataFiller","dataItem","dataIndex","trStyling","tdStyling","date","updated","Date","toLocaleDateString","day","month","year","tableStyling","Search","setValue","searchFunction","search","Sort","sort","sortByMore","sortByFewer","DoubleRangeSlider","onChangeRange","max","min","doubleRangeSlider","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","Cards","minGrade","setMinGrade","maxGrade","setMaxGrade","modalActive","setModalActive","newModalActive","setNewModalActive","newQuestionFromModal","setNewQuestionFromModal","newAnswerFromModal","setNewAnswerFromModal","questionFromModal","setQuestionFromModal","answerFromModal","setAnswerFromModal","addCardHandler","addCard","updateCardHandler","pack_id","updateCard","PACKS","searchUtils","searchBlock","values","searchInputs","cardQuestion","cardAnswer","sortBlock","sortCards","deleteCard","CustomTable","packIdSaver","cardsCount","CARDS","navlinkStyling","LEARNING","PacksActions","packsAPI","cardsPack","getPacks","cardPacks","Pagination","clickPage","innerHTML","arr","push","fontWeight","pages","Packs","setMin","setMax","getMyPacks","setGetMyPacks","finallyUserId","undefined","newTitleFromModal","setNewTitleFromModal","titleFromModal","setTitleFromModal","addPackHandler","updatePackHandler","packsContainer","packName","sortComponent","sortPacks","deletePack","ErrorPage","error_page","title_404","Learning","check","setCheck","first","setFirst","shots","questionImg","answerImg","answerVideo","questionVideo","comments","rating","more_id","created","currentCard","setCurrentCard","length","getCard","sum","reduce","acc","rand","newSum","onRateButtonClick","updatedGrade","updateGrade","updateCardGrade","answerBlock","answerButtons","questionBlock","learning_preloader","HOME","SET_PASS","TEST","ERROR_PAGE","Routes","path","exact","render","Header","samePath","nav_container","nav_bar","nav_link","activeClassName","current","Main","mainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d62c6f00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Header_nav_bar__3fhKf\",\"nav_container\":\"Header_nav_container__WKhEF\",\"nav_link\":\"Header_nav_link__VnHL2\",\"fill\":\"Header_fill__EoQTU\",\"current\":\"Header_current__2wyH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableStyling\":\"CustomTable_tableStyling__IChfo\",\"trStyling\":\"CustomTable_trStyling__1RtpW\",\"tdStyling\":\"CustomTable_tdStyling__2hrBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learning_preloader\":\"Learning_learning_preloader__GG2pj\",\"questionBlock\":\"Learning_questionBlock__388Rr\",\"question\":\"Learning_question___YsS1\",\"answerBlock\":\"Learning_answerBlock__3V9Q_\",\"answer\":\"Learning_answer__1clJl\",\"text\":\"Learning_text__1TiR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginLink\":\"navlinkStyling_loginLink__ZVbKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginGroup\":\"LoginForm_loginGroup__1-DhW\",\"rememberMeLabel\":\"LoginForm_rememberMeLabel__1Zjjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"CustomModalWindow_modal__AzbSk\",\"modal_content\":\"CustomModalWindow_modal_content__3d7aU\",\"modal_active\":\"CustomModalWindow_modal_active__20VAj\",\"modal_content_active\":\"CustomModalWindow_modal_content_active__iLTh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_wrapper\":\"CustomRadio_radio_wrapper__2csJO\",\"label\":\"CustomRadio_label__dv_Q7\",\"radio\":\"CustomRadio_radio__39bWq\",\"text\":\"CustomRadio_text__3nabw\",\"design\":\"CustomRadio_design__3xiGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__1bB-7\",\"searchUtils\":\"Packs_searchUtils__1rutC\",\"sortComponent\":\"Packs_sortComponent__2W1QX\",\"checkbox\":\"Packs_checkbox__3ySCY\",\"searchBlock\":\"Packs_searchBlock__3a2dK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabel\":\"CustomCheckbox_checkboxLabel__2j4wa\",\"checkbox\":\"CustomCheckbox_checkbox__-WVPU\",\"customSpan\":\"CustomCheckbox_customSpan__3LJe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchUtils\":\"Cards_searchUtils__2hU0L\",\"searchInputs\":\"Cards_searchInputs__3zfvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"CustomInput_input_container__3QSF7\",\"superInput\":\"CustomInput_superInput__2d6Um\",\"fadeIn\":\"CustomInput_fadeIn__3h5xZ\",\"errorInput\":\"CustomInput_errorInput__33rO6\",\"error\":\"CustomInput_error__2toCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_page\":\"ErrorPage_error_page__1JMk3\",\"title_404\":\"ErrorPage_title_404__2TK1J\",\"title\":\"ErrorPage_title__3KXLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"CustomButton_default__sFbn4\",\"fadeIn\":\"CustomButton_fadeIn__2Hen-\",\"red\":\"CustomButton_red__14ffV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Paginator_page__mxGzt\",\"active\":\"Paginator_active__2c1Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testContainer\":\"TestComponent_testContainer__tijZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotForm\":\"ForgotForm_forgotForm__3Yds1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"CustomSnackbar_snackbar__3ASh3\",\"fadein\":\"CustomSnackbar_fadein__1KaRy\",\"fadeout\":\"CustomSnackbar_fadeout__1NqJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"CustomPreloader_preloaderContainer__1xumz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPasswordPage\":\"SetPasswordForm_setPasswordPage__2U4iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__1THbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRangeSlider\":\"DoubleRangeSlider_doubleRangeSlider__2lqSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__1V-Yf\",\"animation\":\"Main_animation__RFjm4\"};","\r\nexport type LoginInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    user_id: string | null\r\n}\r\n\r\nexport const loginInitialState: LoginInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false,\r\n    user_id: null\r\n}","\r\nexport type ForgotInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\n\r\nexport const forgotInitialState: ForgotInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: true,\r\n    message: \"\"\r\n}","\r\nexport type ProfileInitState = {\r\n\r\n}\r\n\r\n\r\nexport const profileInitialState: ProfileInitState = {\r\n\r\n}","import axios from 'axios';\r\n\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nexport const instance = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\n\r\nexport const fridayAPI = {\r\n  register(email: string, password: string) {\r\n    const promise = instance.post<ResponseType>('/auth/register', { email, password });\r\n    return promise;\r\n  },\r\n};\r\n\r\nexport type ResponseType = {\r\n  addedUser: Object;\r\n  error?: string;\r\n};\r\n","import { InferActionsType } from '../../../../main/bll/action-types';\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n  setIsRegisterAC: (isRegister: boolean) => ({\r\n    type: 'register/IS-REGISTER',\r\n    isRegister,\r\n  } as const),\r\n};\r\n","export type RegisterInitState = {\r\n  isRegister: boolean;\r\n};\r\n\r\nexport const registerInitialState: RegisterInitState = {\r\n  isRegister: false,\r\n};\r\n","export type SetPassInitState = {\r\n    error: string\r\n    responseMessage: string\r\n    success: boolean\r\n}\r\n\r\n\r\nexport const setPassInitialState: SetPassInitState = {\r\n    error: '',\r\n    responseMessage: '',\r\n    success: true\r\n}","export type PackType = {\r\n  _id: string;\r\n  user_id: string;\r\n  user_name: string;\r\n  private: boolean;\r\n\r\n  name: string;\r\n  path: string;\r\n  grade: number;\r\n  shots: number;\r\n\r\n  cardsCount: number;\r\n  deckCover: string;\r\n\r\n  type: string;\r\n  rating: number;\r\n  more_id: string;\r\n\r\n  created: string;\r\n  updated: string;\r\n};\r\n\r\nexport type PacksStateType = {\r\n    packs: PackType[]\r\n    packUser_id: string\r\n    recent_pack_id: string\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    page: number\r\n\r\n}\r\n\r\nexport const PacksInitState: PacksStateType = {\r\n    packs: [],\r\n    packUser_id: '',\r\n    recent_pack_id: '',\r\n    minCardsCount: 0,\r\n    maxCardsCount: 100,\r\n    page: 1\r\n}\r\n\r\n","export type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n\r\n    questionImg: string\r\n    answerImg: string\r\n    answerVideo: string\r\n    questionVideo: string\r\n\r\n    comments: string\r\n\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type CardsStateType = {\r\n    cards: CardType[]\r\n    recent_card_id: string\r\n}\r\n\r\nexport const CardsInitState: CardsStateType = {\r\n    cards: [],\r\n    recent_card_id: ''\r\n}","\r\nexport type ErrorHandlingInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n\r\n}\r\n\r\nexport const errorHandlingInitialState: ErrorHandlingInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false\r\n}","import { loginReducer } from './../../features/f1-auth/login/bll-login/loginReducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { forgotReducer } from \"../../features/f1-auth/forgot/bll-forgot/forgotReducer\";\r\nimport { profileReducer } from '../../features/f1-auth/profile/bll-profile/profileReducer';\r\nimport { registerReducer } from '../../features/f1-auth/register/bll-register/registerReducer';\r\nimport { setPassReducer } from '../../features/f1-auth/setPass/bll-setPass/setPassReducer';\r\nimport { packsReducer } from '../../features/f2-cards/packs/bll/packsReducer';\r\nimport { cardsReducer } from '../../features/f2-cards/cards/bll/cardsReducer';\r\nimport { errorHandlingReducer } from '../utils/ErrorHandling/bll/errorHandlingReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    setPass: setPassReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    errorHandling: errorHandlingReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\n    window.store = store","import {ForgotActionsType} from \"./forgotActions\";\r\nimport {forgotInitialState, ForgotInitState} from \"./forgotInitState\";\r\n\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: ForgotActionsType): ForgotInitState => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"forgot/SET_SUCCESS\":\r\n            return {...state, success: action.success}\r\n        case \"forgot/SET_MESSAGE\":\r\n            return {...state, message: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { LoginActionsType } from \"./loginActions\";\r\nimport { loginInitialState, LoginInitState } from \"./loginInitState\";\r\n\r\n\r\nexport const loginReducer = (state = loginInitialState, action: LoginActionsType): LoginInitState => {\r\n    switch (action.type) {\r\n        case \"login/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"login/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_USER_ID\": {\r\n            return {\r\n                ...state,\r\n                user_id: action.userId\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { ProfileActionsType } from \"./profileActions\";\r\nimport { profileInitialState, ProfileInitState } from \"./profileInitState\";\r\n\r\n\r\nexport const profileReducer = (state = profileInitialState, action: ProfileActionsType): ProfileInitState => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { fridayAPI } from './api-instance';\r\nimport { RegisterActions, RegisterActionsType } from './registerActions';\r\nimport { registerInitialState, RegisterInitState } from './registerInitState';\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActionsType): RegisterInitState => {\r\n  switch (action.type) {\r\n    case 'register/IS-REGISTER':\r\n      return { ...state, isRegister: action.isRegister };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginTC = (email: string, password: string) => (dispatch: Dispatch<RegisterActionsType>) => {\r\n  fridayAPI\r\n    .register(email, password)\r\n    .then((res) => {\r\n      console.log('res');\r\n      dispatch(RegisterActions.setIsRegisterAC(true));\r\n    })\r\n    .catch((error) => {\r\n      console.log('error');\r\n    });\r\n};\r\n","import {SetPassActionsType} from \"./setPassActions\";\r\nimport {setPassInitialState, SetPassInitState} from \"./setPassInitState\";\r\n\r\n\r\nexport const setPassReducer = (state = setPassInitialState, action: SetPassActionsType): SetPassInitState => {\r\n    switch (action.type) {\r\n        case 'setPass/SET_ERROR':\r\n            return {...state, error: action.error}\r\n        case 'setPass/SET_SUCCESS':\r\n            return {...state, success: action.success}\r\n        case 'setPass/SET_MESSAGE':\r\n            return {...state, responseMessage: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { PacksActionsType } from './packsActions'\r\nimport {PacksInitState, PacksStateType} from './packsInitState'\r\n\r\nexport const packsReducer = (state = PacksInitState, action: PacksActionsType): PacksStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET_PACKS\": {\r\n            return {\r\n                ...state,\r\n                packs: action.packs\r\n            }\r\n        }\r\n        case \"packs/SET_PACK_ID\": {\r\n            return {\r\n                ...state,\r\n                recent_pack_id: action.id\r\n            }\r\n        }\r\n        case 'packs/SET_MIN_CARDS_COUNT': {\r\n            return {\r\n                ...state,\r\n                minCardsCount: action.minCardsCount\r\n            }\r\n        }\r\n        case 'packs/SET_MAX_CARDS_COUNT': {\r\n            return {\r\n                ...state,\r\n                maxCardsCount: action.maxCardsCount\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {CardsActionsType} from './cardsActions'\r\nimport {CardsInitState, CardsStateType} from './cardsInitState'\r\n\r\nexport const cardsReducer = (state = CardsInitState, action: CardsActionsType): CardsStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET_CARDS\": {\r\n            return {\r\n                ...state,\r\n                cards: action.cards\r\n            }\r\n        }\r\n        case 'cards/SET_CARD_ID': {\r\n            return {\r\n                ...state,\r\n                recent_card_id: action.id\r\n            }\r\n        }\r\n        case 'cards/UPDATE_CARD_RATE': {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.card_id ? {...card, grade: action.rate} : card)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ErrorHadnlingActionsType } from \"./errorHandlingActions\";\r\nimport { errorHandlingInitialState, ErrorHandlingInitState } from \"./errorHandlingInitState\";\r\n\r\nexport const errorHandlingReducer = (state = errorHandlingInitialState, action: ErrorHadnlingActionsType): ErrorHandlingInitState => {\r\n    switch (action.type) {\r\n        case \"errorHandling/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"errorHandling/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"errorHandling/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from './CustomButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default Button;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./CustomCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.checkboxLabel}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            /><span className={s.customSpan}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n        // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default Checkbox;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./CustomInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.input_container}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport style from './CustomRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst CustomRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label className={style.label} key={name + \"-\" + i}>\n            <input className={style.radio}\n                name={name}\n                onChange={onChangeCallback}\n                type={\"radio\"}\n                value={o}\n                checked={value === o}\n                // name, checked, value, onChange\n            />\n            <div className={style.design}></div>\n            <span className={style.text}>\n                {o}\n            </span>\n\n        </label>\n    )) : [];\n\n    return (\n        <div className={style.radio_wrapper}>\n            {mappedOptions}\n        </div>\n    );\n}\n\nexport default CustomRadio;\n","import React from \"react\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomRadio from \"../../../../main/ui/common/CustomRadio/CustomRadio\"\r\nimport s from './TestComponent.module.css'\r\n\r\nexport const TestComponent = () => {\r\n    return (\r\n        <div className={s.testContainer}>\r\n            <CustomButton>test</CustomButton>\r\n            <CustomCheckbox />\r\n            <CustomInput />\r\n            <CustomRadio options={[1, 2]} />\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport s from './ForgotForm.module.css'\r\n\r\n\r\ntype ForgotFormPropsType = {\r\n    forgot: (email: string) => void\r\n    error: string\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\nexport const ForgotForm = (props: ForgotFormPropsType) => {\r\n    const [login, setLogin] = useState('')\r\n    const onLoginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.forgotForm}>\r\n            <div>Your login</div>\r\n            {props.error !== '' && props.error}\r\n            {props.message !== '' && props.message}\r\n            <CustomInput type=\"text\" value={login} onChange={onLoginChange}/>\r\n            <div><CustomButton onClick={() => props.forgot(login)} disabled={!props.success}>send</CustomButton></div>\r\n            <div>\r\n                <NavLink to={'/login'} className={sUtils.loginLink}>Login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const forgotAPI = {\r\n    forgot(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"roman\",\r\n            message: `<div style=\"background-color: black; border-radius: 15px; color: #FFFFFF; padding: 15px\">password recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type ForgotActionsType = InferActionsType<typeof ForgotActions>;\r\n\r\nexport const ForgotActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"forgot/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"forgot/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setMessage: (message: string) =>\r\n        ({\r\n            type: \"forgot/SET_MESSAGE\",\r\n            message,\r\n        } as const)\r\n\r\n}","import {ForgotForm} from \"./ForgotForm/ForgotForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ForgotTC} from \"../bll-forgot/forgotThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\n\r\n\r\nexport const Forgot = () => {\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.forgot.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.forgot.success)\r\n    const message = useSelector<AppStoreType, string>(state => state.forgot.message)\r\n    const forgot = (email: string) => {\r\n        dispatch(ForgotTC(email))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ForgotForm forgot={forgot} error={error} success={success} message={message}/>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {forgotAPI} from \"../dal-forgot/forgotInstance\";\r\nimport {ForgotActions} from \"./forgotActions\";\r\n\r\nexport const ForgotTC = (email: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(ForgotActions.setSuccess(false))\r\n        const res = await forgotAPI.forgot(email)\r\n        dispatch(ForgotActions.setSuccess(true))\r\n        dispatch(ForgotActions.setMessage(res.data.info))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(ForgotActions.setError(error))\r\n        dispatch(ForgotActions.setSuccess(true))\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"login/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setLoading: (loading: boolean) =>\r\n        ({\r\n            type: \"login/SET_LOADING\",\r\n            loading,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"login/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setUserId: (userId: string) =>\r\n        ({\r\n            type: \"login/SET_USER_ID\",\r\n            userId\r\n        } as const)\r\n};\r\n","import axios from \"axios\";\r\nimport { devURL, herokuURL } from \"./baseURLs\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: herokuURL,\r\n  withCredentials: true,\r\n});\r\n","export const devURL = 'http://localhost:7542/2.0/'\r\nexport const herokuURL = 'https://neko-back.herokuapp.com/2.0/'","import { instance } from \"../../../../main/dal/instance\";\r\n\r\nexport const loginAPI = {\r\n    signIn(data: LoginDetailsType) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    signOut() {\r\n        return instance.delete('auth/me')\r\n    },\r\n    me() {\r\n        return instance.post('auth/me')\r\n    }\r\n}\r\n\r\nexport type LoginDetailsType = {\r\n    email: string | ReadonlyArray<string> | number\r\n    password: string | ReadonlyArray<string> | number\r\n    rememberMe: boolean\r\n}","import { ProfileActionsType } from './../../profile/bll-profile/profileActions';\r\nimport { LoginActions, LoginActionsType } from './loginActions';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\nimport { loginAPI, LoginDetailsType } from '../dal-login/loginInstance';\r\n\r\nexport const signIn = (\r\n  data: LoginDetailsType\r\n): ThunkAction<void, AppStoreType, unknown, LoginActionsType | ProfileActionsType> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signIn(data);\r\n    dispatch(LoginActions.setSuccess(true));\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response ? e.response.data.error : e.message + ', more details in the console';\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const signOut = (): ThunkAction<void, AppStoreType, unknown, LoginActionsType> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signOut();\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response ? e.response.data.error : e.message + ', more details in the console';\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const me = (): ThunkAction<void, AppStoreType, unknown, LoginActionsType> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.me();\r\n    if(res.status === 200) {\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setSuccess(true))\r\n    dispatch(LoginActions.setUserId(res.data._id))\r\n    }\r\n  } catch (e) {\r\n    const error = e.response ? e.response.data.error : e.message + ', more details in the console';\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n","import s from './CustomSnackbar.module.css'\r\nimport { FC, memo, useEffect, useState } from 'react'\r\n\r\ntype CustomSnackbarType = {\r\n    title: string\r\n    timer: number\r\n}\r\n\r\nexport const CustomSnackbar: FC<CustomSnackbarType> = memo(({ title, timer }) => {\r\n\r\n    const [visual, setVisual] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        setVisual(() => true)\r\n        const show = setTimeout(() => {\r\n            setVisual(() => false)\r\n        }, timer)\r\n        return () => {\r\n            clearTimeout(show)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                visual &&\r\n                <div className={s.snackbar}>\r\n                    {title}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/dbringload.46fb05e0.svg\";","import preloader from './../../../assets/dbringload.svg'\r\nimport s from './CustomPreloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (<div className={s.preloaderContainer}>\r\n        <img src={preloader} alt='Loading...' />\r\n    </div>)\r\n}","import React, { ChangeEvent, FC, memo, MouseEvent, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport CustomButton from '../../../../../main/ui/common/CustomButton/CustomButton'\r\nimport CustomCheckbox from '../../../../../main/ui/common/CustomCheckbox/CustomCheckbox'\r\nimport CustomInput from '../../../../../main/ui/common/CustomInput/CustomInput'\r\nimport s from './LoginForm.module.css'\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport { LoginDetailsType } from '../../dal-login/loginInstance'\r\nimport { PATH } from '../../../../../main/ui/routes/Routes'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStoreType } from '../../../../../main/bll/store'\r\nimport { CustomSnackbar } from '../../../../../main/ui/common/CustomSnackbar/CustomSnackbar'\r\nimport { Preloader } from '../../../../../main/ui/common/CustomPreloader/CustomPreloader'\r\n\r\ntype LoginFormType = {\r\n    login: (userDetails: LoginDetailsType) => void\r\n    error: string\r\n}\r\n\r\nexport const LoginForm: FC<LoginFormType> = memo(({ login, error }) => {\r\n\r\n    const [details, setDetails] = useState<LoginDetailsType>({ email: 'nya-admin@nya.nya', password: '1qazxcvBG', rememberMe: false })\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n\r\n    const emailOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, email: e.target.value })\r\n    }\r\n\r\n    const passwordOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, password: e.target.value })\r\n    }\r\n\r\n    const rememberMeOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, rememberMe: e.target.checked })\r\n    }\r\n\r\n    const detailsWrap = (e: MouseEvent<HTMLButtonElement>) => {\r\n        login(details)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <>\r\n                    {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n                    <div className={s.loginForm}>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='email'>Email:</label>\r\n                            <CustomInput onChange={emailOnChangeHandler} value={details.email} type='email' name='email' id='email' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='password'>Password:</label>\r\n                            <CustomInput onChange={passwordOnChangeHandler} value={details.password} type='password' name='password' id='password' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomCheckbox onChange={rememberMeOnChangeHandler} checked={details.rememberMe} />\r\n                            <label className={s.rememberMeLabel}>remember me</label>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomButton type={'submit'} onClick={detailsWrap} disabled={loading}>Sign in</CustomButton>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <NavLink to={PATH.FORGOT} className={sUtils.loginLink}>forgot?</NavLink>\r\n                            <NavLink to={PATH.REGISTER} className={sUtils.loginLink}>register</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n})","import { memo, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { LoginActions } from \"../bll-login/loginActions\"\r\nimport { signIn } from \"../bll-login/loginThunks\"\r\nimport { LoginDetailsType } from \"../dal-login/loginInstance\"\r\nimport { LoginForm } from \"./LoginForm/LoginForm\"\r\n\r\nexport const Login = memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n\r\n    useEffect(() => {\r\n        dispatch(LoginActions.setError(''))\r\n    }, [dispatch])\r\n\r\n    const login = (details: LoginDetailsType) => {\r\n        dispatch(signIn(details))\r\n    }\r\n\r\n    if (success) return <Redirect to={PATH.PROFILE} />\r\n\r\n    return (\r\n        <>\r\n            <LoginForm login={login} error={error}/>\r\n        </>\r\n    )\r\n})","import React, { useCallback, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { me, signOut } from \"../../login/bll-login/loginThunks\"\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n    const [isAuth, setIsAuth] = useState<boolean>(success)\r\n\r\n    useEffect(() => {\r\n        dispatch(me())\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(signOut())\r\n        setIsAuth(() => false)\r\n    }, [])\r\n\r\n    if (!isAuth) { return <Redirect to={PATH.LOGIN} /> }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <>\r\n                    <span>You are authorized</span>\r\n                    <CustomButton onClick={logout} disabled={loading}>\r\n                        Log Out\r\n                    </CustomButton>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","import { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Button from '../../../../main/ui/common/CustomButton/CustomButton';\r\nimport Input from '../../../../main/ui/common/CustomInput/CustomInput';\r\nimport { PATH } from '../../../../main/ui/routes/Routes';\r\nimport { loginTC } from '../bll-register/registerReducer';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\n\r\nexport const Register = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isRegister = useSelector<AppStoreType, boolean>((state) => state.register.isRegister);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [repPass, setrepPpass] = useState('');\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n  const changePass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPass(e.currentTarget.value);\r\n  };\r\n  const changeRepPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setrepPpass(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(loginTC(email, pass));\r\n  };\r\n\r\n  if (isRegister) {\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      Register Page\r\n      <Input value={email} onChange={changeEmail} placeholder={'Enter your email'} />\r\n      <Input value={pass} onChange={changePass} type={'password'} placeholder={'Enter your pass'} />\r\n      {pass !== repPass ? <div style={{ color: 'red' }}>Passwords should be equal </div> : null}\r\n      <Input value={repPass} onChange={changeRepPass} type={'password'} placeholder={'Repeat pass'} />\r\n      <Button onClick={onSubmit}>register</Button>\r\n      <NavLink to={PATH.LOGIN}>Sign in</NavLink>\r\n    </>\r\n  );\r\n};\r\n","import CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport s from './SetPasswordForm.module.css'\r\n\r\ntype SetPasswordType = {\r\n    setNewPassword: (password: string) => void\r\n    success: boolean\r\n    error: string\r\n    responseMessage: string\r\n    setError: (error: string) => void\r\n}\r\n\r\nexport const SetPasswordForm = (props: SetPasswordType) => {\r\n\r\n    const [password1, setPassword1] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const onPassword1Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.target.value)\r\n    }\r\n    const onPassword2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.target.value)\r\n    }\r\n\r\n    const onSetPasswordClickHandler = () => {\r\n        password1 === password2 ? props.setNewPassword(password1) : props.setError('Passwords must match')\r\n    }\r\n\r\n    return (\r\n        <div className={s.setPasswordPage}>\r\n            {props.error !== '' && props.error}\r\n            {props.responseMessage !== '' && props.responseMessage}\r\n            <div><CustomInput type={'password'} value={password1} onChange={onPassword1Change}/></div>\r\n            <div><CustomInput type={'password'} value={password2} onChange={onPassword2Change}/></div>\r\n            <div><CustomButton onClick={onSetPasswordClickHandler} disabled={!props.success}>Set Password</CustomButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const setPassAPI = {\r\n    setPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type SetPassActionsType = InferActionsType<typeof SetPassActions>;\r\n\r\nexport const SetPassActions = {\r\n    setError: (error: string) => ({\r\n        type: 'setPass/SET_ERROR',\r\n        error\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'setPass/SET_SUCCESS',\r\n        success\r\n    } as const),\r\n    setResponseMessage: (message: string) => ({\r\n        type: 'setPass/SET_MESSAGE',\r\n        message\r\n    } as const)\r\n}","import React from \"react\"\r\nimport {SetPasswordForm} from \"./SetPasswordForm/SetPasswordForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {SetPassTC} from \"../bll-setPass/setPassThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {SetPassActions} from \"../bll-setPass/setPassActions\";\r\n\r\nexport const SetPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.setPass.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.setPass.success)\r\n    const responseMessage = useSelector<AppStoreType, string>(state => state.setPass.responseMessage)\r\n    const {id} = useParams<{ id: string }>();\r\n    const setNewPassword = (password: string) => {\r\n        if (id && id !== ':id') {\r\n\r\n            dispatch(SetPassTC(password, id))\r\n        } else if (id === ':id') {\r\n            dispatch(SetPassActions.setError('If you want to change your password you should open this page using link'))\r\n        }\r\n    }\r\n\r\n    const setError = (error: string) => {\r\n        dispatch(SetPassActions.setError(error))\r\n    }\r\n\r\n    return (\r\n        <SetPasswordForm setNewPassword={setNewPassword} error={error} success={success}\r\n                         responseMessage={responseMessage} setError={setError}/>\r\n    )\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {setPassAPI} from \"../dal-setPass/setPassInstance\";\r\nimport {SetPassActions} from \"./setPassActions\";\r\n\r\nexport const SetPassTC = (email: string, id: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        const res = await setPassAPI.setPassword(email, id)\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        dispatch(SetPassActions.setResponseMessage(res.data.info))\r\n        dispatch(SetPassActions.setError(''))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(SetPassActions.setError(error))\r\n        dispatch(SetPassActions.setSuccess(true))\r\n    }\r\n}\r\n","import { FC } from 'react'\r\nimport s from './CustomModalWindow.module.css'\r\n\r\ninterface ICustomModalWindow {\r\n    active: boolean\r\n    setActive: (flag: boolean) => void\r\n}\r\n\r\nexport const CustomModalWindow: FC<ICustomModalWindow> = ({active, setActive, children}) => {\r\n    const modalStylingClass = active ? `${s.modal} ${s.modal_active}` : `${s.modal}`\r\n    const modalContentStylingClass = active ? `${s.modal_content} ${s.modal_content_active}` : `${s.modal_content}`\r\n    return (\r\n        <div className={modalStylingClass} onClick={() => setActive(false)}>\r\n            <div className={modalContentStylingClass} onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { InferActionsType } from \"../../../bll/action-types\";\r\n\r\nexport type ErrorHadnlingActionsType = InferActionsType<typeof ErrorHandlingActions>;\r\n\r\nexport const ErrorHandlingActions = {\r\n    setError: (error: string) =>\r\n    ({\r\n      type: \"errorHandling/SET_ERROR\",\r\n      error,\r\n    } as const),\r\n    setLoading: (loading: boolean) =>\r\n    ({\r\n      type: \"errorHandling/SET_LOADING\",\r\n      loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) =>\r\n    ({\r\n      type: \"errorHandling/SET_SUCCESS\",\r\n      success,\r\n    } as const),\r\n};","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\nimport {CardType} from \"./cardsInitState\";\r\nimport {AnswerRateType} from \"../../../f3-learning/learning/ui/Learning\";\r\n\r\n\r\nexport type CardsActionsType = InferActionsType<typeof CardsActions>\r\n\r\nexport const CardsActions = {\r\n    setCards: (cards: CardType[]) => ({\r\n        type: 'cards/SET_CARDS',\r\n        cards\r\n    } as const),\r\n    setCardId: (id: string) => ({\r\n        type: 'cards/SET_CARD_ID',\r\n        id\r\n    } as const),\r\n    updateCardsRate: (card_id: string, rate: AnswerRateType) => ({\r\n        type: 'cards/UPDATE_CARD_RATE',\r\n        card_id,\r\n        rate\r\n    }as const)\r\n}","import {instance} from \"../../../../main/dal/instance\";\r\nimport {CardType} from \"../bll/cardsInitState\";\r\nimport {AnswerRateType} from \"../../../f3-learning/learning/ui/Learning\";\r\n\r\ntype GetCardsDataType = {\r\n    cards: CardType[];\r\n    error: string;\r\n    maxGrade: number;\r\n    minGrade: number;\r\n};\r\n\r\nexport type GetCardsParamsType = {\r\n    min?: number;\r\n    max?: number;\r\n    sortCards?: string;\r\n    page?: number;\r\n    pageCount?: number;\r\n    cardQuestion?: string;\r\n    cardAnswer?: string;\r\n};\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPack_id: string, params?: GetCardsParamsType) {\r\n        return instance.get<GetCardsDataType>(\r\n            `cards/card?cardsPack_id=${cardsPack_id}`,\r\n            {\r\n                params: {\r\n                    pageCount: 100,\r\n                    ...params,\r\n                },\r\n            }\r\n        );\r\n    },\r\n    addCard(cardsPack_id: string, question: string, answer: string) {\r\n        return instance.post(\"cards/card\", {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                grade: Math.floor(Math.random() * 5),\r\n                answer,\r\n            },\r\n        });\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete(`cards/card?&id=${id}`);\r\n    },\r\n    updateCard(id: string, question: string, answer: string) {\r\n        return instance.put(`cards/card`, {\r\n            card: {\r\n                _id: id,\r\n                question,\r\n                answer,\r\n            },\r\n        });\r\n    },\r\n    updateCardGrade(grade: AnswerRateType, id: string) {\r\n        return instance.put(`/cards/grade`, {\r\n                grade: grade,\r\n                card_id: id\r\n        })\r\n    }\r\n};\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport {\r\n  ErrorHadnlingActionsType,\r\n  ErrorHandlingActions,\r\n} from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport { cardsAPI, GetCardsParamsType } from \"../dal/cardsInstance\";\r\nimport { CardsActions, CardsActionsType } from \"./cardsActions\";\r\nimport {AnswerRateType} from \"../../../f3-learning/learning/ui/Learning\";\r\n\r\nexport const getCards = (\r\n  id: string,\r\n  params?: GetCardsParamsType\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  CardsActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  cardsAPI\r\n    .getCards(id, params)\r\n    .then(({ data }) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(CardsActions.setCards(data.cards));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const addCard = (\r\n  id: string,\r\n  question: string,\r\n  answer: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  CardsActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  cardsAPI\r\n    .addCard(id, question, answer)\r\n    .then(({ data }) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getCards(id));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const deleteCard = (\r\n  id: string,\r\n  pack_id: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  CardsActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  cardsAPI\r\n    .deleteCard(id)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getCards(pack_id));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const updateCard = (\r\n  id: string,\r\n  pack_id: string,\r\n  question: string,\r\n  answer: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  CardsActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  cardsAPI\r\n    .updateCard(id, question, answer)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getCards(pack_id));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const updateCardGrade = (\r\n    id: string,\r\n    grade: AnswerRateType,\r\n    pack_id: string\r\n): ThunkAction<\r\n    void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHadnlingActionsType\r\n    > => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .updateCardGrade(grade, id)\r\n        .then(({data}) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(CardsActions.updateCardsRate(data.updatedGrade.card_id ,data.updateGrade.grade));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n","import React, { FC, memo } from \"react\";\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport s from './../../../../main/ui/common/CustomTable/CustomTable.module.css';\r\n\r\nexport type CardsTablePropsType = {\r\n    title: string[]\r\n    data?: any\r\n    cardId: string\r\n    disabled: boolean\r\n    addItemCallback?: (id: string) => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n    saveRecentIdCallback?: (id: string) => void\r\n    setModalView?: (flag: boolean) => void\r\n    setNewModalView?: (flag: boolean) => void\r\n\r\n}\r\n\r\nexport const CardsTable: FC<CardsTablePropsType> = memo(({ title, data, cardId, disabled, addItemCallback, deleteItemCallback, updateItemCallback, saveRecentIdCallback, setModalView, setNewModalView }) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback(cardId)\r\n        setNewModalView && setNewModalView(true)\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n        cardIdSaver(id)\r\n        setModalView && setModalView(true)\r\n    }\r\n\r\n    const cardIdSaver = (id: string) => {\r\n        saveRecentIdCallback && saveRecentIdCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling} key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.question}</td>\r\n        <td className={s.tdStyling}>{dataItem.answer}</td>\r\n        <td className={s.tdStyling}>{dataItem.grade}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)} disabled={disabled}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)} disabled={disabled}>del</CustomButton>\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                    <tr>\r\n                        {titleFiller}\r\n                        <th><CustomButton onClick={onAddItemButtonClick} disabled={disabled}>Add</CustomButton></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport CustomInput from \"../CustomInput/CustomInput\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport s from './Search.module.css'\r\n\r\n\r\ntype SearchPropsType = {\r\n    placeholder?: string\r\n    searchFunction: (value: string) => void\r\n}\r\nexport const Search = (props: SearchPropsType) => {\r\n    const [value, setValue] = useState(\"\")\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        e.key === 'Enter' && props.searchFunction(value)\r\n    }\r\n    const Search = () => {\r\n        props.searchFunction(value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.search}>\r\n            <CustomInput placeholder={props.placeholder} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}/>\r\n            <CustomButton onClick={Search}>Search</CustomButton>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport s from './Sort.module.css'\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\n\r\ntype SortPropsType = {\r\n    sortByMore: () => void\r\n    sortByFewer: () => void\r\n}\r\n\r\nexport const Sort = (props: SortPropsType) => {\r\n\r\n    return (\r\n        <div className={s.sort}>\r\n            <CustomButton onClick={props.sortByMore}>/\\</CustomButton>\r\n            <CustomButton onClick={props.sortByFewer}>\\/</CustomButton>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\nimport s from './DoubleRangeSlider.module.css'\r\n\r\ntype DoubleRangeSliderProps = {\r\n    onChangeRange?: (value: [number, number]) => void\r\n    value?: [number, number]\r\n    min?: number\r\n    max?: number\r\n}\r\nexport const DoubleRangeSlider: React.FC<DoubleRangeSliderProps> = (\r\n    {\r\n        onChangeRange, value, max, min\r\n    }) => {\r\n\r\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\r\n        if (typeof (newValue) !== 'number') {\r\n            onChangeRange && onChangeRange([newValue[0], newValue[1]]);\r\n        }\r\n    };\r\n\r\n    function valuetext(value: number) {\r\n        return `${value}`;\r\n    }\r\n\r\n    return (\r\n        <div className={s.doubleRangeSlider}>\r\n            <Slider value={value} min={min} max={max} onChange={handleSliderChange} valueLabelDisplay={'auto'}\r\n                    aria-labelledby={\"range-slider\"} getAriaValueText={valuetext}/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink, useParams } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport { CustomModalWindow } from \"../../../../main/ui/common/CustomModalWindow/CustomModalWindow\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { CustomSnackbar } from \"../../../../main/ui/common/CustomSnackbar/CustomSnackbar\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { ErrorHandlingActions } from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\"\r\nimport { CardsActions } from \"../bll/cardsActions\"\r\nimport { CardType } from \"../bll/cardsInitState\"\r\nimport { addCard, deleteCard, getCards, updateCard } from \"../bll/cardsThunks\"\r\nimport { CardsTable } from \"./CardsTable\"\r\nimport { Search } from \"../../../../main/ui/common/SearchComponent/SearchComponent\";\r\nimport { Sort } from \"../../../../main/ui/common/SortComponent/Sort\";\r\nimport { DoubleRangeSlider } from \"../../../../main/ui/common/DoubleRangeSlider/DoubleRangeSlider\";\r\nimport s from './Cards.module.css'\r\n\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cards.cards)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.errorHandling.error)\r\n\r\n    const [minGrade, setMinGrade] = useState(0)\r\n    const [maxGrade, setMaxGrade] = useState(6)\r\n\r\n    const recent_card_id = useSelector<AppStoreType, string>(state => state.cards.recent_card_id)\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    const [newModalActive, setNewModalActive] = useState<boolean>(false)\r\n\r\n    const [newQuestionFromModal, setNewQuestionFromModal] = useState<string>('')\r\n    const [newAnswerFromModal, setNewAnswerFromModal] = useState<string>('')\r\n\r\n    const [questionFromModal, setQuestionFromModal] = useState<string>('')\r\n    const [answerFromModal, setAnswerFromModal] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        dispatch(getCards(id))\r\n    }, [dispatch, id])\r\n\r\n    const addCardHandler = (id: string) => {\r\n        dispatch(addCard(id, newQuestionFromModal, newAnswerFromModal))\r\n        setNewQuestionFromModal('')\r\n        setNewAnswerFromModal('')\r\n        setNewModalActive(false)\r\n    }\r\n\r\n    const deleteCardHandler = (cardId: string) => {\r\n        dispatch(deleteCard(cardId, id))\r\n    }\r\n\r\n    const updateCardHandler = () => {\r\n        dispatch(updateCard(recent_card_id, id, questionFromModal, answerFromModal))\r\n        setModalActive(false)\r\n        setQuestionFromModal('')\r\n        setAnswerFromModal('')\r\n    }\r\n\r\n    const cardIdSaver = (id: string) => {\r\n        dispatch(CardsActions.setCardId(id))\r\n    }\r\n\r\n    const searchByQuestion = (cardQuestion: string) => {\r\n        dispatch(getCards(id, { cardQuestion, min: minGrade, max: maxGrade }))\r\n    }\r\n\r\n    const searchByAnswer = (cardAnswer: string) => {\r\n        dispatch(getCards(id, { cardAnswer, min: minGrade, max: maxGrade }))\r\n    }\r\n\r\n    const sortByHigher = () => {\r\n        dispatch(getCards(id, { sortCards: \"0grade\" }))\r\n    }\r\n\r\n    const sortByLower = () => {\r\n        dispatch(getCards(id, { sortCards: \"1grade\" }))\r\n    }\r\n\r\n    const onSearchingGradesChange = (values: [number, number]) => {\r\n        setMinGrade(values[0])\r\n        setMaxGrade(values[1])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            Cards Page\r\n            {loading && <Preloader />}\r\n            {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n            <NavLink to={PATH.PACKS}><CustomButton>Back</CustomButton></NavLink>\r\n            SearchByQuestion\r\n            <div className={s.searchUtils}>\r\n                <div className={s.searchBlock}>\r\n                    Grade range:\r\n                    <DoubleRangeSlider min={0} max={6} value={[minGrade, maxGrade]}\r\n                        onChangeRange={onSearchingGradesChange} />\r\n                    Enter card question or enter card answer:\r\n                    <div className={s.searchInputs}>\r\n                        <Search placeholder={\"Enter card question\"} searchFunction={searchByQuestion} />\r\n                        <Search placeholder={\"Enter card answer\"} searchFunction={searchByAnswer} />\r\n                    </div>\r\n                </div>\r\n                <div className={s.sortBlock}>\r\n                    Sort by grade:\r\n                    <Sort sortByMore={sortByHigher} sortByFewer={sortByLower} />\r\n                </div>\r\n            </div>\r\n            <CardsTable title={['question', 'answer', 'grade', 'udated', 'url']}\r\n                data={cards} cardId={id}\r\n                deleteItemCallback={deleteCardHandler}\r\n                saveRecentIdCallback={cardIdSaver}\r\n                setModalView={setModalActive}\r\n                setNewModalView={setNewModalActive}\r\n                disabled={loading} />\r\n            {/* New card */}\r\n            <CustomModalWindow active={newModalActive} setActive={setNewModalActive}>\r\n                <p>Choose Question and Answer</p>\r\n                <p>Question</p>\r\n                <CustomInput value={newQuestionFromModal} onChange={e => setNewQuestionFromModal(e.target.value)} />\r\n                <p>Answer</p>\r\n                <CustomInput value={newAnswerFromModal} onChange={e => setNewAnswerFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => addCardHandler(id)}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setNewModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n            {/* Update card */}\r\n            <CustomModalWindow active={modalActive} setActive={setModalActive}>\r\n                <p>Change Question and Answer</p>\r\n                <p>Question</p>\r\n                <CustomInput value={questionFromModal} onChange={e => setQuestionFromModal(e.target.value)} />\r\n                <p>Answer</p>\r\n                <CustomInput value={answerFromModal} onChange={e => setAnswerFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => updateCardHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n        </>\r\n    )\r\n}","import React, { FC, memo } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { PATH } from \"../../routes/Routes\"\r\nimport CustomButton from './../CustomButton/CustomButton'\r\nimport navlinkStyling from './../stylingUtils/navlinkStyling.module.css'\r\nimport s from './CustomTable.module.css'\r\n\r\nexport type CustomTablePropsType = {\r\n    title: string[]\r\n    data: any\r\n    addItemCallback?: () => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n    saveRecentIdCallback?: (id: string) => void\r\n    setModalView?: (flag: boolean) => void\r\n    setNewModalView?: (flag: boolean) => void\r\n    disabled?: boolean\r\n\r\n}\r\n\r\nexport const CustomTable: FC<CustomTablePropsType> = memo(({ title, data, disabled, addItemCallback, deleteItemCallback, updateItemCallback, saveRecentIdCallback, setModalView, setNewModalView }) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback()\r\n        setNewModalView && setNewModalView(true)\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n        packIdSaver(id)\r\n        setModalView && setModalView(true)\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        saveRecentIdCallback && saveRecentIdCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling} key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.name}</td>\r\n        <td className={s.tdStyling}>{dataItem.cardsCount}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)} disabled={disabled}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)} disabled={disabled}>del</CustomButton>\r\n            <NavLink to={`${PATH.CARDS}/${dataItem._id}`} className={navlinkStyling.loginLink} onClick={() => packIdSaver(dataItem._id)}>Cards</NavLink>\r\n            <NavLink to={`${PATH.LEARNING}/${dataItem._id}`} className={navlinkStyling.loginLink} onClick={() => packIdSaver(dataItem._id)}>Learning</NavLink>\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                    <tr>\r\n                        {titleFiller}\r\n                        <th><CustomButton onClick={onAddItemButtonClick} disabled={disabled}>Add</CustomButton></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import { InferActionsType } from \"../../../../main/bll/action-types\";\r\nimport { PackType } from \"./packsInitState\";\r\n\r\n\r\nexport type PacksActionsType = InferActionsType<typeof PacksActions>\r\n\r\nexport const PacksActions = {\r\n    setPacks: (packs: PackType[]) =>\r\n    ({\r\n      type: \"packs/SET_PACKS\",\r\n      packs,\r\n    } as const),\r\n    setPage: (page: number) =>\r\n    ({\r\n      type: \"page/SET_PAGE\",\r\n      page,\r\n    } as const),\r\n    setPackId: (id: string) => ({\r\n      type: 'packs/SET_PACK_ID',\r\n      id\r\n  } as const),\r\n    setMinCardsCount: (minCardsCount: number) => ({\r\n        type: 'packs/SET_MIN_CARDS_COUNT',\r\n        minCardsCount\r\n    } as const),\r\n    setMaxCardsCount: (maxCardsCount: number) => ({\r\n        type: 'packs/SET_MAX_CARDS_COUNT',\r\n        maxCardsCount\r\n    } as const),\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { instance } from \"../../../../main/dal/instance\";\r\nimport { PackType } from \"../bll/packsInitState\";\r\n// Conflict №3 Unnecessary url import\r\n\r\n\r\nexport type ParamsType = {\r\n  packName?: string | undefined;\r\n  min?: number | undefined;\r\n  max?: number | undefined;\r\n  sortPacks?: string | undefined;\r\n  page?: number | undefined;\r\n  pageCount?: number | undefined;\r\n  user_id?: string | undefined;\r\n};\r\n\r\nexport const packsAPI = {\r\n  getPacks(params: ParamsType) {\r\n    return instance.get<GetDataType>('cards/pack', {\r\n      params: {\r\n        pageCount: 100,\r\n        ...params,\r\n      },\r\n    });\r\n  },\r\n  addPack(name: string) {\r\n    return instance.post('cards/pack', {\r\n      cardsPack: {\r\n        name,\r\n      },\r\n    });\r\n  },\r\n  deletePack(id: string) {\r\n    return instance.delete(`cards/pack?id=${id}`);\r\n  },\r\n  updatePack(id: string, name: string) {\r\n    return instance.put('cards/pack', {\r\n      cardsPack: {\r\n        _id: id,\r\n        name,\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport type GetDataType = {\r\n  cardPacks: PackType[];\r\n  error: string;\r\n  cardPacksTotalCount: number;\r\n  maxCardsCount: number;\r\n  minCardsCount: number;\r\n  page: number;\r\n  pageCount: number;\r\n  token: string;\r\n  tokenDeathTime: number;\r\n};\r\n\r\n","import {\r\n  ErrorHandlingActions,\r\n  ErrorHadnlingActionsType,\r\n} from \"./../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport { packsAPI, ParamsType } from \"../dal/packsInstance\";\r\nimport { PacksActions, PacksActionsType } from \"./packsActions\";\r\n\r\nexport const getPacks = (\r\n  params: ParamsType\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .getPacks(params)\r\n    .then(({ data }) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(PacksActions.setPacks(data.cardPacks));\r\n      dispatch(PacksActions.setMinCardsCount(data.minCardsCount));\r\n      dispatch(PacksActions.setMaxCardsCount(data.maxCardsCount));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const addPack = (\r\n  name: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .addPack(name)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getPacks({}));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const deletePack = (\r\n  id: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .deletePack(id)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getPacks({}));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const updatePack = (\r\n  id: string,\r\n  name: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHadnlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .updatePack(id, name)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getPacks({}));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n","import { MouseEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\nimport { getPacks } from '../bll/packsThunks';\r\n\r\nimport s from './Paginator.module.css';\r\n\r\nexport const Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const page = useSelector<AppStoreType, number>((state) => state.packs.page);\r\n\r\n  const clickPage = (event: MouseEvent<HTMLButtonElement>) => {\r\n    //dispatch(PacksActions.setPage(+event.currentTarget.innerHTML));\r\n    dispatch(getPacks({page: +event.currentTarget.innerHTML}));\r\n    console.log(event.currentTarget)\r\n  };\r\n  const arr = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    arr.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <span style={{ fontWeight: 'bold' }}>Pages:</span>{' '}\r\n      {arr.map((pages, id) => {\r\n        return (\r\n          <span key={id} className={`${page - 1 === id ? s.active : ''} ${s.page}`} onClick={clickPage}>\r\n            {pages}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { CustomSnackbar } from \"../../../../main/ui/common/CustomSnackbar/CustomSnackbar\"\r\nimport { CustomTable } from \"../../../../main/ui/common/CustomTable/CustomTable\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { ErrorHandlingActions } from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\"\r\nimport { me } from \"../../../f1-auth/login/bll-login/loginThunks\"\r\nimport { PacksActions } from \"../bll/packsActions\"\r\nimport { addPack, deletePack, getPacks, updatePack } from \"../bll/packsThunks\"\r\nimport { Pagination } from \"./Paginator\"\r\nimport s from './Packs.module.css'\r\nimport { CustomModalWindow } from \"../../../../main/ui/common/CustomModalWindow/CustomModalWindow\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { PackType } from \"../bll/packsInitState\"\r\nimport { Sort } from \"../../../../main/ui/common/SortComponent/Sort\";\r\nimport { Search } from \"../../../../main/ui/common/SearchComponent/SearchComponent\";\r\nimport { DoubleRangeSlider } from \"../../../../main/ui/common/DoubleRangeSlider/DoubleRangeSlider\";\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\";\r\n\r\n\r\nexport const Packs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const packs = useSelector<AppStoreType, PackType[]>(state => state.packs.packs)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.errorHandling.error)\r\n\r\n    const minCardsCount = useSelector<AppStoreType, number>(state => state.packs.minCardsCount)\r\n    const maxCardsCount = useSelector<AppStoreType, number>(state => state.packs.maxCardsCount)\r\n    const userId = useSelector<AppStoreType, string | null>(state => state.login.user_id)\r\n    const [min, setMin] = useState(minCardsCount)\r\n    const [max, setMax] = useState(maxCardsCount)\r\n    const [getMyPacks, setGetMyPacks] = useState(false)\r\n    const finallyUserId = getMyPacks && userId !== null ? userId : undefined\r\n\r\n    const recent_pack_id = useSelector<AppStoreType, string>(state => state.packs.recent_pack_id)\r\n\r\n    const [newModalActive, setNewModalActive] = useState<boolean>(false)\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    const [newTitleFromModal, setNewTitleFromModal] = useState<string>('')\r\n    const [titleFromModal, setTitleFromModal] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        if (!success) {\r\n            dispatch(me())\r\n        }\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        dispatch(getPacks({}))\r\n    }, [dispatch])\r\n\r\n    const addPackHandler = () => {\r\n        dispatch(addPack(newTitleFromModal))\r\n        setNewTitleFromModal('')\r\n        setNewModalActive(false)\r\n    }\r\n\r\n    const deletePackHandler = (id: string) => {\r\n        dispatch(deletePack(id))\r\n    }\r\n\r\n    const updatePackHandler = () => {\r\n        dispatch(updatePack(recent_pack_id, titleFromModal))\r\n        setTitleFromModal('')\r\n        setModalActive(false)\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        dispatch(PacksActions.setPackId(id))\r\n    }\r\n\r\n\r\n    const sortByMore = () => {\r\n        dispatch(getPacks({ sortPacks: \"0cardsCount\", user_id: finallyUserId }))\r\n    }\r\n\r\n    const sortByFewer = () => {\r\n        dispatch(getPacks({ sortPacks: \"1cardsCount\", user_id: finallyUserId }))\r\n    }\r\n\r\n    const searchByName = (name: string) => {\r\n        dispatch(getPacks({ packName: name, min, max, user_id: finallyUserId }))\r\n    }\r\n\r\n    const onSearchingValuesChange = (values: [number, number]) => {\r\n        setMin(values[0])\r\n        setMax(values[1])\r\n    }\r\n\r\n    const onMyPacksCheckboxChange = (value: boolean) => {\r\n        setGetMyPacks(value)\r\n        dispatch(getPacks({ min, max, user_id: value && userId !== null ? userId : undefined }))\r\n    }\r\n\r\n    if (!success) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsContainer}>\r\n            Packs page\r\n            {loading && <Preloader />}\r\n            {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n            <Pagination />\r\n            <div className={s.searchUtils}>\r\n                <div className={s.checkbox}>\r\n                    My packs\r\n                    <CustomCheckbox onChangeChecked={onMyPacksCheckboxChange} />\r\n                </div>\r\n                <div className={s.searchBlock}>\r\n                    Search by amount of cards:\r\n                    <DoubleRangeSlider min={minCardsCount} max={maxCardsCount} value={[min, max]}\r\n                        onChangeRange={onSearchingValuesChange} />\r\n                    Search by name:\r\n                    <Search placeholder={\"Search by name\"} searchFunction={searchByName} />\r\n                </div>\r\n                <div className={s.sortComponent}>Sorting by amout of cards:\r\n                    <Sort sortByMore={sortByMore} sortByFewer={sortByFewer} />\r\n                </div>\r\n            </div>\r\n            <CustomTable title={['Packs', 'Cards', 'Updated', 'url']}\r\n                data={packs}\r\n                deleteItemCallback={deletePackHandler}\r\n                saveRecentIdCallback={packIdSaver}\r\n                setModalView={setModalActive}\r\n                setNewModalView={setNewModalActive}\r\n                disabled={loading} />\r\n            {/* New title */}\r\n            <CustomModalWindow active={newModalActive} setActive={setNewModalActive}>\r\n                <p>Choose Title</p>\r\n                <CustomInput value={newTitleFromModal} onChange={e => setNewTitleFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => addPackHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setNewModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n            {/* Update title */}\r\n            <CustomModalWindow active={modalActive} setActive={setModalActive}>\r\n                <p>Change Title</p>\r\n                <CustomInput value={titleFromModal} onChange={e => setTitleFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => updatePackHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n\r\n        </div>\r\n    )\r\n}","import style from './ErrorPage.module.css'\r\n\r\nexport const ErrorPage = () => {\r\n    return (\r\n        <div className={style.error_page}>\r\n            <div className={style.title_404}>404</div>\r\n            <div className={style.title}>UH OH! You're lost. ฅ/ᐠ.̫ .ᐟ\\ฅ</div>\r\n            <span>\r\n                The page you are looking for does not exist. <br />\r\n                        How you got here is a mystery! <br />\r\n                        But you can choose the section above and have fun there!\r\n                    </span>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ErrorHandlingActions } from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getCards, updateCardGrade } from \"../../../f2-cards/cards/bll/cardsThunks\";\r\nimport { CardType } from \"../../../f2-cards/cards/bll/cardsInitState\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\";\r\nimport s from './Learning.module.css'\r\n\r\nexport type AnswerRateType = 1 | 2 | 3 | 4 | 5\r\n\r\nexport const Learning = () => {\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams<{ id: string }>()\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cards.cards)\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const [currentCard, setCurrentCard] = useState<CardType>({\r\n        _id: '',\r\n        cardsPack_id: '',\r\n        user_id: '',\r\n        answer: '',\r\n        question: '',\r\n        grade: 0,\r\n        shots: 0,\r\n        questionImg: '',\r\n        answerImg: '',\r\n        answerVideo: '',\r\n        questionVideo: '',\r\n        comments: '',\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n        created: '',\r\n        updated: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        if (first) {\r\n            dispatch(getCards(id));\r\n            setFirst(false);\r\n        }\r\n        if (cards.length > 0) setCurrentCard(getCard(cards));\r\n    }, [dispatch, id, cards, first])\r\n\r\n    const getCard = (cards: CardType[]) => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n        const rand = Math.random() * sum;\r\n        const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return { sum: newSum, id: newSum < rand ? i : acc.id }\r\n        }\r\n            , { sum: 0, id: -1 });\r\n\r\n        return cards[res.id + 1];\r\n    }\r\n\r\n\r\n    const onRateButtonClick = (rate: AnswerRateType) => {\r\n        setCheck(false)\r\n        dispatch(updateCardGrade(currentCard._id, rate, id))\r\n        setCurrentCard(getCard(cards))\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <p>Learning Page</p>\r\n            {!check ?\r\n\r\n                <div className={s.questionBlock}>\r\n                    { loading ?\r\n                        <div className={s.learning_preloader}><Preloader /></div>\r\n                              :\r\n                        <div className={s.question}>\r\n\r\n                            <div className={s.text}>Question: {currentCard.question}</div>\r\n                        </div>\r\n                    }\r\n                    <CustomButton onClick={() => setCheck(true)} disabled={loading}>Check</CustomButton>\r\n                </div>\r\n                    :\r\n                <div className={s.answerBlock}>\r\n                    <div className={s.answer}>\r\n                        <div className={s.text}>Answer: {currentCard.answer}</div>\r\n                    </div>\r\n                <div className={s.answerButtons}>\r\n                    <div>Rate your answer:</div>\r\n                    <CustomButton onClick={() => onRateButtonClick(1)} disabled={loading}>Easy to answer</CustomButton>\r\n                    <CustomButton onClick={() => onRateButtonClick(2)} disabled={loading}>Right answer</CustomButton>\r\n                    <CustomButton onClick={() => onRateButtonClick(3)} disabled={loading}>Almost correct answer</CustomButton>\r\n                    <CustomButton onClick={() => onRateButtonClick(4)} disabled={loading}>It was hard to answer</CustomButton>\r\n                    <CustomButton onClick={() => onRateButtonClick(5)} disabled={loading}>Wrong answer</CustomButton>\r\n                </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}","import React from \"react\"\r\nimport {Switch} from \"react-router\"\r\nimport {Redirect, Route, useParams} from \"react-router-dom\"\r\nimport {TestComponent} from \"../../../features/f0-test/TestComponent/ui/TestComponent\"\r\nimport {Forgot} from \"../../../features/f1-auth/forgot/ui-forgot/Forgot\"\r\nimport {Login} from \"../../../features/f1-auth/login/ui-login/Login\"\r\nimport {Profile} from \"../../../features/f1-auth/profile/ui-profile/Profile\"\r\nimport {Register} from \"../../../features/f1-auth/register/ui-register/Register\"\r\nimport {SetPassword} from \"../../../features/f1-auth/setPass/ui-setPass/SetPassword\"\r\nimport {Cards} from \"../../../features/f2-cards/cards/ui/Cards\"\r\nimport {Packs} from \"../../../features/f2-cards/packs/ui/Packs\"\r\nimport {ErrorPage} from \"../errorPage/ui/ErrorPage\"\r\nimport {Learning} from \"../../../features/f3-learning/learning/ui/Learning\";\r\n\r\nexport const PATH = {\r\n    HOME: '/',\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    PROFILE: \"/profile\",\r\n    FORGOT: '/forgot',\r\n    SET_PASS: '/set-new-password/',\r\n    TEST: '/test',\r\n    ERROR_PAGE: '/404',\r\n    CARDS: '/cards',\r\n    PACKS: '/packs',\r\n    LEARNING: '/learning'\r\n\r\n    // add paths\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу TEST*/}\r\n                <Route path={PATH.HOME} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.FORGOT} render={() => <Forgot/>}/>\r\n                <Route path={`${PATH.SET_PASS}/:id`} render={() => <SetPassword/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={`${PATH.CARDS}/:id`} render={() => <Cards/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestComponent/>}/>\r\n                <Route path={`${PATH.LEARNING}/:id`} render={() => <Learning/>}/>\r\n\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <ErrorPage/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStoreType } from \"../../bll/store\";\r\nimport { PATH } from \"../routes/Routes\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n\r\n    const recent_pack_id = useSelector<AppStoreType, string>(state => state.packs.recent_pack_id)\r\n    const samePath = recent_pack_id ? `${recent_pack_id}` : ''\r\n\r\n\r\n    return (\r\n        <div className={style.nav_container}>\r\n        <div className={style.nav_bar}>\r\n            <NavLink to={PATH.TEST} className={style.nav_link} activeClassName={style.current}>Home</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={style.nav_link} activeClassName={style.current}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTER} className={style.nav_link} activeClassName={style.current}>Register</NavLink>\r\n            <NavLink to={PATH.PROFILE} className={style.nav_link} activeClassName={style.current}>Profile</NavLink>\r\n            <NavLink to={PATH.FORGOT} className={style.nav_link} activeClassName={style.current}>Forgot</NavLink>\r\n            <NavLink to={PATH.SET_PASS} className={style.nav_link} activeClassName={style.current}>Set Password</NavLink>\r\n            <NavLink to={PATH.PACKS} className={style.nav_link} activeClassName={style.current}>Packs</NavLink>\r\n            <NavLink to={`${PATH.CARDS}/${samePath}`} className={style.nav_link} activeClassName={style.current}>Cards</NavLink>\r\n            <NavLink to={`${PATH.LEARNING}/${samePath}`} className={style.nav_link} activeClassName={style.current}>Learning</NavLink>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Routes } from \"./ui/routes/Routes\"\r\nimport { Header } from './ui/header/Header'\r\nimport s from './Main.module.css'\r\n\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <Header />\r\n            <Routes />\r\n        </div>\r\n    )\r\n}","import { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from '../bll/store';\nimport { Main } from '../Main';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <>\n        <HashRouter>\n          <Provider store={store}>\n            <Main />\n          </Provider>\n        </HashRouter>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/main/ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["features/f1-auth/login/ui-login/LoginForm/LoginForm.module.css","main/ui/common/stylingUtils/navlinkStyling.module.css","main/ui/common/CustomRadio/CustomRadio.module.css","main/ui/common/CustomCheckbox/CustomCheckbox.module.css","main/ui/common/CustomInput/CustomInput.module.css","main/ui/errorPage/ui/ErrorPage.module.css","main/ui/common/CustomButton/CustomButton.module.css","features/f0-test/TestComponent/ui/TestComponent.module.css","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.module.css","main/ui/common/CustomSnackbar/CustomSnackbar.module.css","main/ui/common/CustomPreloader/CustomPreloader.module.css","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.module.css","main/Main.module.css","main/ui/common/CustomTable/CustomTable.module.css","main/ui/header/Header.module.css","features/f1-auth/login/bll-login/loginInitState.ts","features/f1-auth/forgot/bll-forgot/forgotInitState.ts","features/f1-auth/profile/bll-profile/profileInitState.ts","features/f1-auth/register/bll-register/api-instance.ts","features/f1-auth/register/bll-register/registerActions.ts","features/f1-auth/register/bll-register/registerInitState.ts","features/f1-auth/setPass/bll-setPass/setPassInitState.ts","features/f2-cards/packs/bll/packsInitState.ts","features/f2-cards/cards/bll/cardsInitState.ts","main/bll/store.ts","features/f1-auth/forgot/bll-forgot/forgotReducer.ts","features/f1-auth/login/bll-login/loginReducer.ts","features/f1-auth/profile/bll-profile/profileReducer.ts","features/f1-auth/register/bll-register/registerReducer.ts","features/f1-auth/setPass/bll-setPass/setPassReducer.ts","features/f2-cards/packs/bll/packsReducer.ts","features/f2-cards/cards/bll/cardsReducer.ts","main/ui/common/CustomButton/CustomButton.tsx","main/ui/common/CustomCheckbox/CustomCheckbox.tsx","main/ui/common/CustomInput/CustomInput.tsx","main/ui/common/CustomRadio/CustomRadio.tsx","features/f0-test/TestComponent/ui/TestComponent.tsx","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.tsx","features/f1-auth/forgot/dal-forgot/forgotInstance.ts","features/f1-auth/forgot/bll-forgot/forgotActions.ts","features/f1-auth/forgot/ui-forgot/Forgot.tsx","features/f1-auth/forgot/bll-forgot/forgotThunks.ts","features/f1-auth/login/bll-login/loginActions.ts","main/dal/instance.ts","main/dal/baseURLs.ts","features/f1-auth/login/dal-login/loginInstance.ts","features/f1-auth/login/bll-login/loginThunks.ts","main/ui/common/CustomSnackbar/CustomSnackbar.tsx","main/assets/dbringload.svg","main/ui/common/CustomPreloader/CustomPreloader.tsx","features/f1-auth/login/ui-login/LoginForm/LoginForm.tsx","features/f1-auth/login/ui-login/Login.tsx","features/f1-auth/profile/ui-profile/Profile.tsx","features/f1-auth/register/ui-register/Register.tsx","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.tsx","features/f1-auth/setPass/dal-setPass/setPassInstance.ts","features/f1-auth/setPass/bll-setPass/setPassActions.ts","features/f1-auth/setPass/ui-setPass/SetPassword.tsx","features/f1-auth/setPass/bll-setPass/setPassThunks.ts","features/f2-cards/cards/dal/cardsInstance.ts","features/f2-cards/cards/bll/cardsActions.ts","features/f2-cards/cards/bll/cardsThunks.ts","features/f2-cards/cards/ui/CardsTable.tsx","features/f2-cards/cards/ui/Cards.tsx","main/ui/common/CustomTable/CustomTable.tsx","features/f2-cards/packs/bll/packsActions.ts","features/f2-cards/packs/dal/packsInstance.ts","features/f2-cards/packs/bll/packsThunks.ts","features/f2-cards/packs/ui/Packs.tsx","main/ui/errorPage/ui/ErrorPage.tsx","main/ui/routes/Routes.tsx","main/ui/header/Header.tsx","main/Main.tsx","main/ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","loginInitialState","error","loading","success","forgotInitialState","message","profileInitialState","instance","axios","create","baseURL","withCredentials","fridayAPI","email","password","post","RegisterActions","isRegister","type","registerInitialState","setPassInitialState","responseMessage","PacksInitState","packs","packUser_id","recent_pack_id","CardsInitState","cards","rootReducer","combineReducers","forgot","state","action","login","profile","register","setPass","id","store","createStore","applyMiddleware","thunk","window","Button","red","className","restProps","finalClassName","s","default","Checkbox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","checkboxLabel","e","currentTarget","checked","customSpan","Input","onChangeText","onKeyPress","onEnter","finalSpanClassName","superInput","input_container","value","key","CustomRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","style","label","radio","design","text","radio_wrapper","TestComponent","testContainer","CustomButton","CustomCheckbox","CustomInput","ForgotForm","props","useState","setLogin","forgotForm","onClick","disabled","to","sUtils","loginLink","forgotAPI","from","ForgotActions","Forgot","dispatch","useDispatch","useSelector","a","res","data","info","response","ForgotTC","LoginActions","loginAPI","delete","me","status","CustomSnackbar","memo","title","timer","visual","setVisual","useEffect","show","setTimeout","clearTimeout","snackbar","Preloader","preloaderContainer","src","preloader","alt","LoginForm","rememberMe","details","setDetails","loginForm","loginGroup","htmlFor","target","rememberMeLabel","PATH","FORGOT","REGISTER","Login","PROFILE","Profile","isAuth","setIsAuth","logout","useCallback","LOGIN","Register","setEmail","pass","repPass","setrepPpass","placeholder","color","then","console","log","catch","loginTC","SetPasswordForm","password1","setPassword1","password2","setPassword2","setPasswordPage","setNewPassword","setError","setPassAPI","resetPasswordToken","SetPassActions","SetPassword","useParams","SetPassTC","cardsAPI","cardsPack_id","get","card","question","grade","Math","floor","random","answer","put","_id","CardsActions","getCards","CardsTable","cardId","addItemCallback","deleteItemCallback","updateItemCallback","titleFiller","t","dataFiller","dataItem","dataIndex","trStyling","tdStyling","date","updated","Date","toLocaleDateString","day","month","year","tableStyling","Cards","PACKS","addCard","pack_id","deleteCard","updateCard","CustomTable","saveRecentIdCallback","cardsCount","CARDS","navlinkStyling","PacksActions","packsAPI","params","pageCount","cardsPack","getPacks","cardPacks","Packs","deletePack","updatePack","ErrorPage","error_page","title_404","HOME","SET_PASS","TEST","ERROR_PAGE","Routes","path","exact","render","Header","samePath","nav_container","nav_bar","nav_link","activeClassName","current","Main","mainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,WAAa,8BAA8B,gBAAkB,qC,mBCA/ED,EAAOC,QAAU,CAAC,UAAY,oC,mBCA9BD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,MAAQ,2BAA2B,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,8B,mBCArLD,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,SAAW,iCAAiC,WAAa,qC,mBCAjID,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,WAAa,gCAAgC,OAAS,4BAA4B,WAAa,gCAAgC,MAAQ,6B,mBCAhND,EAAOC,QAAU,CAAC,WAAa,8BAA8B,UAAY,6BAA6B,MAAQ,2B,mBCA9GD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,IAAM,4B,mBCAtGD,EAAOC,QAAU,CAAC,cAAgB,uC,mBCAlCD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,OAAS,+BAA+B,QAAU,kC,mBCAhHD,EAAOC,QAAU,CAAC,mBAAqB,8C,mBCAvCD,EAAOC,QAAU,CAAC,gBAAkB,2C,mBCApCD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,UAAY,0B,uCCA1ED,EAAOC,QAAU,CAAC,aAAe,kCAAkC,UAAY,+BAA+B,UAAY,iC,kBCA1HD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,cAAgB,8BAA8B,SAAW,yBAAyB,KAAO,qBAAqB,QAAU,0B,8HCO/JC,EAAoC,CAC7CC,MAAO,GACPC,SAAS,EACTC,SAAS,G,gBCFAC,EAAsC,CAC/CH,MAAO,GACPC,SAAS,EACTC,SAAS,EACTE,QAAS,ICPAC,EAAwC,G,iBCFxCC,EAAWC,IAAMC,OAAO,CACnCC,QAHqB,sCAIrBC,iBAAiB,IAGNC,EAAY,SACdC,EAAeC,GAEtB,OADgBP,EAASQ,KAAmB,iBAAkB,CAAEF,QAAOC,cCP9DE,EACM,SAACC,GAAD,MAA0B,CACzCC,KAAM,uBACND,eCHSE,EAA0C,CACrDF,YAAY,GCEDG,EAAwC,CACjDnB,MAAO,GACPoB,gBAAiB,GACjBlB,SAAS,GCkBAmB,EAAiC,CAC1CC,MAAO,GACPC,YAAa,GACbC,eAAgB,ICFPC,EAAiC,CAC1CC,MAAO,ICnBLC,EAAcC,YAAgB,CAChCC,OCRyB,WAA6E,IAA5EC,EAA2E,uDAAnE3B,EAAoB4B,EAA+C,uCACrG,OAAQA,EAAOd,MACX,IAAK,mBACD,OAAO,2BAAIa,GAAX,IAAkB9B,MAAO+B,EAAO/B,QACpC,IAAK,qBACD,OAAO,2BAAI8B,GAAX,IAAkB5B,QAAS6B,EAAO7B,UACtC,IAAK,qBACD,OAAO,2BAAI4B,GAAX,IAAkB1B,QAAS2B,EAAO3B,UACtC,QACI,OAAO0B,IDAfE,METwB,WAA0E,IAAzEF,EAAwE,uDAAhE/B,EAAmBgC,EAA6C,uCACjG,OAAQA,EAAOd,MACX,IAAK,kBACD,OAAO,2BACAa,GADP,IAEI9B,MAAO+B,EAAO/B,MACdC,SAAS,EACTC,SAAS,IAGjB,IAAK,oBACD,OAAO,2BACA4B,GADP,IAEI9B,MAAO,GACPC,SAAS,EACTC,QAAS6B,EAAO7B,UAGxB,IAAK,oBACD,OAAO,2BACA4B,GADP,IAEI9B,MAAO,GACPC,QAAS8B,EAAO9B,QAChBC,SAAS,IAGjB,QACI,OAAO4B,IFjBfG,QGV0B,WAAgF,IAA/EH,EAA8E,uDAAtEzB,EAAqB0B,EAAiD,uCAGjG,OAFAA,EAAOd,KAEAa,GHQfI,SIV2B,WAAmF,IAAlFJ,EAAiF,uDAAzEZ,EAAsBa,EAAmD,uCAC/G,OAAQA,EAAOd,MACb,IAAK,uBACH,OAAO,2BAAKa,GAAZ,IAAmBd,WAAYe,EAAOf,aAExC,QACE,OAAOc,IJKTK,QKZ0B,WAAgF,IAA/EL,EAA8E,uDAAtEX,EAAqBY,EAAiD,uCACzG,OAAQA,EAAOd,MACX,IAAK,oBACD,OAAO,2BAAIa,GAAX,IAAkB9B,MAAO+B,EAAO/B,QACpC,IAAK,sBACD,OAAO,2BAAI8B,GAAX,IAAkB5B,QAAS6B,EAAO7B,UACtC,IAAK,sBACD,OAAO,2BAAI4B,GAAX,IAAkBV,gBAAiBW,EAAO3B,UAC9C,QACI,OAAO0B,ILIfR,MMdwB,WAAuE,IAAtEQ,EAAqE,uDAA7DT,EAAgBU,EAA6C,uCAC9F,OAAQA,EAAOd,MACX,IAAK,kBACD,OAAO,2BACAa,GADP,IAEIR,MAAOS,EAAOT,QAGtB,IAAK,oBACD,OAAO,2BACAQ,GADP,IAEIN,eAAgBO,EAAOK,KAG/B,QACI,OAAON,INAfJ,MOfwB,WAAuE,IAAtEI,EAAqE,uDAA7DL,EAAgBM,EAA6C,uCAC9F,OAAQA,EAAOd,MACX,IAAK,kBACD,OAAO,2BACAa,GADP,IAEIJ,MAAOK,EAAOL,QAGtB,QACI,OAAOI,MPSbO,EAAQC,YAAYX,EAAaY,YAAgBC,MAKxCH,IAGXI,OAAOJ,MAAQA,E,2CQHJK,EAhBgC,SAAC,GAK1C,IAHEC,EAGH,EAHGA,IAAKC,EAGR,EAHQA,UACFC,EAEN,mCACKC,EAAc,UAAMH,EAAMI,IAAEJ,IAAMI,IAAEC,QAAtB,YAAiCJ,GAErD,OACI,oCACIA,UAAWE,GACPD,K,iBCwBDI,EAlCoC,SAAC,GAS/C,EAPGhC,KAOF,IANEiC,EAMH,EANGA,SAAUC,EAMb,EANaA,gBACVP,EAKH,EALGA,UACAQ,GAIH,EALcC,cAKd,EAJGD,UAEGP,EAEN,4FAQKS,EAAmB,UAAMP,IAAEQ,SAAR,YAAoBX,GAAwB,IAErE,OACI,wBAAOA,UAAWG,IAAES,cAApB,UACI,mCACIvC,KAAM,WACNiC,SAba,SAACO,GAEtBP,GAAYA,EAASO,GAErBN,GAAmBA,EAAgBM,EAAEC,cAAcC,UAU3Cf,UAAWU,GAEPT,IACN,sBAAMD,UAAWG,IAAEa,aACpBR,GAAY,sBAAMR,UAAWG,IAAEM,cAAnB,SAAmCD,Q,iBCmB7CS,EA3CkC,SAAC,GAU5C,IARE5C,EAQH,EARGA,KACAiC,EAOH,EAPGA,SAAUY,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZhE,EAKH,EALGA,MACWqD,GAId,EAJGT,UAIH,EAJcS,eAERR,EAEN,6GAeKoB,EAAkB,UAAMlB,IAAE/C,MAAR,YAAiBqD,GAAgC,IACnEC,EAAmB,UAAMtD,EAAQ,GAAK+C,IAAEmB,YAE9C,OACI,sBAAKtB,UAAWG,IAAEoB,gBAAlB,UACI,mCACIlD,KAAMA,EACNiC,SArBa,SAACO,GACtBP,GACGA,EAASO,GAEZK,GAAgBA,EAAaL,EAAEC,cAAcU,QAkBrCL,WAhBe,SAACN,GACxBM,GAAcA,EAAWN,GAEf,UAAVA,EAAEY,KACCL,GACAA,KAYKpB,UAAWU,GAEPT,IAEP7C,GAAS,sBAAM4C,UAAWqB,EAAjB,SAAsCjE,Q,iBCF7CsE,EAzCoC,SAAC,GAO/C,EALGrD,KAKF,IALQsD,EAKT,EALSA,KACNC,EAIH,EAJGA,QAASJ,EAIZ,EAJYA,MACCK,GAGb,EAHGvB,SAGH,EAHauB,gBAIRC,GADL,6EACwB,SAACjB,GACtBgB,GAAkBA,EAAehB,EAAEC,cAAcU,SAO/CO,EAAuBH,EAAUA,EAAQI,KAAI,SAACC,EAAGC,GAAJ,OAC/C,wBAAOlC,UAAWmC,IAAMC,MAAxB,UACI,uBAAOpC,UAAWmC,IAAME,MACpBV,KAAMA,EACNrB,SAAUwB,EACVzD,KAAM,QACNmD,MAAOS,EACPlB,QAASS,IAAUS,IAGvB,qBAAKjC,UAAWmC,IAAMG,SACtB,sBAAMtC,UAAWmC,IAAMI,KAAvB,SACKN,MAX2BN,EAAO,IAAMO,MAehD,GAEL,OACI,qBAAKlC,UAAWmC,IAAMK,cAAtB,SACKT,K,iBCvCAU,EAAgB,WACzB,OACI,sBAAKzC,UAAWG,IAAEuC,cAAlB,UACI,cAACC,EAAD,mBACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,CAAajB,QAAS,CAAC,EAAG,S,yCCEzBkB,EAAa,SAACC,GAAgC,IAAD,EAC5BC,mBAAS,IADmB,mBAC/C5D,EAD+C,KACxC6D,EADwC,KAKtD,OACI,sBAAKjD,UAAWG,IAAE+C,WAAlB,UACI,6CACiB,KAAhBH,EAAM3F,OAAgB2F,EAAM3F,MACV,KAAlB2F,EAAMvF,SAAkBuF,EAAMvF,QAC/B,cAACqF,EAAD,CAAaxE,KAAK,OAAOmD,MAAOpC,EAAOkB,SARzB,SAACO,GACnBoC,EAASpC,EAAEC,cAAcU,UAQrB,8BAAK,cAACmB,EAAD,CAAcQ,QAAS,kBAAMJ,EAAM9D,OAAOG,IAAQgE,UAAWL,EAAMzF,QAAnE,oBACL,8BACI,cAAC,IAAD,CAAS+F,GAAI,SAAUrD,UAAWsD,IAAOC,UAAzC,yB,yBC1BV7F,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,sCACTC,iBAAiB,IAIR0F,GAAY,SACdxF,GACH,OAAON,GAASQ,KAAK,eAAgB,CACjCF,QACAyF,KAAM,QACNjG,QAAQ,kMCTPkG,GACC,SAACtG,GAAD,MACL,CACGiB,KAAM,mBACNjB,UAJCsG,GAMG,SAACpG,GAAD,MACP,CACGe,KAAM,qBACNf,YATCoG,GAWG,SAAClG,GAAD,MACP,CACGa,KAAM,qBACNb,YCZCmG,GAAS,WAClB,IAAMC,EAAWC,cACXzG,EAAQ0G,aAAkC,SAAA5E,GAAK,OAAIA,EAAMD,OAAO7B,SAChEE,EAAUwG,aAAmC,SAAA5E,GAAK,OAAIA,EAAMD,OAAO3B,WACnEE,EAAUsG,aAAkC,SAAA5E,GAAK,OAAIA,EAAMD,OAAOzB,WAKxE,OACI,mCACI,cAAC,EAAD,CAAYyB,OANL,SAACjB,GACZ4F,ECRgB,SAAC5F,GAAD,8CAAmB,WAAO4F,GAAP,iBAAAG,EAAA,sEAEnCH,EAASF,IAAyB,IAFC,SAGjBF,GAAiBxF,GAHA,OAG7BgG,EAH6B,OAInCJ,EAASF,IAAyB,IAClCE,EAASF,GAAyBM,EAAIC,KAAKC,OALR,gDAO7B9G,EAAQ,KAAE+G,SAAW,KAAEA,SAASF,KAAK7G,MAAS,gBACpDwG,EAASF,GAAuBtG,IAChCwG,EAASF,IAAyB,IATC,yDAAnB,sDDQPU,CAASpG,KAKcZ,MAAOA,EAAOE,QAASA,EAASE,QAASA,OEbpE6G,GACC,SAACjH,GAAD,MACT,CACCiB,KAAM,kBACNjB,UAJOiH,GAMG,SAAChH,GAAD,MACX,CACCgB,KAAM,oBACNhB,YATOgH,GAWG,SAAC/G,GAAD,MACX,CACCe,KAAM,oBACNf,YCdOI,GAAWC,IAAMC,OAAO,CACjCC,QCLkB,6BDMlBC,iBAAiB,IEHRwG,GAAW,SACbL,GACH,OAAOvG,GAASQ,KAAK,aAAc+F,IAF9BK,GAAW,WAKhB,OAAO5G,GAAS6G,OAAO,YALlBD,GAAW,WAQhB,OAAO5G,GAASQ,KAAK,YCiChBsG,GAAK,yDAKb,WAAOZ,GAAP,eAAAG,EAAA,6DACHH,EAASS,IAAwB,IAD9B,kBAGiBC,KAHjB,OAIiB,MAJjB,OAIMG,SACPb,EAASS,IAAwB,IACjCT,EAASS,IAAwB,KANhC,gDASKjH,EAAQ,KAAE+G,SACZ,KAAEA,SAASF,KAAK7G,MAChB,KAAEI,QAAU,gCAChBoG,EAASS,IAAwB,IACjCT,EAASS,GAAsBjH,IAb9B,yDALa,uD,wCCpCLsH,GAAyCC,gBAAK,YAAuB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAAY,EAEjD7B,oBAAkB,GAF+B,mBAEtE8B,EAFsE,KAE9DC,EAF8D,KAc7E,OAVAC,qBAAU,WACND,GAAU,kBAAM,KAChB,IAAME,EAAOC,YAAW,WACpBH,GAAU,kBAAM,OACjBF,GACH,OAAO,WACHM,aAAaF,MAElB,IAGC,mCAEQH,GACA,qBAAK9E,UAAWG,KAAEiF,SAAlB,SACKR,SC3BN,OAA0B,uC,oBCG5BS,GAAY,WACrB,OAAQ,qBAAKrF,UAAWG,KAAEmF,mBAAlB,SACJ,qBAAKC,IAAKC,GAAWC,IAAI,kBCcpBC,GAA+Bf,gBAAK,YAAuB,IAApBvF,EAAmB,EAAnBA,MAAOhC,EAAY,EAAZA,MAAY,EAErC4F,mBAA2B,CAAEhF,MAAO,oBAAqBC,SAAU,YAAa0H,YAAY,IAFvD,mBAE5DC,EAF4D,KAEnDC,EAFmD,KAG7DxI,EAAUyG,aAAmC,SAAA5E,GAAK,OAAIA,EAAME,MAAM/B,WAkBxE,OACI,mCACKA,EACG,cAAC,GAAD,IAEA,qCACe,KAAVD,GAAgB,cAACsH,GAAD,CAAgBE,MAAOxH,EAAOyH,MAAO,MACtD,sBAAK7E,UAAWG,KAAE2F,UAAlB,UACI,sBAAK9F,UAAWG,KAAE4F,WAAlB,UACI,uBAAOC,QAAQ,QAAf,oBACA,cAACnD,EAAD,CAAavC,SA1BR,SAACO,GAC1BgF,EAAW,2BAAKD,GAAN,IAAe5H,MAAO6C,EAAEoF,OAAOzE,UAyBwBA,MAAOoE,EAAQ5H,MAAOK,KAAK,QAAQsD,KAAK,QAAQnC,GAAG,aAEpG,sBAAKQ,UAAWG,KAAE4F,WAAlB,UACI,uBAAOC,QAAQ,WAAf,uBACA,cAACnD,EAAD,CAAavC,SA1BL,SAACO,GAC7BgF,EAAW,2BAAKD,GAAN,IAAe3H,SAAU4C,EAAEoF,OAAOzE,UAyBwBA,MAAOoE,EAAQ3H,SAAUI,KAAK,WAAWsD,KAAK,WAAWnC,GAAG,gBAEhH,sBAAKQ,UAAWG,KAAE4F,WAAlB,UACI,cAACnD,EAAD,CAAgBtC,SAzBN,SAACO,GAC/BgF,EAAW,2BAAKD,GAAN,IAAeD,WAAY9E,EAAEoF,OAAOlF,YAwB2BA,QAAS6E,EAAQD,aACtE,uBAAO3F,UAAWG,KAAE+F,gBAApB,4BAEJ,qBAAKlG,UAAWG,KAAE4F,WAAlB,SACI,cAACpD,EAAD,CAActE,KAAM,SAAU8E,QAzBlC,SAACtC,GACjBzB,EAAMwG,IAwBkExC,SAAU/F,EAA9D,uBAEJ,sBAAK2C,UAAWG,KAAE4F,WAAlB,UACI,cAAC,IAAD,CAAS1C,GAAI8C,GAAKC,OAAQpG,UAAWsD,IAAOC,UAA5C,qBACA,cAAC,IAAD,CAASF,GAAI8C,GAAKE,SAAUrG,UAAWsD,IAAOC,UAA9C,oCCvDf+C,GAAQ3B,gBAAK,WAEtB,IAAMf,EAAWC,cACXvG,EAAUwG,aAAmC,SAAA5E,GAAK,OAAIA,EAAME,MAAM9B,WAClEF,EAAQ0G,aAAkC,SAAA5E,GAAK,OAAIA,EAAME,MAAMhC,SAErE4H,qBAAU,WACNpB,EAASS,GAAsB,OAChC,CAACT,IAMJ,OAAItG,EAAgB,cAAC,IAAD,CAAU+F,GAAI8C,GAAKI,UAGnC,mCACI,cAACb,GAAD,CAAWtG,MARL,SAACwG,GLdG,IACpB3B,EKcML,GLdNK,EKcsB2B,ELfF,uCAEgE,WACpFhC,GADoF,eAAAG,EAAA,6DAGpFH,EAASS,IAAwB,IAHmD,kBAKhEC,GAAgBL,GALgD,cAMlFL,EAASS,IAAwB,IACjCT,EAASS,IAAwB,IAPiD,gDAS5EjH,EAAQ,KAAE+G,SACZ,KAAEA,SAASF,KAAK7G,MAChB,KAAEI,QAAU,gCAChBoG,EAASS,IAAwB,IACjCT,EAASS,GAAsBjH,IAbmD,yDAFhE,yDKsBeA,MAAOA,SCnB/BoJ,GAAU,WACnB,IAAM5C,EAAWC,cACXvG,EAAUwG,aAAmC,SAAA5E,GAAK,OAAIA,EAAME,MAAM9B,WAClED,EAAUyG,aAAmC,SAAA5E,GAAK,OAAIA,EAAME,MAAM/B,WAH/C,EAIG2F,mBAAkB1F,GAJrB,mBAIlBmJ,EAJkB,KAIVC,EAJU,KAMzB1B,qBAAU,WACNpB,EAASY,QACV,CAACZ,IAEJ,IAAM+C,EAASC,uBAAY,WACvBhD,ENKe,uCAKlB,WAAOA,GAAP,eAAAG,EAAA,6DACHH,EAASS,IAAwB,IAD9B,kBAGiBC,KAHjB,cAIDV,EAASS,IAAwB,IAJhC,gDAMKjH,EAAQ,KAAE+G,SACZ,KAAEA,SAASF,KAAK7G,MAChB,KAAEI,QAAU,gCAChBoG,EAASS,IAAwB,IACjCT,EAASS,GAAsBjH,IAV9B,yDALkB,uDMJfsJ,GAAU,kBAAM,OACjB,IAEH,OAAKD,EAGD,mCACKpJ,EACG,cAAC,GAAD,IAEA,qCACI,sDACA,cAACsF,EAAD,CAAcQ,QAASwD,EAAQvD,SAAU/F,EAAzC,0BATM,cAAC,IAAD,CAAUgG,GAAI8C,GAAKU,SCfhCC,GAAW,WACtB,IAAMlD,EAAWC,cAEXzF,EAAa0F,aAAmC,SAAC5E,GAAD,OAAWA,EAAMI,SAASlB,cAHpD,EAKF4E,mBAAS,IALP,mBAKrBhF,EALqB,KAKd+I,EALc,OAMJ/D,mBAAS,IANL,mBAMrBgE,EANqB,KAMfzH,EANe,OAOGyD,mBAAS,IAPZ,mBAOrBiE,EAPqB,KAOZC,EAPY,KAuB5B,OAAI9I,EACK,cAAC,IAAD,CAAUiF,GAAI,WAIrB,qDAEE,cAAC,EAAD,CAAO7B,MAAOxD,EAAOsC,SArBL,SAACO,GACnBkG,EAASlG,EAAEC,cAAcU,QAoBqB2F,YAAa,qBACzD,cAAC,EAAD,CAAO3F,MAAOwF,EAAM1G,SAnBL,SAACO,GAClBtB,EAAQsB,EAAEC,cAAcU,QAkBoBnD,KAAM,WAAY8I,YAAa,oBACxEH,IAASC,EAAU,qBAAK9E,MAAO,CAAEiF,MAAO,OAArB,wCAAiE,KACrF,cAAC,EAAD,CAAO5F,MAAOyF,EAAS3G,SAlBL,SAACO,GACrBqG,EAAYrG,EAAEC,cAAcU,QAiBsBnD,KAAM,WAAY8I,YAAa,gBAC/E,cAAC,EAAD,CAAQhE,QAfK,WACfS,EzBbmB,SAAC5F,EAAeC,GAAhB,OAAqC,SAAC2F,GAC3D7F,EACYC,EAAOC,GAChBoJ,MAAK,SAACrD,GACLsD,QAAQC,IAAI,OACZ3D,EAASzF,GAAgC,OAE1CqJ,OAAM,SAACpK,GACNkK,QAAQC,IAAI,ayBKLE,CAAQzJ,EAAOgJ,KActB,sBACA,cAAC,IAAD,CAAS3D,GAAI8C,GAAKU,MAAlB,yB,oBC/BOa,GAAkB,SAAC3E,GAA4B,IAAD,EAErBC,mBAAS,IAFY,mBAEhD2E,EAFgD,KAErCC,EAFqC,OAGrB5E,mBAAS,IAHY,mBAGhD6E,EAHgD,KAGrCC,EAHqC,KAevD,OACI,sBAAK9H,UAAWG,KAAE4H,gBAAlB,UACqB,KAAhBhF,EAAM3F,OAAgB2F,EAAM3F,MACF,KAA1B2F,EAAMvE,iBAA0BuE,EAAMvE,gBACvC,8BAAK,cAACqE,EAAD,CAAaxE,KAAM,WAAYmD,MAAOmG,EAAWrH,SAfpC,SAACO,GACvB+G,EAAa/G,EAAEoF,OAAOzE,YAelB,8BAAK,cAACqB,EAAD,CAAaxE,KAAM,WAAYmD,MAAOqG,EAAWvH,SAbpC,SAACO,GACvBiH,EAAajH,EAAEoF,OAAOzE,YAalB,8BAAK,cAACmB,EAAD,CAAcQ,QAVO,WAC9BwE,IAAcE,EAAY9E,EAAMiF,eAAeL,GAAa5E,EAAMkF,SAAS,yBAShB7E,UAAWL,EAAMzF,QAAnE,gCChCXI,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,sCACTC,iBAAiB,IAIRoK,GAAa,SACVjK,EAAkBkK,GAC1B,OAAOzK,GAASQ,KAAK,yBAA0B,CAC3CD,WACAkK,wBCRCC,GACC,SAAChL,GAAD,MAAoB,CAC1BiB,KAAM,oBACNjB,UAHKgL,GAKG,SAAC9K,GAAD,MAAuB,CAC/Be,KAAM,sBACNf,YAPK8K,GASW,SAAC5K,GAAD,MAAsB,CACtCa,KAAM,sBACNb,YCPK6K,GAAc,WAEvB,IAAMzE,EAAWC,cACXzG,EAAQ0G,aAAkC,SAAA5E,GAAK,OAAIA,EAAMK,QAAQnC,SACjEE,EAAUwG,aAAmC,SAAA5E,GAAK,OAAIA,EAAMK,QAAQjC,WACpEkB,EAAkBsF,aAAkC,SAAA5E,GAAK,OAAIA,EAAMK,QAAQf,mBAC1EgB,EAAM8I,cAAN9I,GAcP,OACI,cAAC,GAAD,CAAiBwI,eAdE,SAAC/J,GAChBuB,GAAa,QAAPA,EAENoE,ECda,SAAC5F,EAAewB,GAAhB,8CAA+B,WAAOoE,GAAP,iBAAAG,EAAA,sEAEhDH,EAASwE,IAA0B,IAFa,SAG9BF,GAAuBlK,EAAOwB,GAHA,OAG1CwE,EAH0C,OAIhDJ,EAASwE,IAA0B,IACnCxE,EAASwE,GAAkCpE,EAAIC,KAAKC,OACpDN,EAASwE,GAAwB,KANe,kDAQ1ChL,EAAQ,KAAE+G,SAAW,KAAEA,SAASF,KAAK7G,MAAS,gBACpDwG,EAASwE,GAAwBhL,IACjCwG,EAASwE,IAA0B,IAVa,0DAA/B,sDDcJG,CAAUtK,EAAUuB,IACf,QAAPA,GACPoE,EAASwE,GAAwB,8EASYhL,MAAOA,EAAOE,QAASA,EACvDkB,gBAAiBA,EAAiByJ,SANtC,SAAC7K,GACdwG,EAASwE,GAAwBhL,QEjB5BoL,GAAW,SACbC,GACP,OAAO/K,GAASgL,IAAT,kCACsBD,KAHpBD,GAAW,SAMdC,GACN,OAAO/K,GAASQ,KAAK,aAAc,CACjCyK,KAAM,CACJF,eACAG,SAAU,mBACVC,MAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UACvBC,OAAQ,qBAZHT,GAAW,SAgBXhJ,GACT,OAAO9B,GAAS6G,OAAT,yBAAkC/E,KAjBhCgJ,GAAW,SAmBXhJ,GACT,OAAO9B,GAASwL,IAAT,aAA2B,CAChCP,KAAM,CACJQ,IAAK3J,EACLoJ,SAAU,wBACVK,OAAQ,eC1BHG,GACC,SAACtK,GAAD,MAAwB,CAC9BT,KAAM,kBACNS,UCJKuK,GAAW,SACtB7J,GADsB,OAEyC,SAACoE,GAChE4E,GACYhJ,GACT6H,MAAK,YAAe,IAAZpD,EAAW,EAAXA,KACPL,EAASwF,GAAsBnF,EAAKnF,WAErC0I,OAAM,SAAC3G,GACNyG,QAAQC,IAAI1G,Q,mBCELyI,GAAsC3E,gBAAK,YAAuF,IAApFC,EAAmF,EAAnFA,MAAOX,EAA4E,EAA5EA,KAAMsF,EAAsE,EAAtEA,OAAQC,EAA8D,EAA9DA,gBAAiBC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,mBAsB3GC,EAAc/E,EAAM5C,KAAI,SAAA4H,GAAC,OAAI,6BAC9BA,GADuC,SAAWA,MAIjDC,EAAa5F,EAAKjC,KAAI,SAAC8H,EAAeC,GAAhB,OAAsC,qBAAI/J,UAAWG,KAAE6J,UAAjB,UAC9D,oBAAIhK,UAAWG,KAAE8J,UAAjB,SAA6BH,EAASlB,WACtC,oBAAI5I,UAAWG,KAAE8J,UAAjB,SAA6BH,EAASb,SACtC,oBAAIjJ,UAAWG,KAAE8J,UAAjB,SAA6BH,EAASjB,QACtC,oBAAI7I,UAAWG,KAAE8J,UAAjB,UA5BgBC,EA4BwBJ,EAASK,QA3B1C,IAAIC,KAAKF,GAAMG,mBAAmB,KAAM,CAC3CC,IAAK,UACLC,MAAO,UACPC,KAAM,eAyBV,oBAAIxK,UAAWG,KAAE8J,YACjB,qBAAIjK,UAAWG,KAAE8J,UAAjB,UACI,cAACtH,EAAD,CAAcQ,QAAS,kBAfD3D,EAe4BsK,EAASX,SAd/DO,GAAsBA,EAAmBlK,IADhB,IAACA,GAetB,iBACA,cAACmD,EAAD,CAAcQ,QAAS,kBApBE3D,EAoB4BsK,EAASX,SAnBlEM,GAAsBA,EAAmBjK,IADb,IAACA,GAoBzB,sBAR2FoF,EAAQ,SAAWkF,EAASX,KAAOY,IAxBnH,IAACG,KAoCpB,OACI,mCACI,wBAAOlK,UAAWG,KAAEsK,aAApB,UACI,uBAAOzK,UAAWG,KAAEsK,aAApB,SACI,+BACKd,EACD,6BAAI,cAAChH,EAAD,CAAcQ,QAlCT,WACzBqG,GAAmBA,EAAgBD,IAiCf,wBAGZ,gCACKM,YCtDRa,GAAQ,WAEjB,IAAM9G,EAAWC,cACX/E,EAAQgF,aAAsC,SAAA5E,GAAK,OAAIA,EAAMJ,MAAMA,SACjEU,EAAO8I,cAAP9I,GACR8H,QAAQC,IAAI/H,GAEZwF,qBAAU,WACNpB,EAASyF,GAAS7J,MACnB,CAACoE,EAAUpE,IAcd,OACI,kDAEI,cAAC,IAAD,CAAS6D,GAAI8C,GAAKwE,MAAlB,SAAyB,cAAChI,EAAD,qBACzB,cAAC2G,GAAD,CAAY1E,MAAO,CAAC,WAAY,SAAU,QAAS,SAAU,OACzDX,KAAMnF,EAAOyK,OAAQ/J,EACrBgK,gBAlBW,SAAChK,GACpBoE,EFJe,SACrBpE,GADqB,OAE0C,SAACoE,GAChE4E,GACWhJ,GACR6H,MAAK,YAAc,EAAXpD,KACPL,EAASyF,GAAS7J,OAEnBgI,OAAM,SAAC3G,GACNyG,QAAQC,IAAI1G,OELD+J,CAAQpL,KAkBTiK,mBAfc,SAACF,GACvB3F,EFKkB,SACxBpE,EACAqL,GAFwB,OAGuC,SAACjH,GAChE4E,GAAoBhJ,GAAI6H,MAAK,SAACpD,GAC5BL,EAASyF,GAASwB,QEVLC,CAAWvB,EAAQ/J,KAepBkK,mBAZc,SAACH,GACvB3F,EFUkB,SACxBpE,EACAqL,GAFwB,OAGuC,SAACjH,GAChE4E,GAAoBhJ,GAAI6H,MAAK,SAACpD,GAC5BL,EAASyF,GAASwB,QEfLE,CAAWxB,EAAQ/J,WCbvBwL,GAAwCrG,gBAAK,YAAsH,IAAnHC,EAAkH,EAAlHA,MAAOX,EAA2G,EAA3GA,KAAuBuF,EAAoF,EAArGA,gBAAkCC,EAAmE,EAAnEA,mBAAoBC,EAA+C,EAA/CA,mBAAoBuB,EAA2B,EAA3BA,qBA0B1ItB,EAAc/E,EAAM5C,KAAI,SAAA4H,GAAC,OAAI,6BAC9BA,GADuC,SAAWA,MAIjDC,EAAa5F,EAAKjC,KAAI,SAAC8H,EAAeC,GAAhB,OAAsC,qBAAI/J,UAAWG,KAAE6J,UAAjB,UAC9D,oBAAIhK,UAAWG,KAAE8J,UAAjB,SAA6BH,EAASnI,OACtC,oBAAI3B,UAAWG,KAAE8J,UAAjB,SAA6BH,EAASoB,aACtC,oBAAIlL,UAAWG,KAAE8J,UAAjB,UA/BgBC,EA+BwBJ,EAASK,QA9B1C,IAAIC,KAAKF,GAAMG,mBAAmB,KAAM,CAC3CC,IAAK,UACLC,MAAO,UACPC,KAAM,eA4BV,oBAAIxK,UAAWG,KAAE8J,YACjB,qBAAIjK,UAAWG,KAAE8J,UAAjB,UACI,cAACtH,EAAD,CAAcQ,QAAS,kBAlBD3D,EAkB4BsK,EAASX,SAjB/DO,GAAsBA,EAAmBlK,IADhB,IAACA,GAkBtB,iBACA,cAACmD,EAAD,CAAcQ,QAAS,kBAvBE3D,EAuB4BsK,EAASX,SAtBlEM,GAAsBA,EAAmBjK,IADb,IAACA,GAuBzB,iBACA,cAAC,IAAD,CAAS6D,GAAE,UAAK8C,GAAKgF,MAAV,YAAmBrB,EAASX,KAAOnJ,UAAWoL,IAAe7H,UAAWJ,QAAS,kBAhB/E3D,EAgBiGsK,EAASX,SAf3H8B,GAAwBA,EAAqBzL,IAD7B,IAACA,GAgBb,wBAR2FoF,EAAQ,SAAWkF,EAASX,KAAOY,IA5BnH,IAACG,KAwCpB,OACI,mCACI,wBAAOlK,UAAWG,KAAEsK,aAApB,UACI,uBAAOzK,UAAWG,KAAEsK,aAApB,SACI,+BACKd,EACD,6BAAI,cAAChH,EAAD,CAAcQ,QAtCT,WACzBqG,GAAmBA,KAqCC,wBAGZ,gCACKK,YC/DRwB,GACC,SAAC3M,GAAD,MACT,CACCL,KAAM,kBACNK,UAJO2M,GAME,SAAC7L,GAAD,MAAiB,CAC1BnB,KAAM,oBACNmB,OCAO8L,GAAW,SACbC,GACP,OAAO7N,GAASgL,IAAiB,aAAc,CAC7C6C,OAAO,aACLC,UAAW,KACRD,MALED,GAAW,WAUpB,OAAO5N,GAASQ,KAAK,aAAc,CACjCuN,UAAW,CACT9J,KAAM,uBAZD2J,GAAW,SAgBX9L,GACT,OAAO9B,GAAS6G,OAAT,wBAAiC/E,KAjB/B8L,GAAW,SAmBX9L,GACT,OAAO9B,GAASwL,IAAI,aAAc,CAChCuC,UAAW,CACTtC,IAAK3J,EACLmC,KAAM,yBChCD+J,GAAW,SAACH,GAAD,OAAoF,SAAC3H,GACzG0H,GAAkBC,GACblE,MAAK,YAAa,IAAXpD,EAAU,EAAVA,KACJL,EAASyH,GAAsBpH,EAAK0H,eAEvCnE,OAAM,SAAA3G,GACHyG,QAAQC,IAAI1G,QCDX+K,GAAQ,WAEjB,IAAMhI,EAAWC,cACXnF,EAAQoF,aAA+B,SAAA5E,GAAK,OAAIA,EAAMR,MAAMA,SAC5DpB,EAAUwG,aAAmC,SAAA5E,GAAK,OAAIA,EAAME,MAAM9B,WAExE0H,qBAAU,WACD1H,GAAUsG,EAASY,MACxBZ,EAAS8H,GAAS,OACnB,CAAC9H,IAkBJ,OAAKtG,EAED,kDAEI,cAAC0N,GAAD,CAAapG,MAAO,CAAC,QAAS,QAAS,UAAW,OAC9CX,KAAMvF,EAAO8K,gBArBF,WACnB5F,GDPiF,SAACA,GACtF0H,KACKjE,MAAK,SAAApD,GACFL,EAAS8H,GAAS,YCyBdjC,mBAlBc,SAACjK,GACvBoE,EDFkB,SAACpE,GAAD,OAA4E,SAACoE,GACnG0H,GAAoB9L,GACf6H,MAAK,SAAApD,GACNL,EAAS8H,GAAS,SCDTG,CAAWrM,KAkBZkK,mBAfc,SAAClK,GACvBoE,EDEkB,SAACpE,GAAD,OAA4E,SAACoE,GACnG0H,GAAoB9L,GACf6H,MAAK,SAAApD,GACNL,EAAS8H,GAAS,SCLTI,CAAWtM,KAeZyL,qBAZQ,SAACzL,GACjBoE,EAASyH,GAAuB7L,UAGb,cAAC,IAAD,CAAU6D,GAAI8C,GAAKU,S,oBCnCjCkF,GAAY,WACrB,OACI,sBAAK/L,UAAWmC,KAAM6J,WAAtB,UACI,qBAAKhM,UAAWmC,KAAM8J,UAAtB,iBACA,qBAAKjM,UAAWmC,KAAMyC,MAAtB,sEACA,iFACiD,uBADjD,kCAE2C,uBAF3C,kECMCuB,GAAO,CAChB+F,KAAM,IACNrF,MAAO,SACPR,SAAU,YACVE,QAAS,WACTH,OAAQ,UACR+F,SAAU,wBACVC,KAAM,QACNC,WAAY,OACZlB,MAAO,SACPR,MAAO,UAME2B,GAAS,WAClB,OACI,mCACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAMpG,GAAK+F,KAAMM,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUpJ,GAAI8C,GAAKiG,UAE/D,cAAC,IAAD,CAAOG,KAAMpG,GAAKU,MAAO4F,OAAQ,kBAAM,cAACnG,GAAD,OACvC,cAAC,IAAD,CAAOiG,KAAMpG,GAAKE,SAAUoG,OAAQ,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOF,KAAMpG,GAAKI,QAASkG,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOF,KAAMpG,GAAKC,OAAQqG,OAAQ,kBAAM,cAAC,GAAD,OACxC,cAAC,IAAD,CAAOF,KAAMpG,GAAKgG,SAAUM,OAAQ,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOF,KAAMpG,GAAKwE,MAAO8B,OAAQ,kBAAM,cAAC,GAAD,OACvC,cAAC,IAAD,CAAOF,KAAI,UAAKpG,GAAKgF,MAAV,QAAuBsB,OAAQ,kBAAM,cAAC,GAAD,OAChD,cAAC,IAAD,CAAOF,KAAMpG,GAAKiG,KAAMK,OAAQ,kBAAM,cAAC,EAAD,OAItC,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,GAAD,a,mBCxCxBC,GAAS,WAElB,IAAM9N,EAAiBkF,aAAkC,SAAA5E,GAAK,OAAIA,EAAMR,MAAME,kBACxE+N,EAAW/N,EAAc,UAAMA,GAAmB,GAGxD,OACI,qBAAKoB,UAAWmC,KAAMyK,cAAtB,SACA,sBAAK5M,UAAWmC,KAAM0K,QAAtB,UACI,cAAC,IAAD,CAASxJ,GAAI8C,GAAKiG,KAAMpM,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA1E,kBACA,cAAC,IAAD,CAAS3J,GAAI8C,GAAKU,MAAO7G,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA3E,mBACA,cAAC,IAAD,CAAS3J,GAAI8C,GAAKE,SAAUrG,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA9E,sBACA,cAAC,IAAD,CAAS3J,GAAI8C,GAAKI,QAASvG,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA7E,qBACA,cAAC,IAAD,CAAS3J,GAAI8C,GAAKC,OAAQpG,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA5E,oBACA,cAAC,IAAD,CAAS3J,GAAI8C,GAAKgG,SAAUnM,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA9E,0BACA,cAAC,IAAD,CAAS3J,GAAI8C,GAAKwE,MAAO3K,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA3E,mBACA,cAAC,IAAD,CAAS3J,GAAE,UAAK8C,GAAKgF,MAAV,YAAmBwB,GAAY3M,UAAWmC,KAAM2K,SAAUC,gBAAiB5K,KAAM6K,QAA5F,yB,oBClBCC,GAAO,WAChB,OACI,sBAAKjN,UAAWG,KAAE+M,cAAlB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,QCWGC,I,MAdH,WACV,OACE,qBAAKnN,UAAU,MAAf,SACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,GAAD,cCEG2N,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjG,MAAK,YAAkD,IAA/CkG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASnB,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.4cc3a77e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginGroup\":\"LoginForm_loginGroup__1-DhW\",\"rememberMeLabel\":\"LoginForm_rememberMeLabel__1Zjjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginLink\":\"navlinkStyling_loginLink__ZVbKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_wrapper\":\"CustomRadio_radio_wrapper__2csJO\",\"label\":\"CustomRadio_label__dv_Q7\",\"radio\":\"CustomRadio_radio__39bWq\",\"text\":\"CustomRadio_text__3nabw\",\"design\":\"CustomRadio_design__3xiGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabel\":\"CustomCheckbox_checkboxLabel__2j4wa\",\"checkbox\":\"CustomCheckbox_checkbox__-WVPU\",\"customSpan\":\"CustomCheckbox_customSpan__3LJe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"CustomInput_input_container__3QSF7\",\"superInput\":\"CustomInput_superInput__2d6Um\",\"fadeIn\":\"CustomInput_fadeIn__3h5xZ\",\"errorInput\":\"CustomInput_errorInput__33rO6\",\"error\":\"CustomInput_error__2toCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_page\":\"ErrorPage_error_page__1JMk3\",\"title_404\":\"ErrorPage_title_404__2TK1J\",\"title\":\"ErrorPage_title__3KXLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"CustomButton_default__sFbn4\",\"fadeIn\":\"CustomButton_fadeIn__2Hen-\",\"red\":\"CustomButton_red__14ffV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testContainer\":\"TestComponent_testContainer__tijZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotForm\":\"ForgotForm_forgotForm__3Yds1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"CustomSnackbar_snackbar__3ASh3\",\"fadein\":\"CustomSnackbar_fadein__1KaRy\",\"fadeout\":\"CustomSnackbar_fadeout__1NqJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"CustomPreloader_preloaderContainer__1xumz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPasswordPage\":\"SetPasswordForm_setPasswordPage__2U4iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__1V-Yf\",\"animation\":\"Main_animation__RFjm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableStyling\":\"CustomTable_tableStyling__IChfo\",\"trStyling\":\"CustomTable_trStyling__1RtpW\",\"tdStyling\":\"CustomTable_tdStyling__2hrBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Header_nav_bar__3fhKf\",\"nav_container\":\"Header_nav_container__WKhEF\",\"nav_link\":\"Header_nav_link__VnHL2\",\"fill\":\"Header_fill__EoQTU\",\"current\":\"Header_current__2wyH0\"};","\r\nexport type LoginInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n\r\n}\r\n\r\nexport const loginInitialState: LoginInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false\r\n}","\r\nexport type ForgotInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\n\r\nexport const forgotInitialState: ForgotInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: true,\r\n    message: \"\"\r\n}","\r\nexport type ProfileInitState = {\r\n\r\n}\r\n\r\n\r\nexport const profileInitialState: ProfileInitState = {\r\n\r\n}","import axios from 'axios';\r\n\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nexport const instance = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\n\r\nexport const fridayAPI = {\r\n  register(email: string, password: string) {\r\n    const promise = instance.post<ResponseType>('/auth/register', { email, password });\r\n    return promise;\r\n  },\r\n};\r\n\r\nexport type ResponseType = {\r\n  addedUser: Object;\r\n  error?: string;\r\n};\r\n","import { InferActionsType } from '../../../../main/bll/action-types';\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n  setIsRegisterAC: (isRegister: boolean) => ({\r\n    type: 'register/IS-REGISTER',\r\n    isRegister,\r\n  } as const),\r\n};\r\n","export type RegisterInitState = {\r\n  isRegister: boolean;\r\n};\r\n\r\nexport const registerInitialState: RegisterInitState = {\r\n  isRegister: false,\r\n};\r\n","export type SetPassInitState = {\r\n    error: string\r\n    responseMessage: string\r\n    success: boolean\r\n}\r\n\r\n\r\nexport const setPassInitialState: SetPassInitState = {\r\n    error: '',\r\n    responseMessage: '',\r\n    success: true\r\n}","export type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n\r\n    cardsCount: number\r\n    deckCover: string\r\n\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type PacksStateType = {\r\n    packs: PackType[]\r\n    packUser_id : string\r\n    recent_pack_id: string\r\n}\r\n\r\nexport const PacksInitState: PacksStateType = {\r\n    packs: [],\r\n    packUser_id: '',\r\n    recent_pack_id: ''\r\n}","export type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n\r\n    questionImg: string\r\n    answerImg: string\r\n    answerVideo: string\r\n    questionVideo: string\r\n\r\n    comments: string\r\n\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type CardsStateType = {\r\n    cards: CardType[]\r\n}\r\n\r\nexport const CardsInitState: CardsStateType = {\r\n    cards: []\r\n}","import { loginReducer } from './../../features/f1-auth/login/bll-login/loginReducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { forgotReducer } from \"../../features/f1-auth/forgot/bll-forgot/forgotReducer\";\r\nimport { profileReducer } from '../../features/f1-auth/profile/bll-profile/profileReducer';\r\nimport { registerReducer } from '../../features/f1-auth/register/bll-register/registerReducer';\r\nimport { setPassReducer } from '../../features/f1-auth/setPass/bll-setPass/setPassReducer';\r\nimport { packsReducer } from '../../features/f2-cards/packs/bll/packsReducer';\r\nimport { cardsReducer } from '../../features/f2-cards/cards/bll/cardsReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    setPass: setPassReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\n    window.store = store","import {ForgotActionsType} from \"./forgotActions\";\r\nimport {forgotInitialState, ForgotInitState} from \"./forgotInitState\";\r\n\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: ForgotActionsType): ForgotInitState => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"forgot/SET_SUCCESS\":\r\n            return {...state, success: action.success}\r\n        case \"forgot/SET_MESSAGE\":\r\n            return {...state, message: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { LoginActionsType } from \"./loginActions\";\r\nimport { loginInitialState, LoginInitState } from \"./loginInitState\";\r\n\r\n\r\nexport const loginReducer = (state = loginInitialState, action: LoginActionsType): LoginInitState => {\r\n    switch (action.type) {\r\n        case \"login/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"login/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { ProfileActionsType } from \"./profileActions\";\r\nimport { profileInitialState, ProfileInitState } from \"./profileInitState\";\r\n\r\n\r\nexport const profileReducer = (state = profileInitialState, action: ProfileActionsType): ProfileInitState => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { fridayAPI } from './api-instance';\r\nimport { RegisterActions, RegisterActionsType } from './registerActions';\r\nimport { registerInitialState, RegisterInitState } from './registerInitState';\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActionsType): RegisterInitState => {\r\n  switch (action.type) {\r\n    case 'register/IS-REGISTER':\r\n      return { ...state, isRegister: action.isRegister };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginTC = (email: string, password: string) => (dispatch: Dispatch<RegisterActionsType>) => {\r\n  fridayAPI\r\n    .register(email, password)\r\n    .then((res) => {\r\n      console.log('res');\r\n      dispatch(RegisterActions.setIsRegisterAC(true));\r\n    })\r\n    .catch((error) => {\r\n      console.log('error');\r\n    });\r\n};\r\n","import {SetPassActionsType} from \"./setPassActions\";\r\nimport {setPassInitialState, SetPassInitState} from \"./setPassInitState\";\r\n\r\n\r\nexport const setPassReducer = (state = setPassInitialState, action: SetPassActionsType): SetPassInitState => {\r\n    switch (action.type) {\r\n        case 'setPass/SET_ERROR':\r\n            return {...state, error: action.error}\r\n        case 'setPass/SET_SUCCESS':\r\n            return {...state, success: action.success}\r\n        case 'setPass/SET_MESSAGE':\r\n            return {...state, responseMessage: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { PacksActionsType } from './packsActions'\r\nimport {PacksInitState, PacksStateType} from './packsInitState'\r\n\r\nexport const packsReducer = (state = PacksInitState, action: PacksActionsType): PacksStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET_PACKS\": {\r\n            return {\r\n                ...state,\r\n                packs: action.packs\r\n            }\r\n        }\r\n        case \"packs/SET_PACK_ID\": {\r\n            return {\r\n                ...state,\r\n                recent_pack_id: action.id\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CardsActionsType } from './cardsActions'\r\nimport {CardsInitState, CardsStateType} from './cardsInitState'\r\n\r\nexport const cardsReducer = (state = CardsInitState, action: CardsActionsType): CardsStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET_CARDS\": {\r\n            return {\r\n                ...state,\r\n                cards: action.cards\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from './CustomButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default Button;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./CustomCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.checkboxLabel}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            /><span className={s.customSpan}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n        // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default Checkbox;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./CustomInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.input_container}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport style from './CustomRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst CustomRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label className={style.label} key={name + \"-\" + i}>\n            <input className={style.radio}\n                name={name}\n                onChange={onChangeCallback}\n                type={\"radio\"}\n                value={o}\n                checked={value === o}\n                // name, checked, value, onChange\n            />\n            <div className={style.design}></div>\n            <span className={style.text}>\n                {o}\n            </span>\n\n        </label>\n    )) : [];\n\n    return (\n        <div className={style.radio_wrapper}>\n            {mappedOptions}\n        </div>\n    );\n}\n\nexport default CustomRadio;\n","import React from \"react\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomRadio from \"../../../../main/ui/common/CustomRadio/CustomRadio\"\r\nimport s from './TestComponent.module.css'\r\n\r\nexport const TestComponent = () => {\r\n    return (\r\n        <div className={s.testContainer}>\r\n            <CustomButton>test</CustomButton>\r\n            <CustomCheckbox />\r\n            <CustomInput />\r\n            <CustomRadio options={[1, 2]} />\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport s from './ForgotForm.module.css'\r\n\r\n\r\ntype ForgotFormPropsType = {\r\n    forgot: (email: string) => void\r\n    error: string\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\nexport const ForgotForm = (props: ForgotFormPropsType) => {\r\n    const [login, setLogin] = useState('')\r\n    const onLoginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.forgotForm}>\r\n            <div>Your login</div>\r\n            {props.error !== '' && props.error}\r\n            {props.message !== '' && props.message}\r\n            <CustomInput type=\"text\" value={login} onChange={onLoginChange}/>\r\n            <div><CustomButton onClick={() => props.forgot(login)} disabled={!props.success}>send</CustomButton></div>\r\n            <div>\r\n                <NavLink to={'/login'} className={sUtils.loginLink}>Login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const forgotAPI = {\r\n    forgot(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"roman\",\r\n            message: `<div style=\"background-color: black; border-radius: 15px; color: #FFFFFF; padding: 15px\">password recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type ForgotActionsType = InferActionsType<typeof ForgotActions>;\r\n\r\nexport const ForgotActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"forgot/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"forgot/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setMessage: (message: string) =>\r\n        ({\r\n            type: \"forgot/SET_MESSAGE\",\r\n            message,\r\n        } as const)\r\n\r\n}","import {ForgotForm} from \"./ForgotForm/ForgotForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ForgotTC} from \"../bll-forgot/forgotThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\n\r\n\r\nexport const Forgot = () => {\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.forgot.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.forgot.success)\r\n    const message = useSelector<AppStoreType, string>(state => state.forgot.message)\r\n    const forgot = (email: string) => {\r\n        dispatch(ForgotTC(email))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ForgotForm forgot={forgot} error={error} success={success} message={message}/>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {forgotAPI} from \"../dal-forgot/forgotInstance\";\r\nimport {ForgotActions} from \"./forgotActions\";\r\n\r\nexport const ForgotTC = (email: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(ForgotActions.setSuccess(false))\r\n        const res = await forgotAPI.forgot(email)\r\n        dispatch(ForgotActions.setSuccess(true))\r\n        dispatch(ForgotActions.setMessage(res.data.info))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(ForgotActions.setError(error))\r\n        dispatch(ForgotActions.setSuccess(true))\r\n    }\r\n}","import { InferActionsType } from \"../../../../main/bll/action-types\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setError: (error: string) =>\r\n    ({\r\n      type: \"login/SET_ERROR\",\r\n      error,\r\n    } as const),\r\n    setLoading: (loading: boolean) =>\r\n    ({\r\n      type: \"login/SET_LOADING\",\r\n      loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) =>\r\n    ({\r\n      type: \"login/SET_SUCCESS\",\r\n      success,\r\n    } as const),\r\n};\r\n","import axios from \"axios\";\r\nimport { devURL, herokuURL } from \"./baseURLs\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    baseURL: devURL,\r\n    withCredentials: true,\r\n});","export const devURL = 'http://localhost:7542/2.0/'\r\nexport const herokuURL = 'https://neko-back.herokuapp.com/2.0/'","import axios from \"axios\"\r\nimport { instance } from \"../../../../main/dal/instance\";\r\n\r\nexport const loginAPI = {\r\n    signIn(data: LoginDetailsType) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    signOut() {\r\n        return instance.delete('auth/me')\r\n    },\r\n    me() {\r\n        return instance.post('auth/me')\r\n    }\r\n}\r\n\r\nexport type LoginDetailsType = {\r\n    email: string | ReadonlyArray<string> | number\r\n    password: string | ReadonlyArray<string> | number\r\n    rememberMe: boolean\r\n}","import { ProfileActionsType } from './../../profile/bll-profile/profileActions';\r\nimport { LoginActions, LoginActionsType } from \"./loginActions\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport { loginAPI, LoginDetailsType } from \"../dal-login/loginInstance\";\r\n\r\nexport const signIn = (\r\n  data: LoginDetailsType\r\n): ThunkAction<void, AppStoreType, unknown, LoginActionsType | ProfileActionsType> => async (\r\n  dispatch\r\n) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signIn(data);\r\n    dispatch(LoginActions.setSuccess(true));\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + \", more details in the console\";\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const signOut = (): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  LoginActionsType\r\n> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signOut();\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + \", more details in the console\";\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const me = (): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  LoginActionsType\r\n> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.me();\r\n    if(res.status === 200) {\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setSuccess(true))\r\n    }\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + \", more details in the console\";\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n","import s from './CustomSnackbar.module.css'\r\nimport { FC, memo, useEffect, useState } from 'react'\r\n\r\ntype CustomSnackbarType = {\r\n    title: string\r\n    timer: number\r\n}\r\n\r\nexport const CustomSnackbar: FC<CustomSnackbarType> = memo(({ title, timer }) => {\r\n\r\n    const [visual, setVisual] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        setVisual(() => true)\r\n        const show = setTimeout(() => {\r\n            setVisual(() => false)\r\n        }, timer)\r\n        return () => {\r\n            clearTimeout(show)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                visual &&\r\n                <div className={s.snackbar}>\r\n                    {title}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/dbringload.46fb05e0.svg\";","import preloader from './../../../assets/dbringload.svg'\r\nimport s from './CustomPreloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (<div className={s.preloaderContainer}>\r\n        <img src={preloader} alt='Loading...' />\r\n    </div>)\r\n}","import React, { ChangeEvent, FC, memo, MouseEvent, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport CustomButton from '../../../../../main/ui/common/CustomButton/CustomButton'\r\nimport CustomCheckbox from '../../../../../main/ui/common/CustomCheckbox/CustomCheckbox'\r\nimport CustomInput from '../../../../../main/ui/common/CustomInput/CustomInput'\r\nimport s from './LoginForm.module.css'\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport { LoginDetailsType } from '../../dal-login/loginInstance'\r\nimport { PATH } from '../../../../../main/ui/routes/Routes'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStoreType } from '../../../../../main/bll/store'\r\nimport { CustomSnackbar } from '../../../../../main/ui/common/CustomSnackbar/CustomSnackbar'\r\nimport { Preloader } from '../../../../../main/ui/common/CustomPreloader/CustomPreloader'\r\n\r\ntype LoginFormType = {\r\n    login: (userDetails: LoginDetailsType) => void\r\n    error: string\r\n}\r\n\r\nexport const LoginForm: FC<LoginFormType> = memo(({ login, error }) => {\r\n\r\n    const [details, setDetails] = useState<LoginDetailsType>({ email: 'nya-admin@nya.nya', password: '1qazxcvBG', rememberMe: false })\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n\r\n    const emailOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, email: e.target.value })\r\n    }\r\n\r\n    const passwordOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, password: e.target.value })\r\n    }\r\n\r\n    const rememberMeOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, rememberMe: e.target.checked })\r\n    }\r\n\r\n    const detailsWrap = (e: MouseEvent<HTMLButtonElement>) => {\r\n        login(details)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <>\r\n                    {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n                    <div className={s.loginForm}>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='email'>Email:</label>\r\n                            <CustomInput onChange={emailOnChangeHandler} value={details.email} type='email' name='email' id='email' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='password'>Password:</label>\r\n                            <CustomInput onChange={passwordOnChangeHandler} value={details.password} type='password' name='password' id='password' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomCheckbox onChange={rememberMeOnChangeHandler} checked={details.rememberMe} />\r\n                            <label className={s.rememberMeLabel}>remember me</label>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomButton type={'submit'} onClick={detailsWrap} disabled={loading}>Sign in</CustomButton>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <NavLink to={PATH.FORGOT} className={sUtils.loginLink}>forgot?</NavLink>\r\n                            <NavLink to={PATH.REGISTER} className={sUtils.loginLink}>register</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n})","import { memo, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { LoginActions } from \"../bll-login/loginActions\"\r\nimport { signIn } from \"../bll-login/loginThunks\"\r\nimport { LoginDetailsType } from \"../dal-login/loginInstance\"\r\nimport { LoginForm } from \"./LoginForm/LoginForm\"\r\n\r\nexport const Login = memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n\r\n    useEffect(() => {\r\n        dispatch(LoginActions.setError(''))\r\n    }, [dispatch])\r\n\r\n    const login = (details: LoginDetailsType) => {\r\n        dispatch(signIn(details))\r\n    }\r\n\r\n    if (success) return <Redirect to={PATH.PROFILE} />\r\n\r\n    return (\r\n        <>\r\n            <LoginForm login={login} error={error}/>\r\n        </>\r\n    )\r\n})","import React, { useCallback, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { me, signOut } from \"../../login/bll-login/loginThunks\"\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n    const [isAuth, setIsAuth] = useState<boolean>(success)\r\n\r\n    useEffect(() => {\r\n        dispatch(me())\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(signOut())\r\n        setIsAuth(() => false)\r\n    }, [])\r\n\r\n    if (!isAuth) { return <Redirect to={PATH.LOGIN} /> }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <>\r\n                    <span>You are authorized</span>\r\n                    <CustomButton onClick={logout} disabled={loading}>\r\n                        Log Out\r\n                    </CustomButton>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","import { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Button from '../../../../main/ui/common/CustomButton/CustomButton';\r\nimport Input from '../../../../main/ui/common/CustomInput/CustomInput';\r\nimport { PATH } from '../../../../main/ui/routes/Routes';\r\nimport { loginTC } from '../bll-register/registerReducer';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\n\r\nexport const Register = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isRegister = useSelector<AppStoreType, boolean>((state) => state.register.isRegister);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [repPass, setrepPpass] = useState('');\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n  const changePass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPass(e.currentTarget.value);\r\n  };\r\n  const changeRepPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setrepPpass(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(loginTC(email, pass));\r\n  };\r\n\r\n  if (isRegister) {\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      Register Page\r\n      <Input value={email} onChange={changeEmail} placeholder={'Enter your email'} />\r\n      <Input value={pass} onChange={changePass} type={'password'} placeholder={'Enter your pass'} />\r\n      {pass !== repPass ? <div style={{ color: 'red' }}>Passwords should be equal </div> : null}\r\n      <Input value={repPass} onChange={changeRepPass} type={'password'} placeholder={'Repeat pass'} />\r\n      <Button onClick={onSubmit}>register</Button>\r\n      <NavLink to={PATH.LOGIN}>Sign in</NavLink>\r\n    </>\r\n  );\r\n};\r\n","import CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport s from './SetPasswordForm.module.css'\r\n\r\ntype SetPasswordType = {\r\n    setNewPassword: (password: string) => void\r\n    success: boolean\r\n    error: string\r\n    responseMessage: string\r\n    setError: (error: string) => void\r\n}\r\n\r\nexport const SetPasswordForm = (props: SetPasswordType) => {\r\n\r\n    const [password1, setPassword1] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const onPassword1Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.target.value)\r\n    }\r\n    const onPassword2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.target.value)\r\n    }\r\n\r\n    const onSetPasswordClickHandler = () => {\r\n        password1 === password2 ? props.setNewPassword(password1) : props.setError('Passwords must match')\r\n    }\r\n\r\n    return (\r\n        <div className={s.setPasswordPage}>\r\n            {props.error !== '' && props.error}\r\n            {props.responseMessage !== '' && props.responseMessage}\r\n            <div><CustomInput type={'password'} value={password1} onChange={onPassword1Change}/></div>\r\n            <div><CustomInput type={'password'} value={password2} onChange={onPassword2Change}/></div>\r\n            <div><CustomButton onClick={onSetPasswordClickHandler} disabled={!props.success}>Set Password</CustomButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const setPassAPI = {\r\n    setPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type SetPassActionsType = InferActionsType<typeof SetPassActions>;\r\n\r\nexport const SetPassActions = {\r\n    setError: (error: string) => ({\r\n        type: 'setPass/SET_ERROR',\r\n        error\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'setPass/SET_SUCCESS',\r\n        success\r\n    } as const),\r\n    setResponseMessage: (message: string) => ({\r\n        type: 'setPass/SET_MESSAGE',\r\n        message\r\n    } as const)\r\n}","import React from \"react\"\r\nimport {SetPasswordForm} from \"./SetPasswordForm/SetPasswordForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {SetPassTC} from \"../bll-setPass/setPassThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {SetPassActions} from \"../bll-setPass/setPassActions\";\r\n\r\nexport const SetPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.setPass.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.setPass.success)\r\n    const responseMessage = useSelector<AppStoreType, string>(state => state.setPass.responseMessage)\r\n    const {id} = useParams<{ id?: string }>();\r\n    const setNewPassword = (password: string) => {\r\n        if (id && id !== ':id') {\r\n\r\n            dispatch(SetPassTC(password, id))\r\n        } else if (id === ':id') {\r\n            dispatch(SetPassActions.setError('If you want to change your password you should open this page using link'))\r\n        }\r\n    }\r\n\r\n    const setError = (error: string) => {\r\n        dispatch(SetPassActions.setError(error))\r\n    }\r\n\r\n    return (\r\n        <SetPasswordForm setNewPassword={setNewPassword} error={error} success={success}\r\n                         responseMessage={responseMessage} setError={setError}/>\r\n    )\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {setPassAPI} from \"../dal-setPass/setPassInstance\";\r\nimport {SetPassActions} from \"./setPassActions\";\r\n\r\nexport const SetPassTC = (email: string, id: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        const res = await setPassAPI.setPassword(email, id)\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        dispatch(SetPassActions.setResponseMessage(res.data.info))\r\n        dispatch(SetPassActions.setError(''))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(SetPassActions.setError(error))\r\n        dispatch(SetPassActions.setSuccess(true))\r\n    }\r\n}\r\n","import { instance } from \"../../../../main/dal/instance\";\r\nimport { CardType } from \"../bll/cardsInitState\";\r\n\r\ntype GetCardsDataType = {\r\n  cards: CardType[];\r\n  error: string;\r\n};\r\n\r\nexport const cardsAPI = {\r\n  getCards(cardsPack_id: string) {\r\n    return instance.get<GetCardsDataType>(\r\n      `cards/card?cardsPack_id=${cardsPack_id}`\r\n    );\r\n  },\r\n  addCard(cardsPack_id: string) {\r\n    return instance.post(\"cards/card\", {\r\n      card: {\r\n        cardsPack_id,\r\n        question: \"Why are we here?\",\r\n        grade: Math.floor(Math.random() * 5),\r\n        answer: \"Just to suffer\",\r\n      },\r\n    });\r\n  },\r\n  deleteCard(id: string) {\r\n    return instance.delete(`cards/card?&id=${id}`);\r\n  },\r\n  updateCard(id: string) {\r\n    return instance.put(`cards/card`, {\r\n      card: {\r\n        _id: id,\r\n        question: \"Do you like icecream?\",\r\n        answer: \"You bet!\",\r\n      },\r\n    });\r\n  },\r\n};\r\n","import { InferActionsType } from \"../../../../main/bll/action-types\";\r\nimport { CardType } from \"./cardsInitState\";\r\n\r\n\r\nexport type CardsActionsType = InferActionsType<typeof CardsActions>\r\n\r\nexport const CardsActions = {\r\n    setCards: (cards: CardType[]) => ({\r\n        type: 'cards/SET_CARDS',\r\n        cards\r\n    } as const)\r\n}","import { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport { cardsAPI } from \"../dal/cardsInstance\";\r\nimport { CardsActions, CardsActionsType } from \"./cardsActions\";\r\n\r\nexport const getCards = (\r\n  id: string\r\n): ThunkAction<void, AppStoreType, unknown, CardsActionsType> => (dispatch) => {\r\n  cardsAPI\r\n    .getCards(id)\r\n    .then(({ data }) => {\r\n      dispatch(CardsActions.setCards(data.cards));\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nexport const addCard = (\r\n  id: string\r\n): ThunkAction<void, AppStoreType, unknown, CardsActionsType> => (dispatch) => {\r\n  cardsAPI\r\n    .addCard(id)\r\n    .then(({ data }) => {\r\n      dispatch(getCards(id));\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nexport const deleteCard = (\r\n  id: string,\r\n  pack_id: string\r\n): ThunkAction<void, AppStoreType, unknown, CardsActionsType> => (dispatch) => {\r\n  cardsAPI.deleteCard(id).then((data) => {\r\n    dispatch(getCards(pack_id));\r\n  });\r\n};\r\n\r\nexport const updateCard = (\r\n  id: string,\r\n  pack_id: string\r\n): ThunkAction<void, AppStoreType, unknown, CardsActionsType> => (dispatch) => {\r\n  cardsAPI.updateCard(id).then((data) => {\r\n    dispatch(getCards(pack_id));\r\n  });\r\n};\r\n","import React, { FC, memo } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\";\r\nimport s from './../../../../main/ui/common/CustomTable/CustomTable.module.css'\r\n\r\nexport type CardsTablePropsType = {\r\n    title: string[]\r\n    data?: any\r\n    cardId: string\r\n    addItemCallback?: (id: string) => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n\r\n}\r\n\r\nexport const CardsTable: FC<CardsTablePropsType> = memo(({ title, data, cardId, addItemCallback, deleteItemCallback, updateItemCallback }) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback(cardId)\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling} key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.question}</td>\r\n        <td className={s.tdStyling}>{dataItem.answer}</td>\r\n        <td className={s.tdStyling}>{dataItem.grade}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)}>del</CustomButton>\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                    <tr>\r\n                        {titleFiller}\r\n                        <th><CustomButton onClick={onAddItemButtonClick}>Add</CustomButton></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink, useLocation, useParams } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { CardType } from \"../bll/cardsInitState\"\r\nimport { addCard, deleteCard, getCards, updateCard } from \"../bll/cardsThunks\"\r\nimport { CardsTable } from \"./CardsTable\"\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cards.cards)\r\n    const { id } = useParams<{ id: string }>()\r\n    console.log(id)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCards(id))\r\n    }, [dispatch, id])\r\n\r\n    const addCardHandler = (id: string) => {\r\n        dispatch(addCard(id))\r\n    }\r\n\r\n    const deleteCardHandler = (cardId: string) => {\r\n        dispatch(deleteCard(cardId, id))\r\n    }\r\n\r\n    const updateCardHandler = (cardId: string) => {\r\n        dispatch(updateCard(cardId, id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            Cards Page\r\n            <NavLink to={PATH.PACKS}><CustomButton>Back</CustomButton></NavLink>\r\n            <CardsTable title={['question', 'answer', 'grade', 'udated', 'url']}\r\n                data={cards} cardId={id}\r\n                addItemCallback={addCardHandler}\r\n                deleteItemCallback={deleteCardHandler}\r\n                updateItemCallback={updateCardHandler} />\r\n\r\n        </>\r\n    )\r\n}","import React, { FC, memo } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { PATH } from \"../../routes/Routes\"\r\nimport CustomButton from './../CustomButton/CustomButton'\r\nimport navlinkStyling from './../stylingUtils/navlinkStyling.module.css'\r\nimport s from './CustomTable.module.css'\r\n\r\nexport type CustomTablePropsType = {\r\n    title: string[]\r\n    data: any\r\n    addItemCallback?: () => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n    saveRecentIdCallback?: (id: string) => void\r\n\r\n}\r\n\r\nexport const CustomTable: FC<CustomTablePropsType> = memo(({ title, data, addItemCallback: addItemCallback, deleteItemCallback, updateItemCallback, saveRecentIdCallback }) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback()\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        saveRecentIdCallback && saveRecentIdCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling} key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.name}</td>\r\n        <td className={s.tdStyling}>{dataItem.cardsCount}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)}>del</CustomButton>\r\n            <NavLink to={`${PATH.CARDS}/${dataItem._id}`} className={navlinkStyling.loginLink} onClick={() => packIdSaver(dataItem._id)}>Cards</NavLink>\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                    <tr>\r\n                        {titleFiller}\r\n                        <th><CustomButton onClick={onAddItemButtonClick}>Add</CustomButton></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import { InferActionsType } from \"../../../../main/bll/action-types\";\r\nimport { PackType } from \"./packsInitState\";\r\n\r\n\r\nexport type PacksActionsType = InferActionsType<typeof PacksActions>\r\n\r\nexport const PacksActions = {\r\n    setPacks: (packs: PackType[]) =>\r\n    ({\r\n      type: \"packs/SET_PACKS\",\r\n      packs,\r\n    } as const),\r\n    setPackId: (id: string) => ({\r\n      type: 'packs/SET_PACK_ID',\r\n      id\r\n  } as const),\r\n\r\n}","import axios from \"axios\";\r\nimport { instance } from \"../../../../main/dal/instance\";\r\nimport { PackType } from \"../bll/packsInitState\";\r\n\r\nexport type ParamsType = {\r\n    packName?: string | undefined\r\n    min?: number | undefined\r\n    max?: number | undefined\r\n    sortPacks?: string | undefined\r\n    page?: number | undefined\r\n    pageCount?: number | undefined\r\n    user_id?: string | undefined\r\n}\r\n\r\nexport const packsAPI = {\r\n  getPacks(params: ParamsType) {\r\n    return instance.get<GetDataType>(\"cards/pack\", {\r\n      params: {\r\n        pageCount: 100,\r\n        ...params\r\n      }\r\n    })\r\n  },\r\n  addPack() {\r\n    return instance.post('cards/pack', {\r\n      cardsPack: {\r\n        name: 'adding pack test'\r\n      }\r\n    })\r\n  },\r\n  deletePack(id: string) {\r\n    return instance.delete(`cards/pack?id=${id}`)\r\n  },\r\n  updatePack(id: string) {\r\n    return instance.put('cards/pack', {\r\n      cardsPack: {\r\n        _id: id,\r\n        name: 'updating pack test'\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport type GetDataType = {\r\n  cardPacks: PackType[];\r\n  error: string;\r\n};","import { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport { packsAPI, ParamsType } from \"../dal/packsInstance\";\r\nimport { PacksActions, PacksActionsType } from \"./packsActions\";\r\n\r\nexport const getPacks = (params: ParamsType): ThunkAction<void, AppStoreType, unknown, PacksActionsType> => (dispatch) => {\r\n    packsAPI.getPacks(params)\r\n        .then(({data}) => {\r\n            dispatch(PacksActions.setPacks(data.cardPacks))\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n}\r\n\r\nexport const addPack = (): ThunkAction<void, AppStoreType, unknown, PacksActionsType> => (dispatch) => {\r\n    packsAPI.addPack()\r\n        .then(data => {\r\n            dispatch(getPacks({}))\r\n        })\r\n\r\n\r\n}\r\n\r\nexport const deletePack = (id: string): ThunkAction<void, AppStoreType, unknown, PacksActionsType> => (dispatch) => {\r\n    packsAPI.deletePack(id)\r\n        .then(data => {\r\n        dispatch(getPacks({}))\r\n    })\r\n\r\n}\r\n\r\nexport const updatePack = (id: string): ThunkAction<void, AppStoreType, unknown, PacksActionsType> => (dispatch) => {\r\n    packsAPI.updatePack(id)\r\n        .then(data => {\r\n        dispatch(getPacks({}))\r\n    })\r\n\r\n}","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { CustomTable } from \"../../../../main/ui/common/CustomTable/CustomTable\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { me } from \"../../../f1-auth/login/bll-login/loginThunks\"\r\nimport { PacksActions } from \"../bll/packsActions\"\r\nimport { addPack, deletePack, getPacks, updatePack } from \"../bll/packsThunks\"\r\n\r\nexport const Packs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const packs = useSelector<AppStoreType, any>(state => state.packs.packs)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n\r\n    useEffect(() => {\r\n        if (!success) {dispatch(me())}\r\n        dispatch(getPacks({}))\r\n    }, [dispatch])\r\n\r\n    const addPackHandler = () => {\r\n        dispatch(addPack())\r\n    }\r\n\r\n    const deletePackHandler = (id: string) => {\r\n        dispatch(deletePack(id))\r\n    }\r\n\r\n    const updatePackHandler = (id: string) => {\r\n        dispatch(updatePack(id))\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        dispatch(PacksActions.setPackId(id))\r\n    }\r\n\r\n    if (!success) { return <Redirect to={PATH.LOGIN} /> }\r\n    return (\r\n        <>\r\n            Packs page\r\n            <CustomTable title={['Packs', 'Cards', 'Updated', 'url']}\r\n                data={packs} addItemCallback={addPackHandler}\r\n                deleteItemCallback={deletePackHandler}\r\n                updateItemCallback={updatePackHandler}\r\n                saveRecentIdCallback={packIdSaver}/>\r\n        </>\r\n    )\r\n}","import style from './ErrorPage.module.css'\r\n\r\nexport const ErrorPage = () => {\r\n    return (\r\n        <div className={style.error_page}>\r\n            <div className={style.title_404}>404</div>\r\n            <div className={style.title}>UH OH! You're lost. ฅ/ᐠ.̫ .ᐟ\\ฅ</div>\r\n            <span>\r\n                The page you are looking for does not exist. <br />\r\n                        How you got here is a mystery! <br />\r\n                        But you can choose the section above and have fun there!\r\n                    </span>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\"\r\nimport {Switch} from \"react-router\"\r\nimport {Redirect, Route, useParams} from \"react-router-dom\"\r\nimport {TestComponent} from \"../../../features/f0-test/TestComponent/ui/TestComponent\"\r\nimport {Forgot} from \"../../../features/f1-auth/forgot/ui-forgot/Forgot\"\r\nimport {Login} from \"../../../features/f1-auth/login/ui-login/Login\"\r\nimport {Profile} from \"../../../features/f1-auth/profile/ui-profile/Profile\"\r\nimport {Register} from \"../../../features/f1-auth/register/ui-register/Register\"\r\nimport {SetPassword} from \"../../../features/f1-auth/setPass/ui-setPass/SetPassword\"\r\nimport { Cards } from \"../../../features/f2-cards/cards/ui/Cards\"\r\nimport { Packs } from \"../../../features/f2-cards/packs/ui/Packs\"\r\nimport {ErrorPage} from \"../errorPage/ui/ErrorPage\"\r\n\r\nexport const PATH = {\r\n    HOME: '/',\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    PROFILE: \"/profile\",\r\n    FORGOT: '/forgot',\r\n    SET_PASS: '/set-new-password/:id',\r\n    TEST: '/test',\r\n    ERROR_PAGE: '/404',\r\n    CARDS: '/cards',\r\n    PACKS: '/packs'\r\n\r\n    // add paths\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу TEST*/}\r\n                <Route path={PATH.HOME} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.FORGOT} render={() => <Forgot/>}/>\r\n                <Route path={PATH.SET_PASS} render={() => <SetPassword/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={`${PATH.CARDS}/:id`} render={() => <Cards/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestComponent/>}/>\r\n\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <ErrorPage/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStoreType } from \"../../bll/store\";\r\nimport { PATH } from \"../routes/Routes\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n\r\n    const recent_pack_id = useSelector<AppStoreType, string>(state => state.packs.recent_pack_id)\r\n    const samePath = recent_pack_id ? `${recent_pack_id}` : ''\r\n\r\n\r\n    return (\r\n        <div className={style.nav_container}>\r\n        <div className={style.nav_bar}>\r\n            <NavLink to={PATH.TEST} className={style.nav_link} activeClassName={style.current}>Home</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={style.nav_link} activeClassName={style.current}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTER} className={style.nav_link} activeClassName={style.current}>Register</NavLink>\r\n            <NavLink to={PATH.PROFILE} className={style.nav_link} activeClassName={style.current}>Profile</NavLink>\r\n            <NavLink to={PATH.FORGOT} className={style.nav_link} activeClassName={style.current}>Forgot</NavLink>\r\n            <NavLink to={PATH.SET_PASS} className={style.nav_link} activeClassName={style.current}>Set Password</NavLink>\r\n            <NavLink to={PATH.PACKS} className={style.nav_link} activeClassName={style.current}>Packs</NavLink>\r\n            <NavLink to={`${PATH.CARDS}/${samePath}`} className={style.nav_link} activeClassName={style.current}>Cards</NavLink>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Routes } from \"./ui/routes/Routes\"\r\nimport { Header } from './ui/header/Header'\r\nimport s from './Main.module.css'\r\n\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <Header />\r\n            <Routes />\r\n        </div>\r\n    )\r\n}","import { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from '../bll/store';\nimport { Main } from '../Main';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <>\n        <HashRouter>\n          <Provider store={store}>\n            <Main />\n          </Provider>\n        </HashRouter>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/main/ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["main/ui/header/Header.module.css","main/ui/common/CustomTable/CustomTable.module.css","features/f3-learning/learning/ui/Learning.module.css","main/ui/common/stylingUtils/navlinkStyling.module.css","features/f1-auth/login/ui-login/LoginForm/LoginForm.module.css","main/ui/common/CustomModalWindow/CustomModalWindow.module.css","main/ui/common/CustomRadio/CustomRadio.module.css","features/f1-auth/profile/ui-profile/Profile.module.css","features/f2-cards/packs/ui/Packs.module.css","main/ui/common/CustomCheckbox/CustomCheckbox.module.css","features/f2-cards/cards/ui/Cards.module.css","main/ui/common/CustomInput/CustomInput.module.css","main/ui/errorPage/ui/ErrorPage.module.css","main/ui/common/CustomButton/CustomButton.module.css","features/f2-cards/packs/ui/Paginator.module.css","features/f0-test/TestComponent/ui/TestComponent.module.css","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.module.css","main/ui/common/CustomSnackbar/CustomSnackbar.module.css","main/ui/common/CustomPreloader/CustomPreloader.module.css","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.module.css","main/ui/common/SearchComponent/Search.module.css","main/ui/common/DoubleRangeSlider/DoubleRangeSlider.module.css","main/Main.module.css","features/f1-auth/login/bll-login/loginInitState.ts","features/f1-auth/forgot/bll-forgot/forgotInitState.ts","features/f1-auth/profile/bll-profile/profileInitState.ts","features/f1-auth/register/bll-register/api-instance.ts","features/f1-auth/register/bll-register/registerActions.ts","features/f1-auth/register/bll-register/registerInitState.ts","features/f1-auth/setPass/bll-setPass/setPassInitState.ts","features/f2-cards/packs/bll/packsInitState.ts","features/f2-cards/cards/bll/cardsInitState.ts","main/utils/ErrorHandling/bll/errorHandlingInitState.ts","main/bll/store.ts","features/f1-auth/forgot/bll-forgot/forgotReducer.ts","features/f1-auth/login/bll-login/loginReducer.ts","features/f1-auth/profile/bll-profile/profileReducer.ts","features/f1-auth/register/bll-register/registerReducer.ts","features/f1-auth/setPass/bll-setPass/setPassReducer.ts","features/f2-cards/packs/bll/packsReducer.ts","features/f2-cards/cards/bll/cardsReducer.ts","main/utils/ErrorHandling/bll/errorHandlingReducer.ts","main/ui/common/CustomButton/CustomButton.tsx","main/ui/common/CustomCheckbox/CustomCheckbox.tsx","main/ui/common/CustomInput/CustomInput.tsx","main/ui/common/CustomRadio/CustomRadio.tsx","features/f0-test/TestComponent/ui/TestComponent.tsx","features/f1-auth/forgot/ui-forgot/ForgotForm/ForgotForm.tsx","features/f1-auth/forgot/dal-forgot/forgotInstance.ts","features/f1-auth/forgot/bll-forgot/forgotActions.ts","features/f1-auth/forgot/ui-forgot/Forgot.tsx","features/f1-auth/forgot/bll-forgot/forgotThunks.ts","features/f1-auth/login/bll-login/loginActions.ts","main/dal/instance.ts","main/dal/baseURLs.ts","features/f1-auth/login/dal-login/loginInstance.ts","features/f1-auth/profile/bll-profile/profileActions.ts","features/f1-auth/login/bll-login/loginThunks.ts","main/ui/common/CustomSnackbar/CustomSnackbar.tsx","main/assets/dbringload.svg","main/ui/common/CustomPreloader/CustomPreloader.tsx","features/f1-auth/login/ui-login/LoginForm/LoginForm.tsx","features/f1-auth/login/ui-login/Login.tsx","features/f1-auth/profile/ui-profile/Profile.tsx","features/f1-auth/register/ui-register/Register.tsx","features/f1-auth/setPass/ui-setPass/SetPasswordForm/SetPasswordForm.tsx","features/f1-auth/setPass/dal-setPass/setPassInstance.ts","features/f1-auth/setPass/bll-setPass/setPassActions.ts","features/f1-auth/setPass/ui-setPass/SetPassword.tsx","features/f1-auth/setPass/bll-setPass/setPassThunks.ts","main/ui/common/CustomModalWindow/CustomModalWindow.tsx","main/utils/ErrorHandling/bll/errorHandlingActions.ts","features/f2-cards/cards/bll/cardsActions.ts","features/f2-cards/cards/dal/cardsInstance.ts","features/f2-cards/cards/bll/cardsThunks.ts","features/f2-cards/cards/ui/CardsTable.tsx","main/ui/common/SearchComponent/SearchComponent.tsx","main/ui/common/SortComponent/Sort.tsx","main/ui/common/DoubleRangeSlider/DoubleRangeSlider.tsx","features/f2-cards/cards/ui/Cards.tsx","main/ui/common/CustomTable/CustomTable.tsx","features/f2-cards/packs/bll/packsActions.ts","features/f2-cards/packs/dal/packsInstance.ts","features/f2-cards/packs/bll/packsThunks.ts","features/f2-cards/packs/ui/Paginator.tsx","features/f2-cards/packs/ui/Packs.tsx","main/ui/errorPage/ui/ErrorPage.tsx","features/f3-learning/learning/ui/Learning.tsx","main/ui/routes/Routes.tsx","main/ui/header/Header.tsx","main/Main.tsx","main/ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","loginInitialState","error","loading","success","user_id","forgotInitialState","message","profileInitialState","user","_id","email","name","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","instance","axios","create","baseURL","withCredentials","fridayAPI","password","post","RegisterActions","isRegister","type","registerInitialState","setPassInitialState","responseMessage","PacksInitState","packs","packUser_id","recent_pack_id","minCardsCount","maxCardsCount","page","CardsInitState","cards","recent_card_id","errorHandlingInitialState","getNewCards","rootReducer","combineReducers","forgot","state","action","login","userId","profile","register","setPass","id","map","card","card_id","grade","rate","errorHandling","store","createStore","applyMiddleware","thunk","window","Button","red","className","restProps","finalClassName","s","default","Checkbox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","checkboxLabel","e","currentTarget","checked","customSpan","Input","onChangeText","onKeyPress","onEnter","finalSpanClassName","superInput","input_container","value","key","CustomRadio","options","onChangeOption","onChangeCallback","mappedOptions","o","i","style","label","radio","design","text","radio_wrapper","TestComponent","testContainer","CustomButton","CustomCheckbox","CustomInput","ForgotForm","props","useState","setLogin","forgotForm","onClick","disabled","to","sUtils","loginLink","forgotAPI","from","ForgotActions","Forgot","dispatch","useDispatch","useSelector","a","res","data","info","response","ForgotTC","LoginActions","loginAPI","delete","ProfileActions","me","status","console","log","CustomSnackbar","memo","title","timer","visual","setVisual","useEffect","show","setTimeout","clearTimeout","snackbar","Preloader","preloaderContainer","src","preloader","alt","LoginForm","details","setDetails","loginForm","loginGroup","htmlFor","target","rememberMeLabel","PATH","FORGOT","REGISTER","Login","PROFILE","Profile","isAuth","setIsAuth","avatar","logout","useCallback","logoutBlock","profileBlock","LOGIN","Register","setEmail","pass","repPass","setrepPpass","placeholder","color","then","catch","loginTC","SetPasswordForm","password1","setPassword1","password2","setPassword2","setPasswordPage","setNewPassword","setError","setPassAPI","resetPasswordToken","SetPassActions","SetPassword","useParams","SetPassTC","CustomModalWindow","active","setActive","modalStylingClass","modal","modal_active","modalContentStylingClass","modal_content","modal_content_active","stopPropagation","ErrorHandlingActions","CardsActions","cardsAPI","cardsPack_id","params","get","pageCount","question","answer","Math","floor","random","put","getCards","CardsTable","cardId","addItemCallback","deleteItemCallback","updateItemCallback","saveRecentIdCallback","setModalView","setNewModalView","cardIdSaver","titleFiller","t","dataFiller","dataItem","dataIndex","trStyling","tdStyling","date","toLocaleDateString","day","month","year","tableStyling","Search","setValue","searchFunction","search","Sort","sort","sortByMore","sortByFewer","DoubleRangeSlider","onChangeRange","max","min","doubleRangeSlider","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","Cards","minGrade","setMinGrade","maxGrade","setMaxGrade","modalActive","setModalActive","newModalActive","setNewModalActive","newQuestionFromModal","setNewQuestionFromModal","newAnswerFromModal","setNewAnswerFromModal","questionFromModal","setQuestionFromModal","answerFromModal","setAnswerFromModal","addCardHandler","addCard","updateCardHandler","pack_id","updateCard","PACKS","searchUtils","searchBlock","values","searchInputs","cardQuestion","cardAnswer","sortBlock","sortCards","deleteCard","CustomTable","packIdSaver","cardsCount","CARDS","navlinkStyling","LEARNING","PacksActions","packsAPI","cardsPack","getPacks","cardPacks","Pagination","clickPage","innerHTML","arr","push","fontWeight","pages","Packs","setMin","setMax","getMyPacks","setGetMyPacks","finallyUserId","undefined","newTitleFromModal","setNewTitleFromModal","titleFromModal","setTitleFromModal","addPackHandler","updatePackHandler","packsContainer","packName","sortComponent","sortPacks","deletePack","ErrorPage","error_page","title_404","Learning","setGetNewCards","check","setCheck","first","setFirst","shots","questionImg","answerImg","answerVideo","questionVideo","comments","rating","more_id","currentCard","setCurrentCard","length","getCard","sum","reduce","acc","rand","newSum","onRateButtonClick","updatedGrade","updateGrade","updateCardGrade","navLinkStyle","nav_link","answerBlock","answerButtons","questionBlock","learning_preloader","loading_preloader","HOME","SET_PASS","TEST","ERROR_PAGE","Routes","path","exact","render","Header","samePath","nav_container","nav_bar","activeClassName","current","Main","mainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48336154.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Header_nav_bar__3fhKf\",\"nav_container\":\"Header_nav_container__WKhEF\",\"nav_link\":\"Header_nav_link__VnHL2\",\"fill\":\"Header_fill__EoQTU\",\"current\":\"Header_current__2wyH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableStyling\":\"CustomTable_tableStyling__IChfo\",\"trStyling\":\"CustomTable_trStyling__1RtpW\",\"tdStyling\":\"CustomTable_tdStyling__2hrBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learning_preloader\":\"Learning_learning_preloader__GG2pj\",\"loading_preloader\":\"Learning_loading_preloader__FaHmA\",\"questionBlock\":\"Learning_questionBlock__388Rr\",\"question\":\"Learning_question___YsS1\",\"answerBlock\":\"Learning_answerBlock__3V9Q_\",\"answer\":\"Learning_answer__1clJl\",\"text\":\"Learning_text__1TiR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginLink\":\"navlinkStyling_loginLink__ZVbKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginGroup\":\"LoginForm_loginGroup__1-DhW\",\"rememberMeLabel\":\"LoginForm_rememberMeLabel__1Zjjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"CustomModalWindow_modal__AzbSk\",\"modal_content\":\"CustomModalWindow_modal_content__3d7aU\",\"modal_active\":\"CustomModalWindow_modal_active__20VAj\",\"modal_content_active\":\"CustomModalWindow_modal_content_active__iLTh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_wrapper\":\"CustomRadio_radio_wrapper__2csJO\",\"label\":\"CustomRadio_label__dv_Q7\",\"radio\":\"CustomRadio_radio__39bWq\",\"text\":\"CustomRadio_text__3nabw\",\"design\":\"CustomRadio_design__3xiGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__35TDP\",\"logoutBlock\":\"Profile_logoutBlock__2LiLN\",\"logout\":\"Profile_logout__2PM2u\",\"avatar\":\"Profile_avatar__3u0RI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__1bB-7\",\"searchUtils\":\"Packs_searchUtils__1rutC\",\"sortComponent\":\"Packs_sortComponent__2W1QX\",\"checkbox\":\"Packs_checkbox__3ySCY\",\"searchBlock\":\"Packs_searchBlock__3a2dK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabel\":\"CustomCheckbox_checkboxLabel__2j4wa\",\"checkbox\":\"CustomCheckbox_checkbox__-WVPU\",\"customSpan\":\"CustomCheckbox_customSpan__3LJe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchUtils\":\"Cards_searchUtils__2hU0L\",\"searchInputs\":\"Cards_searchInputs__3zfvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"CustomInput_input_container__3QSF7\",\"superInput\":\"CustomInput_superInput__2d6Um\",\"fadeIn\":\"CustomInput_fadeIn__3h5xZ\",\"errorInput\":\"CustomInput_errorInput__33rO6\",\"error\":\"CustomInput_error__2toCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_page\":\"ErrorPage_error_page__1JMk3\",\"title_404\":\"ErrorPage_title_404__2TK1J\",\"title\":\"ErrorPage_title__3KXLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"CustomButton_default__sFbn4\",\"fadeIn\":\"CustomButton_fadeIn__2Hen-\",\"red\":\"CustomButton_red__14ffV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Paginator_page__mxGzt\",\"active\":\"Paginator_active__2c1Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testContainer\":\"TestComponent_testContainer__tijZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotForm\":\"ForgotForm_forgotForm__3Yds1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"CustomSnackbar_snackbar__3ASh3\",\"fadein\":\"CustomSnackbar_fadein__1KaRy\",\"fadeout\":\"CustomSnackbar_fadeout__1NqJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"CustomPreloader_preloaderContainer__1xumz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPasswordPage\":\"SetPasswordForm_setPasswordPage__2U4iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__1THbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRangeSlider\":\"DoubleRangeSlider_doubleRangeSlider__2lqSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__1V-Yf\",\"animation\":\"Main_animation__RFjm4\"};","\r\nexport type LoginInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    user_id: string | null\r\n}\r\n\r\nexport const loginInitialState: LoginInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false,\r\n    user_id: null\r\n}","\r\nexport type ForgotInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\n\r\nexport const forgotInitialState: ForgotInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: true,\r\n    message: \"\"\r\n}","\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number;\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    tokenDeathTime?: Date\r\n    token?: string\r\n    __v?: number\r\n};\r\n\r\nexport const FakeUser = {\r\n    _id: \"0\",\r\n    email: \"fake\",\r\n    name: \"fake\",\r\n    // avatar?: string;\r\n    publicCardPacksCount: 0,\r\n\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false\r\n};\r\n\r\n\r\nexport type ProfileInitState = {\r\n    user: UserType\r\n}\r\n\r\n\r\nexport const profileInitialState: ProfileInitState = {\r\n    user: FakeUser\r\n\r\n}","import axios from 'axios';\r\n\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nexport const instance = axios.create({\r\n  baseURL,\r\n  withCredentials: true,\r\n});\r\n\r\nexport const fridayAPI = {\r\n  register(email: string, password: string) {\r\n    const promise = instance.post<ResponseType>('/auth/register', { email, password });\r\n    return promise;\r\n  },\r\n};\r\n\r\nexport type ResponseType = {\r\n  addedUser: Object;\r\n  error?: string;\r\n};\r\n","import { InferActionsType } from '../../../../main/bll/action-types';\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n  setIsRegisterAC: (isRegister: boolean) => ({\r\n    type: 'register/IS-REGISTER',\r\n    isRegister,\r\n  } as const),\r\n};\r\n","export type RegisterInitState = {\r\n  isRegister: boolean;\r\n};\r\n\r\nexport const registerInitialState: RegisterInitState = {\r\n  isRegister: false,\r\n};\r\n","export type SetPassInitState = {\r\n    error: string\r\n    responseMessage: string\r\n    success: boolean\r\n}\r\n\r\n\r\nexport const setPassInitialState: SetPassInitState = {\r\n    error: '',\r\n    responseMessage: '',\r\n    success: true\r\n}","export type PackType = {\r\n  _id: string;\r\n  user_id: string;\r\n  user_name: string;\r\n  private: boolean;\r\n\r\n  name: string;\r\n  path: string;\r\n  grade: number;\r\n  shots: number;\r\n\r\n  cardsCount: number;\r\n  deckCover: string;\r\n\r\n  type: string;\r\n  rating: number;\r\n  more_id: string;\r\n\r\n  created: string;\r\n  updated: string;\r\n};\r\n\r\nexport type PacksStateType = {\r\n    packs: PackType[]\r\n    packUser_id: string\r\n    recent_pack_id: string\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    page: number\r\n\r\n}\r\n\r\nexport const PacksInitState: PacksStateType = {\r\n    packs: [],\r\n    packUser_id: '',\r\n    recent_pack_id: '',\r\n    minCardsCount: 0,\r\n    maxCardsCount: 100,\r\n    page: 1\r\n}\r\n\r\n","export type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n\r\n    questionImg: string\r\n    answerImg: string\r\n    answerVideo: string\r\n    questionVideo: string\r\n\r\n    comments: string\r\n\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type CardsStateType = {\r\n    cards: CardType[]\r\n    recent_card_id: string\r\n}\r\n\r\nexport const CardsInitState: CardsStateType = {\r\n    cards: [],\r\n    recent_card_id: ''\r\n}","export type ErrorHandlingInitState = {\r\n    error: string\r\n    loading: boolean\r\n    success: boolean\r\n    getNewCards: boolean\r\n}\r\n\r\nexport const errorHandlingInitialState: ErrorHandlingInitState = {\r\n    error: '',\r\n    loading: false,\r\n    success: false,\r\n    getNewCards: false\r\n}","import { loginReducer } from './../../features/f1-auth/login/bll-login/loginReducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { forgotReducer } from \"../../features/f1-auth/forgot/bll-forgot/forgotReducer\";\r\nimport { profileReducer } from '../../features/f1-auth/profile/bll-profile/profileReducer';\r\nimport { registerReducer } from '../../features/f1-auth/register/bll-register/registerReducer';\r\nimport { setPassReducer } from '../../features/f1-auth/setPass/bll-setPass/setPassReducer';\r\nimport { packsReducer } from '../../features/f2-cards/packs/bll/packsReducer';\r\nimport { cardsReducer } from '../../features/f2-cards/cards/bll/cardsReducer';\r\nimport { errorHandlingReducer } from '../utils/ErrorHandling/bll/errorHandlingReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    setPass: setPassReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    errorHandling: errorHandlingReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\n    window.store = store","import {ForgotActionsType} from \"./forgotActions\";\r\nimport {forgotInitialState, ForgotInitState} from \"./forgotInitState\";\r\n\r\n\r\nexport const forgotReducer = (state = forgotInitialState, action: ForgotActionsType): ForgotInitState => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"forgot/SET_SUCCESS\":\r\n            return {...state, success: action.success}\r\n        case \"forgot/SET_MESSAGE\":\r\n            return {...state, message: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { LoginActionsType } from \"./loginActions\";\r\nimport { loginInitialState, LoginInitState } from \"./loginInitState\";\r\n\r\n\r\nexport const loginReducer = (state = loginInitialState, action: LoginActionsType): LoginInitState => {\r\n    switch (action.type) {\r\n        case \"login/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"login/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"login/SET_USER_ID\": {\r\n            return {\r\n                ...state,\r\n                user_id: action.userId\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { ProfileActionsType } from \"./profileActions\";\r\nimport { profileInitialState, ProfileInitState } from \"./profileInitState\";\r\n\r\n\r\nexport const profileReducer = (state = profileInitialState, action: ProfileActionsType): ProfileInitState => {\r\n    switch (action.type) {\r\n        case \"profile/SET_USER\": {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { fridayAPI } from './api-instance';\r\nimport { RegisterActions, RegisterActionsType } from './registerActions';\r\nimport { registerInitialState, RegisterInitState } from './registerInitState';\r\n\r\nexport const registerReducer = (state = registerInitialState, action: RegisterActionsType): RegisterInitState => {\r\n  switch (action.type) {\r\n    case 'register/IS-REGISTER':\r\n      return { ...state, isRegister: action.isRegister };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginTC = (email: string, password: string) => (dispatch: Dispatch<RegisterActionsType>) => {\r\n  fridayAPI\r\n    .register(email, password)\r\n    .then((res) => {\r\n      console.log('res');\r\n      dispatch(RegisterActions.setIsRegisterAC(true));\r\n    })\r\n    .catch((error) => {\r\n      console.log('error');\r\n    });\r\n};\r\n","import {SetPassActionsType} from \"./setPassActions\";\r\nimport {setPassInitialState, SetPassInitState} from \"./setPassInitState\";\r\n\r\n\r\nexport const setPassReducer = (state = setPassInitialState, action: SetPassActionsType): SetPassInitState => {\r\n    switch (action.type) {\r\n        case 'setPass/SET_ERROR':\r\n            return {...state, error: action.error}\r\n        case 'setPass/SET_SUCCESS':\r\n            return {...state, success: action.success}\r\n        case 'setPass/SET_MESSAGE':\r\n            return {...state, responseMessage: action.message}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\n","import { PacksActionsType } from './packsActions'\r\nimport {PacksInitState, PacksStateType} from './packsInitState'\r\n\r\nexport const packsReducer = (state = PacksInitState, action: PacksActionsType): PacksStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET_PACKS\": {\r\n            return {\r\n                ...state,\r\n                packs: action.packs\r\n            }\r\n        }\r\n        case \"packs/SET_PACK_ID\": {\r\n            return {\r\n                ...state,\r\n                recent_pack_id: action.id\r\n            }\r\n        }\r\n        case 'packs/SET_MIN_CARDS_COUNT': {\r\n            return {\r\n                ...state,\r\n                minCardsCount: action.minCardsCount\r\n            }\r\n        }\r\n        case 'packs/SET_MAX_CARDS_COUNT': {\r\n            return {\r\n                ...state,\r\n                maxCardsCount: action.maxCardsCount\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {CardsActionsType} from './cardsActions'\r\nimport {CardsInitState, CardsStateType} from './cardsInitState'\r\n\r\nexport const cardsReducer = (state = CardsInitState, action: CardsActionsType): CardsStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET_CARDS\": {\r\n            return {\r\n                ...state,\r\n                cards: action.cards\r\n            }\r\n        }\r\n        case 'cards/SET_CARD_ID': {\r\n            return {\r\n                ...state,\r\n                recent_card_id: action.id\r\n            }\r\n        }\r\n        case 'cards/UPDATE_CARD_RATE': {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.card_id ? {...card, grade: action.rate} : card)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {ErrorHandlingActionsType} from \"./errorHandlingActions\";\r\nimport {errorHandlingInitialState, ErrorHandlingInitState} from \"./errorHandlingInitState\";\r\n\r\nexport const errorHandlingReducer = (state = errorHandlingInitialState, action: ErrorHandlingActionsType): ErrorHandlingInitState => {\r\n    switch (action.type) {\r\n        case \"errorHandling/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"errorHandling/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        case \"errorHandling/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"errorHandling/SET_GET_NEW_CARDS\": {\r\n            return {\r\n                ...state,\r\n                getNewCards: action.getNewCards\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from './CustomButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default Button;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./CustomCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.checkboxLabel}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            /><span className={s.customSpan}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n        // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default Checkbox;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./CustomInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.input_container}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport style from './CustomRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst CustomRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n\n\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label className={style.label} key={name + \"-\" + i}>\n            <input className={style.radio}\n                name={name}\n                onChange={onChangeCallback}\n                type={\"radio\"}\n                value={o}\n                checked={value === o}\n                // name, checked, value, onChange\n            />\n            <div className={style.design}></div>\n            <span className={style.text}>\n                {o}\n            </span>\n\n        </label>\n    )) : [];\n\n    return (\n        <div className={style.radio_wrapper}>\n            {mappedOptions}\n        </div>\n    );\n}\n\nexport default CustomRadio;\n","import React from \"react\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomRadio from \"../../../../main/ui/common/CustomRadio/CustomRadio\"\r\nimport s from './TestComponent.module.css'\r\n\r\nexport const TestComponent = () => {\r\n    return (\r\n        <div className={s.testContainer}>\r\n            <CustomButton>test</CustomButton>\r\n            <CustomCheckbox />\r\n            <CustomInput />\r\n            <CustomRadio options={[1, 2]} />\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport s from './ForgotForm.module.css'\r\n\r\n\r\ntype ForgotFormPropsType = {\r\n    forgot: (email: string) => void\r\n    error: string\r\n    success: boolean\r\n    message: string\r\n}\r\n\r\nexport const ForgotForm = (props: ForgotFormPropsType) => {\r\n    const [login, setLogin] = useState('')\r\n    const onLoginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.forgotForm}>\r\n            <div>Your login</div>\r\n            {props.error !== '' && props.error}\r\n            {props.message !== '' && props.message}\r\n            <CustomInput type=\"text\" value={login} onChange={onLoginChange}/>\r\n            <div><CustomButton onClick={() => props.forgot(login)} disabled={!props.success}>send</CustomButton></div>\r\n            <div>\r\n                <NavLink to={'/login'} className={sUtils.loginLink}>Login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const forgotAPI = {\r\n    forgot(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"roman\",\r\n            message: `<div style=\"background-color: black; border-radius: 15px; color: #FFFFFF; padding: 15px\">password recovery link: <a href='https://kibatensai.github.io/fridayfever/#/set-new-password/$token$'>link</a></div>`\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type ForgotActionsType = InferActionsType<typeof ForgotActions>;\r\n\r\nexport const ForgotActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"forgot/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"forgot/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setMessage: (message: string) =>\r\n        ({\r\n            type: \"forgot/SET_MESSAGE\",\r\n            message,\r\n        } as const)\r\n\r\n}","import {ForgotForm} from \"./ForgotForm/ForgotForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ForgotTC} from \"../bll-forgot/forgotThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\n\r\n\r\nexport const Forgot = () => {\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.forgot.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.forgot.success)\r\n    const message = useSelector<AppStoreType, string>(state => state.forgot.message)\r\n    const forgot = (email: string) => {\r\n        dispatch(ForgotTC(email))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ForgotForm forgot={forgot} error={error} success={success} message={message}/>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {forgotAPI} from \"../dal-forgot/forgotInstance\";\r\nimport {ForgotActions} from \"./forgotActions\";\r\n\r\nexport const ForgotTC = (email: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(ForgotActions.setSuccess(false))\r\n        const res = await forgotAPI.forgot(email)\r\n        dispatch(ForgotActions.setSuccess(true))\r\n        dispatch(ForgotActions.setMessage(res.data.info))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(ForgotActions.setError(error))\r\n        dispatch(ForgotActions.setSuccess(true))\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"login/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setLoading: (loading: boolean) =>\r\n        ({\r\n            type: \"login/SET_LOADING\",\r\n            loading,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"login/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setUserId: (userId: string) =>\r\n        ({\r\n            type: \"login/SET_USER_ID\",\r\n            userId\r\n        } as const)\r\n};\r\n","import axios from \"axios\";\r\nimport { devURL, herokuURL } from \"./baseURLs\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: herokuURL,\r\n  withCredentials: true,\r\n});\r\n","export const devURL = 'http://localhost:7542/2.0/'\r\nexport const herokuURL = 'https://neko-back.herokuapp.com/2.0/'","import { instance } from \"../../../../main/dal/instance\";\r\n\r\nexport const loginAPI = {\r\n    signIn(data: LoginDetailsType) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    signOut() {\r\n        return instance.delete('auth/me')\r\n    },\r\n    me() {\r\n        return instance.post('auth/me')\r\n    }\r\n}\r\n\r\nexport type LoginDetailsType = {\r\n    email: string | ReadonlyArray<string> | number\r\n    password: string | ReadonlyArray<string> | number\r\n    rememberMe: boolean\r\n}","\r\nimport {InferActionsType} from \"../../../../main/bll/action-types\";\r\nimport { UserType } from \"./profileInitState\";\r\n\r\nexport type ProfileActionsType = InferActionsType<typeof ProfileActions>;\r\n\r\nexport const ProfileActions = {\r\n    setUser: (user: UserType) => ({\r\n        type: \"profile/SET_USER\",\r\n        user,\r\n    } as const),\r\n\r\n}","import { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport { loginAPI, LoginDetailsType } from \"../dal-login/loginInstance\";\r\nimport {\r\n  ProfileActions,\r\n  ProfileActionsType\r\n} from \"./../../profile/bll-profile/profileActions\";\r\nimport { LoginActions, LoginActionsType } from \"./loginActions\";\r\n\r\nexport const signIn = (\r\n  data: LoginDetailsType\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  LoginActionsType | ProfileActionsType\r\n> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signIn(data);\r\n    dispatch(ProfileActions.setUser(res.data));\r\n    dispatch(LoginActions.setSuccess(true));\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + \", more details in the console\";\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const signOut = (): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  LoginActionsType\r\n> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.signOut();\r\n    dispatch(LoginActions.setLoading(false));\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + \", more details in the console\";\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n\r\nexport const me = (): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  LoginActionsType | ProfileActionsType\r\n> => async (dispatch) => {\r\n  dispatch(LoginActions.setLoading(true));\r\n  try {\r\n    const res = await loginAPI.me();\r\n\r\n    if (res.status === 200) {\r\n      console.log(res);\r\n\r\n      dispatch(ProfileActions.setUser(res.data));\r\n      dispatch(LoginActions.setLoading(false));\r\n      dispatch(LoginActions.setSuccess(true));\r\n      dispatch(LoginActions.setUserId(res.data._id));\r\n    }\r\n  } catch (e) {\r\n    const error = e.response\r\n      ? e.response.data.error\r\n      : e.message + \", more details in the console\";\r\n    dispatch(LoginActions.setLoading(false));\r\n    dispatch(LoginActions.setError(error));\r\n  }\r\n};\r\n","import s from './CustomSnackbar.module.css'\r\nimport { FC, memo, useEffect, useState } from 'react'\r\n\r\ntype CustomSnackbarType = {\r\n    title: string\r\n    timer: number\r\n}\r\n\r\nexport const CustomSnackbar: FC<CustomSnackbarType> = memo(({ title, timer }) => {\r\n\r\n    const [visual, setVisual] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        setVisual(() => true)\r\n        const show = setTimeout(() => {\r\n            setVisual(() => false)\r\n        }, timer)\r\n        return () => {\r\n            clearTimeout(show)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                visual &&\r\n                <div className={s.snackbar}>\r\n                    {title}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/dbringload.46fb05e0.svg\";","import preloader from './../../../assets/dbringload.svg'\r\nimport s from './CustomPreloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (<div className={s.preloaderContainer}>\r\n        <img src={preloader} alt='Loading...' />\r\n    </div>)\r\n}","import React, { ChangeEvent, FC, memo, MouseEvent, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport CustomButton from '../../../../../main/ui/common/CustomButton/CustomButton'\r\nimport CustomCheckbox from '../../../../../main/ui/common/CustomCheckbox/CustomCheckbox'\r\nimport CustomInput from '../../../../../main/ui/common/CustomInput/CustomInput'\r\nimport s from './LoginForm.module.css'\r\nimport sUtils from './../../../../../main/ui/common/stylingUtils/navlinkStyling.module.css'\r\nimport { LoginDetailsType } from '../../dal-login/loginInstance'\r\nimport { PATH } from '../../../../../main/ui/routes/Routes'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStoreType } from '../../../../../main/bll/store'\r\nimport { CustomSnackbar } from '../../../../../main/ui/common/CustomSnackbar/CustomSnackbar'\r\nimport { Preloader } from '../../../../../main/ui/common/CustomPreloader/CustomPreloader'\r\n\r\ntype LoginFormType = {\r\n    login: (userDetails: LoginDetailsType) => void\r\n    error: string\r\n}\r\n\r\nexport const LoginForm: FC<LoginFormType> = memo(({ login, error }) => {\r\n\r\n    const [details, setDetails] = useState<LoginDetailsType>({ email: 'nya-admin@nya.nya', password: '1qazxcvBG', rememberMe: false })\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n\r\n    const emailOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, email: e.target.value })\r\n    }\r\n\r\n    const passwordOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, password: e.target.value })\r\n    }\r\n\r\n    const rememberMeOnChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setDetails({ ...details, rememberMe: e.target.checked })\r\n    }\r\n\r\n    const detailsWrap = (e: MouseEvent<HTMLButtonElement>) => {\r\n        login(details)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <>\r\n                    {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n                    <div className={s.loginForm}>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='email'>Email:</label>\r\n                            <CustomInput onChange={emailOnChangeHandler} value={details.email} type='email' name='email' id='email' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <label htmlFor='password'>Password:</label>\r\n                            <CustomInput onChange={passwordOnChangeHandler} value={details.password} type='password' name='password' id='password' />\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomCheckbox onChange={rememberMeOnChangeHandler} checked={details.rememberMe} />\r\n                            <label className={s.rememberMeLabel}>remember me</label>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <CustomButton type={'submit'} onClick={detailsWrap} disabled={loading}>Sign in</CustomButton>\r\n                        </div>\r\n                        <div className={s.loginGroup}>\r\n                            <NavLink to={PATH.FORGOT} className={sUtils.loginLink}>forgot?</NavLink>\r\n                            <NavLink to={PATH.REGISTER} className={sUtils.loginLink}>register</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n})","import { memo, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { LoginActions } from \"../bll-login/loginActions\"\r\nimport { signIn } from \"../bll-login/loginThunks\"\r\nimport { LoginDetailsType } from \"../dal-login/loginInstance\"\r\nimport { LoginForm } from \"./LoginForm/LoginForm\"\r\n\r\nexport const Login = memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n\r\n    useEffect(() => {\r\n        dispatch(LoginActions.setError(''))\r\n    }, [dispatch])\r\n\r\n    const login = (details: LoginDetailsType) => {\r\n        dispatch(signIn(details))\r\n    }\r\n\r\n    if (success) return <Redirect to={PATH.PROFILE} />\r\n\r\n    return (\r\n        <>\r\n            <LoginForm login={login} error={error}/>\r\n        </>\r\n    )\r\n})","import React, { memo, useCallback, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { me, signOut } from \"../../login/bll-login/loginThunks\"\r\nimport { UserType } from \"../bll-profile/profileInitState\"\r\nimport s from './Profile.module.css'\r\n\r\nexport const Profile = memo(() => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<AppStoreType, UserType>(state => state.profile.user)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.login.loading)\r\n    const [isAuth, setIsAuth] = useState<boolean>(success)\r\n\r\n    const [name, setName] = useState<string>(user.name)\r\n    const [avatar, setAvatar] = useState<string | undefined>(user.avatar)\r\n\r\n    useEffect(() => {\r\n        dispatch(me())\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(signOut())\r\n        setIsAuth(() => false)\r\n    }, [])\r\n\r\n    if (!isAuth) { return <Redirect to={PATH.LOGIN} /> }\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Preloader />\r\n                :\r\n                <div className={s.profile}>\r\n                    <div className={s.logoutBlock}>\r\n                        <span className={s.logout}>You are authorized</span>\r\n                        <CustomButton onClick={logout} disabled={loading}>\r\n                            Log Out\r\n                        </CustomButton>\r\n                    </div>\r\n                    <div className={s.profileBlock}>\r\n                        <img className={s.avatar} src={user.avatar} alt={'avatar'} />\r\n\r\n                        <div>name: {user.name}</div>\r\n                        <div>email: {user.email}</div>\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n})","import { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Button from '../../../../main/ui/common/CustomButton/CustomButton';\r\nimport Input from '../../../../main/ui/common/CustomInput/CustomInput';\r\nimport { PATH } from '../../../../main/ui/routes/Routes';\r\nimport { loginTC } from '../bll-register/registerReducer';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\n\r\nexport const Register = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isRegister = useSelector<AppStoreType, boolean>((state) => state.register.isRegister);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [repPass, setrepPpass] = useState('');\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n  const changePass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPass(e.currentTarget.value);\r\n  };\r\n  const changeRepPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setrepPpass(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(loginTC(email, pass));\r\n  };\r\n\r\n  if (isRegister) {\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      Register Page\r\n      <Input value={email} onChange={changeEmail} placeholder={'Enter your email'} />\r\n      <Input value={pass} onChange={changePass} type={'password'} placeholder={'Enter your pass'} />\r\n      {pass !== repPass ? <div style={{ color: 'red' }}>Passwords should be equal </div> : null}\r\n      <Input value={repPass} onChange={changeRepPass} type={'password'} placeholder={'Repeat pass'} />\r\n      <Button onClick={onSubmit}>register</Button>\r\n      <NavLink to={PATH.LOGIN}>Sign in</NavLink>\r\n    </>\r\n  );\r\n};\r\n","import CustomInput from \"../../../../../main/ui/common/CustomInput/CustomInput\";\r\nimport CustomButton from \"../../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport s from './SetPasswordForm.module.css'\r\n\r\ntype SetPasswordType = {\r\n    setNewPassword: (password: string) => void\r\n    success: boolean\r\n    error: string\r\n    responseMessage: string\r\n    setError: (error: string) => void\r\n}\r\n\r\nexport const SetPasswordForm = (props: SetPasswordType) => {\r\n\r\n    const [password1, setPassword1] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const onPassword1Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.target.value)\r\n    }\r\n    const onPassword2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword2(e.target.value)\r\n    }\r\n\r\n    const onSetPasswordClickHandler = () => {\r\n        password1 === password2 ? props.setNewPassword(password1) : props.setError('Passwords must match')\r\n    }\r\n\r\n    return (\r\n        <div className={s.setPasswordPage}>\r\n            {props.error !== '' && props.error}\r\n            {props.responseMessage !== '' && props.responseMessage}\r\n            <div><CustomInput type={'password'} value={password1} onChange={onPassword1Change}/></div>\r\n            <div><CustomInput type={'password'} value={password2} onChange={onPassword2Change}/></div>\r\n            <div><CustomButton onClick={onSetPasswordClickHandler} disabled={!props.success}>Set Password</CustomButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\n\r\nexport const setPassAPI = {\r\n    setPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\n\r\nexport type SetPassActionsType = InferActionsType<typeof SetPassActions>;\r\n\r\nexport const SetPassActions = {\r\n    setError: (error: string) => ({\r\n        type: 'setPass/SET_ERROR',\r\n        error\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'setPass/SET_SUCCESS',\r\n        success\r\n    } as const),\r\n    setResponseMessage: (message: string) => ({\r\n        type: 'setPass/SET_MESSAGE',\r\n        message\r\n    } as const)\r\n}","import React from \"react\"\r\nimport {SetPasswordForm} from \"./SetPasswordForm/SetPasswordForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {SetPassTC} from \"../bll-setPass/setPassThunks\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {SetPassActions} from \"../bll-setPass/setPassActions\";\r\n\r\nexport const SetPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppStoreType, string>(state => state.setPass.error)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.setPass.success)\r\n    const responseMessage = useSelector<AppStoreType, string>(state => state.setPass.responseMessage)\r\n    const {id} = useParams<{ id: string }>();\r\n    const setNewPassword = (password: string) => {\r\n        if (id && id !== ':id') {\r\n\r\n            dispatch(SetPassTC(password, id))\r\n        } else if (id === ':id') {\r\n            dispatch(SetPassActions.setError('If you want to change your password you should open this page using link'))\r\n        }\r\n    }\r\n\r\n    const setError = (error: string) => {\r\n        dispatch(SetPassActions.setError(error))\r\n    }\r\n\r\n    return (\r\n        <SetPasswordForm setNewPassword={setNewPassword} error={error} success={success}\r\n                         responseMessage={responseMessage} setError={setError}/>\r\n    )\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {setPassAPI} from \"../dal-setPass/setPassInstance\";\r\nimport {SetPassActions} from \"./setPassActions\";\r\n\r\nexport const SetPassTC = (email: string, id: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        const res = await setPassAPI.setPassword(email, id)\r\n        dispatch(SetPassActions.setSuccess(false))\r\n        dispatch(SetPassActions.setResponseMessage(res.data.info))\r\n        dispatch(SetPassActions.setError(''))\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (\"Unknown error\")\r\n        dispatch(SetPassActions.setError(error))\r\n        dispatch(SetPassActions.setSuccess(true))\r\n    }\r\n}\r\n","import { FC } from 'react'\r\nimport s from './CustomModalWindow.module.css'\r\n\r\ninterface ICustomModalWindow {\r\n    active: boolean\r\n    setActive: (flag: boolean) => void\r\n}\r\n\r\nexport const CustomModalWindow: FC<ICustomModalWindow> = ({active, setActive, children}) => {\r\n    const modalStylingClass = active ? `${s.modal} ${s.modal_active}` : `${s.modal}`\r\n    const modalContentStylingClass = active ? `${s.modal_content} ${s.modal_content_active}` : `${s.modal_content}`\r\n    return (\r\n        <div className={modalStylingClass} onClick={() => setActive(false)}>\r\n            <div className={modalContentStylingClass} onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {InferActionsType} from \"../../../bll/action-types\";\r\n\r\nexport type ErrorHandlingActionsType = InferActionsType<typeof ErrorHandlingActions>;\r\n\r\nexport const ErrorHandlingActions = {\r\n    setError: (error: string) =>\r\n        ({\r\n            type: \"errorHandling/SET_ERROR\",\r\n            error,\r\n        } as const),\r\n    setLoading: (loading: boolean) =>\r\n        ({\r\n            type: \"errorHandling/SET_LOADING\",\r\n            loading,\r\n        } as const),\r\n    setSuccess: (success: boolean) =>\r\n        ({\r\n            type: \"errorHandling/SET_SUCCESS\",\r\n            success,\r\n        } as const),\r\n    setGetNewCards: (getNewCards: boolean) =>\r\n        ({\r\n            type: \"errorHandling/SET_GET_NEW_CARDS\",\r\n            getNewCards,\r\n        } as const)\r\n};","import {InferActionsType} from \"../../../../main/bll/action-types\";\r\nimport {CardType} from \"./cardsInitState\";\r\nimport {AnswerRateType} from \"../../../f3-learning/learning/ui/Learning\";\r\n\r\n\r\nexport type CardsActionsType = InferActionsType<typeof CardsActions>\r\n\r\nexport const CardsActions = {\r\n    setCards: (cards: CardType[]) => ({\r\n        type: 'cards/SET_CARDS',\r\n        cards\r\n    } as const),\r\n    setCardId: (id: string) => ({\r\n        type: 'cards/SET_CARD_ID',\r\n        id\r\n    } as const),\r\n    updateCardsRate: (card_id: string, rate: AnswerRateType) => ({\r\n        type: 'cards/UPDATE_CARD_RATE',\r\n        card_id,\r\n        rate\r\n    }as const)\r\n}","import {instance} from \"../../../../main/dal/instance\";\r\nimport {CardType} from \"../bll/cardsInitState\";\r\nimport {AnswerRateType} from \"../../../f3-learning/learning/ui/Learning\";\r\n\r\ntype GetCardsDataType = {\r\n    cards: CardType[];\r\n    error: string;\r\n    maxGrade: number;\r\n    minGrade: number;\r\n};\r\n\r\nexport type GetCardsParamsType = {\r\n    min?: number;\r\n    max?: number;\r\n    sortCards?: string;\r\n    page?: number;\r\n    pageCount?: number;\r\n    cardQuestion?: string;\r\n    cardAnswer?: string;\r\n};\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPack_id: string, params?: GetCardsParamsType) {\r\n        return instance.get<GetCardsDataType>(\r\n            `cards/card?cardsPack_id=${cardsPack_id}`,\r\n            {\r\n                params: {\r\n                    pageCount: 100,\r\n                    ...params,\r\n                },\r\n            }\r\n        );\r\n    },\r\n    addCard(cardsPack_id: string, question: string, answer: string) {\r\n        return instance.post(\"cards/card\", {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                grade: Math.floor(Math.random() * 5),\r\n                answer,\r\n            },\r\n        });\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete(`cards/card?&id=${id}`);\r\n    },\r\n    updateCard(id: string, question: string, answer: string) {\r\n        return instance.put(`cards/card`, {\r\n            card: {\r\n                _id: id,\r\n                question,\r\n                answer,\r\n            },\r\n        });\r\n    },\r\n    updateCardGrade(grade: AnswerRateType, id: string) {\r\n        return instance.put(`/cards/grade`, {\r\n                grade: grade,\r\n                card_id: id\r\n        })\r\n    }\r\n};\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport {\r\n    ErrorHandlingActionsType,\r\n    ErrorHandlingActions,\r\n} from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport {cardsAPI, GetCardsParamsType} from \"../dal/cardsInstance\";\r\nimport {CardsActions, CardsActionsType} from \"./cardsActions\";\r\nimport {AnswerRateType} from \"../../../f3-learning/learning/ui/Learning\";\r\n\r\nexport const getCards = (\r\n    id: string,\r\n    params?: GetCardsParamsType\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHandlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    dispatch(ErrorHandlingActions.setGetNewCards(false))\r\n    cardsAPI\r\n        .getCards(id, params)\r\n        .then(({data}) => {\r\n            dispatch(CardsActions.setCards(data.cards));\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setGetNewCards(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n            dispatch(ErrorHandlingActions.setGetNewCards(true))\r\n        });\r\n};\r\n\r\nexport const addCard = (\r\n    id: string,\r\n    question: string,\r\n    answer: string\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHandlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .addCard(id, question, answer)\r\n        .then(({data}) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(getCards(id));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const deleteCard = (\r\n    id: string,\r\n    pack_id: string\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHandlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .deleteCard(id)\r\n        .then((data) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(getCards(pack_id));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const updateCard = (\r\n    id: string,\r\n    pack_id: string,\r\n    question: string,\r\n    answer: string\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHandlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .updateCard(id, question, answer)\r\n        .then((data) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(getCards(pack_id));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n\r\nexport const updateCardGrade = (\r\n    id: string,\r\n    grade: AnswerRateType,\r\n    pack_id: string\r\n): ThunkAction<void,\r\n    AppStoreType,\r\n    unknown,\r\n    CardsActionsType | ErrorHandlingActionsType> => (dispatch) => {\r\n    dispatch(ErrorHandlingActions.setLoading(true));\r\n    cardsAPI\r\n        .updateCardGrade(grade, id)\r\n        .then(({data}) => {\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(CardsActions.updateCardsRate(data.updatedGrade.card_id, data.updateGrade.grade));\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            dispatch(ErrorHandlingActions.setLoading(false));\r\n            dispatch(ErrorHandlingActions.setError(error));\r\n        });\r\n};\r\n","import React, { FC, memo } from \"react\";\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport s from './../../../../main/ui/common/CustomTable/CustomTable.module.css';\r\n\r\nexport type CardsTablePropsType = {\r\n    title: string[]\r\n    data?: any\r\n    cardId: string\r\n    disabled: boolean\r\n    addItemCallback?: (id: string) => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n    saveRecentIdCallback?: (id: string) => void\r\n    setModalView?: (flag: boolean) => void\r\n    setNewModalView?: (flag: boolean) => void\r\n\r\n}\r\n\r\nexport const CardsTable: FC<CardsTablePropsType> = memo(({ title, data, cardId, disabled, addItemCallback, deleteItemCallback, updateItemCallback, saveRecentIdCallback, setModalView, setNewModalView }) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback(cardId)\r\n        setNewModalView && setNewModalView(true)\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n        cardIdSaver(id)\r\n        setModalView && setModalView(true)\r\n    }\r\n\r\n    const cardIdSaver = (id: string) => {\r\n        saveRecentIdCallback && saveRecentIdCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling} key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.question}</td>\r\n        <td className={s.tdStyling}>{dataItem.answer}</td>\r\n        <td className={s.tdStyling}>{dataItem.grade}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)} disabled={disabled}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)} disabled={disabled}>del</CustomButton>\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                    <tr>\r\n                        {titleFiller}\r\n                        <th><CustomButton onClick={onAddItemButtonClick} disabled={disabled}>Add</CustomButton></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport CustomInput from \"../CustomInput/CustomInput\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport s from './Search.module.css'\r\n\r\n\r\ntype SearchPropsType = {\r\n    placeholder?: string\r\n    searchFunction: (value: string) => void\r\n}\r\nexport const Search = (props: SearchPropsType) => {\r\n    const [value, setValue] = useState(\"\")\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        e.key === 'Enter' && props.searchFunction(value)\r\n    }\r\n    const Search = () => {\r\n        props.searchFunction(value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.search}>\r\n            <CustomInput placeholder={props.placeholder} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}/>\r\n            <CustomButton onClick={Search}>Search</CustomButton>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport s from './Sort.module.css'\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\n\r\ntype SortPropsType = {\r\n    sortByMore: () => void\r\n    sortByFewer: () => void\r\n}\r\n\r\nexport const Sort = (props: SortPropsType) => {\r\n\r\n    return (\r\n        <div className={s.sort}>\r\n            <CustomButton onClick={props.sortByMore}>/\\</CustomButton>\r\n            <CustomButton onClick={props.sortByFewer}>\\/</CustomButton>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\nimport s from './DoubleRangeSlider.module.css'\r\n\r\ntype DoubleRangeSliderProps = {\r\n    onChangeRange?: (value: [number, number]) => void\r\n    value?: [number, number]\r\n    min?: number\r\n    max?: number\r\n}\r\nexport const DoubleRangeSlider: React.FC<DoubleRangeSliderProps> = (\r\n    {\r\n        onChangeRange, value, max, min\r\n    }) => {\r\n\r\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\r\n        if (typeof (newValue) !== 'number') {\r\n            onChangeRange && onChangeRange([newValue[0], newValue[1]]);\r\n        }\r\n    };\r\n\r\n    function valuetext(value: number) {\r\n        return `${value}`;\r\n    }\r\n\r\n    return (\r\n        <div className={s.doubleRangeSlider}>\r\n            <Slider value={value} min={min} max={max} onChange={handleSliderChange} valueLabelDisplay={'auto'}\r\n                    aria-labelledby={\"range-slider\"} getAriaValueText={valuetext}/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink, useParams } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport { CustomModalWindow } from \"../../../../main/ui/common/CustomModalWindow/CustomModalWindow\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { CustomSnackbar } from \"../../../../main/ui/common/CustomSnackbar/CustomSnackbar\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { ErrorHandlingActions } from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\"\r\nimport { CardsActions } from \"../bll/cardsActions\"\r\nimport { CardType } from \"../bll/cardsInitState\"\r\nimport { addCard, deleteCard, getCards, updateCard } from \"../bll/cardsThunks\"\r\nimport { CardsTable } from \"./CardsTable\"\r\nimport { Search } from \"../../../../main/ui/common/SearchComponent/SearchComponent\";\r\nimport { Sort } from \"../../../../main/ui/common/SortComponent/Sort\";\r\nimport { DoubleRangeSlider } from \"../../../../main/ui/common/DoubleRangeSlider/DoubleRangeSlider\";\r\nimport s from './Cards.module.css'\r\n\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cards.cards)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.errorHandling.error)\r\n\r\n    const [minGrade, setMinGrade] = useState(0)\r\n    const [maxGrade, setMaxGrade] = useState(6)\r\n\r\n    const recent_card_id = useSelector<AppStoreType, string>(state => state.cards.recent_card_id)\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    const [newModalActive, setNewModalActive] = useState<boolean>(false)\r\n\r\n    const [newQuestionFromModal, setNewQuestionFromModal] = useState<string>('')\r\n    const [newAnswerFromModal, setNewAnswerFromModal] = useState<string>('')\r\n\r\n    const [questionFromModal, setQuestionFromModal] = useState<string>('')\r\n    const [answerFromModal, setAnswerFromModal] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        dispatch(getCards(id))\r\n    }, [dispatch, id])\r\n\r\n    const addCardHandler = (id: string) => {\r\n        dispatch(addCard(id, newQuestionFromModal, newAnswerFromModal))\r\n        setNewQuestionFromModal('')\r\n        setNewAnswerFromModal('')\r\n        setNewModalActive(false)\r\n    }\r\n\r\n    const deleteCardHandler = (cardId: string) => {\r\n        dispatch(deleteCard(cardId, id))\r\n    }\r\n\r\n    const updateCardHandler = () => {\r\n        dispatch(updateCard(recent_card_id, id, questionFromModal, answerFromModal))\r\n        setModalActive(false)\r\n        setQuestionFromModal('')\r\n        setAnswerFromModal('')\r\n    }\r\n\r\n    const cardIdSaver = (id: string) => {\r\n        dispatch(CardsActions.setCardId(id))\r\n    }\r\n\r\n    const searchByQuestion = (cardQuestion: string) => {\r\n        dispatch(getCards(id, { cardQuestion, min: minGrade, max: maxGrade }))\r\n    }\r\n\r\n    const searchByAnswer = (cardAnswer: string) => {\r\n        dispatch(getCards(id, { cardAnswer, min: minGrade, max: maxGrade }))\r\n    }\r\n\r\n    const sortByHigher = () => {\r\n        dispatch(getCards(id, { sortCards: \"0grade\" }))\r\n    }\r\n\r\n    const sortByLower = () => {\r\n        dispatch(getCards(id, { sortCards: \"1grade\" }))\r\n    }\r\n\r\n    const onSearchingGradesChange = (values: [number, number]) => {\r\n        setMinGrade(values[0])\r\n        setMaxGrade(values[1])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            Cards Page\r\n            {loading && <Preloader />}\r\n            {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n            <NavLink to={PATH.PACKS}><CustomButton>Back</CustomButton></NavLink>\r\n            SearchByQuestion\r\n            <div className={s.searchUtils}>\r\n                <div className={s.searchBlock}>\r\n                    Grade range:\r\n                    <DoubleRangeSlider min={0} max={6} value={[minGrade, maxGrade]}\r\n                        onChangeRange={onSearchingGradesChange} />\r\n                    Enter card question or enter card answer:\r\n                    <div className={s.searchInputs}>\r\n                        <Search placeholder={\"Enter card question\"} searchFunction={searchByQuestion} />\r\n                        <Search placeholder={\"Enter card answer\"} searchFunction={searchByAnswer} />\r\n                    </div>\r\n                </div>\r\n                <div className={s.sortBlock}>\r\n                    Sort by grade:\r\n                    <Sort sortByMore={sortByHigher} sortByFewer={sortByLower} />\r\n                </div>\r\n            </div>\r\n            <CardsTable title={['question', 'answer', 'grade', 'udated', 'url']}\r\n                data={cards} cardId={id}\r\n                deleteItemCallback={deleteCardHandler}\r\n                saveRecentIdCallback={cardIdSaver}\r\n                setModalView={setModalActive}\r\n                setNewModalView={setNewModalActive}\r\n                disabled={loading} />\r\n            {/* New card */}\r\n            <CustomModalWindow active={newModalActive} setActive={setNewModalActive}>\r\n                <p>Choose Question and Answer</p>\r\n                <p>Question</p>\r\n                <CustomInput value={newQuestionFromModal} onChange={e => setNewQuestionFromModal(e.target.value)} />\r\n                <p>Answer</p>\r\n                <CustomInput value={newAnswerFromModal} onChange={e => setNewAnswerFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => addCardHandler(id)}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setNewModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n            {/* Update card */}\r\n            <CustomModalWindow active={modalActive} setActive={setModalActive}>\r\n                <p>Change Question and Answer</p>\r\n                <p>Question</p>\r\n                <CustomInput value={questionFromModal} onChange={e => setQuestionFromModal(e.target.value)} />\r\n                <p>Answer</p>\r\n                <CustomInput value={answerFromModal} onChange={e => setAnswerFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => updateCardHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n        </>\r\n    )\r\n}","import React, {FC, memo} from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {PATH} from \"../../routes/Routes\"\r\nimport CustomButton from './../CustomButton/CustomButton'\r\nimport navlinkStyling from './../stylingUtils/navlinkStyling.module.css'\r\nimport s from './CustomTable.module.css'\r\n\r\nexport type CustomTablePropsType = {\r\n    title: string[]\r\n    data: any\r\n    addItemCallback?: () => void\r\n    deleteItemCallback?: (id: string) => void\r\n    updateItemCallback?: (id: string) => void\r\n    saveRecentIdCallback?: (id: string) => void\r\n    setModalView?: (flag: boolean) => void\r\n    setNewModalView?: (flag: boolean) => void\r\n    disabled?: boolean\r\n\r\n}\r\n\r\nexport const CustomTable: FC<CustomTablePropsType> = memo(({\r\n                                                               title,\r\n                                                               data,\r\n                                                               disabled,\r\n                                                               addItemCallback,\r\n                                                               deleteItemCallback,\r\n                                                               updateItemCallback,\r\n                                                               saveRecentIdCallback,\r\n                                                               setModalView,\r\n                                                               setNewModalView\r\n                                                           }) => {\r\n\r\n    const recentDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    };\r\n\r\n    const onAddItemButtonClick = () => {\r\n        addItemCallback && addItemCallback()\r\n        setNewModalView && setNewModalView(true)\r\n    }\r\n\r\n    const onDeleteItemButtonClick = (id: string) => {\r\n        deleteItemCallback && deleteItemCallback(id)\r\n    }\r\n\r\n    const onUpdateItemCallback = (id: string) => {\r\n        updateItemCallback && updateItemCallback(id)\r\n        packIdSaver(id)\r\n        setModalView && setModalView(true)\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        saveRecentIdCallback && saveRecentIdCallback(id)\r\n    }\r\n\r\n    const titleFiller = title.map(t => <th key={'title-' + t}>\r\n        {t}\r\n    </th>)\r\n\r\n    const dataFiller = data.map((dataItem: any, dataIndex: number) => <tr className={s.trStyling}\r\n                                                                          key={title + '-row-' + (dataItem._id || dataIndex)}>\r\n        <td className={s.tdStyling}>{dataItem.name}</td>\r\n        <td className={s.tdStyling}>{dataItem.cardsCount}</td>\r\n        <td className={s.tdStyling}>{recentDate(dataItem.updated)}</td>\r\n        <td className={s.tdStyling}></td>\r\n        <td className={s.tdStyling}>\r\n            <CustomButton onClick={() => onUpdateItemCallback(dataItem._id)} disabled={disabled}>upd</CustomButton>\r\n            <CustomButton onClick={() => onDeleteItemButtonClick(dataItem._id)} disabled={disabled}>del</CustomButton>\r\n            { !disabled &&\r\n                <>\r\n            <NavLink to={`${PATH.CARDS}/${dataItem._id}`} className={navlinkStyling.loginLink}\r\n                     onClick={() => packIdSaver(dataItem._id)}>Cards</NavLink>\r\n            <NavLink to={`${PATH.LEARNING}/${dataItem._id}`} className={navlinkStyling.loginLink}\r\n                     onClick={() => packIdSaver(dataItem._id)}>Learning</NavLink>\r\n                </>\r\n            }\r\n        </td>\r\n    </tr>)\r\n\r\n    return (\r\n        <>\r\n            <table className={s.tableStyling}>\r\n                <thead className={s.tableStyling}>\r\n                <tr>\r\n                    {titleFiller}\r\n                    <th><CustomButton onClick={onAddItemButtonClick} disabled={disabled}>Add</CustomButton></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {dataFiller}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})","import { InferActionsType } from \"../../../../main/bll/action-types\";\r\nimport { PackType } from \"./packsInitState\";\r\n\r\n\r\nexport type PacksActionsType = InferActionsType<typeof PacksActions>\r\n\r\nexport const PacksActions = {\r\n    setPacks: (packs: PackType[]) =>\r\n    ({\r\n      type: \"packs/SET_PACKS\",\r\n      packs,\r\n    } as const),\r\n    setPage: (page: number) =>\r\n    ({\r\n      type: \"page/SET_PAGE\",\r\n      page,\r\n    } as const),\r\n    setPackId: (id: string) => ({\r\n      type: 'packs/SET_PACK_ID',\r\n      id\r\n  } as const),\r\n    setMinCardsCount: (minCardsCount: number) => ({\r\n        type: 'packs/SET_MIN_CARDS_COUNT',\r\n        minCardsCount\r\n    } as const),\r\n    setMaxCardsCount: (maxCardsCount: number) => ({\r\n        type: 'packs/SET_MAX_CARDS_COUNT',\r\n        maxCardsCount\r\n    } as const),\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { instance } from \"../../../../main/dal/instance\";\r\nimport { PackType } from \"../bll/packsInitState\";\r\n// Conflict №3 Unnecessary url import\r\n\r\n\r\nexport type ParamsType = {\r\n  packName?: string | undefined;\r\n  min?: number | undefined;\r\n  max?: number | undefined;\r\n  sortPacks?: string | undefined;\r\n  page?: number | undefined;\r\n  pageCount?: number | undefined;\r\n  user_id?: string | undefined;\r\n};\r\n\r\nexport const packsAPI = {\r\n  getPacks(params: ParamsType) {\r\n    return instance.get<GetDataType>('cards/pack', {\r\n      params: {\r\n        pageCount: 100,\r\n        ...params,\r\n      },\r\n    });\r\n  },\r\n  addPack(name: string) {\r\n    return instance.post('cards/pack', {\r\n      cardsPack: {\r\n        name,\r\n      },\r\n    });\r\n  },\r\n  deletePack(id: string) {\r\n    return instance.delete(`cards/pack?id=${id}`);\r\n  },\r\n  updatePack(id: string, name: string) {\r\n    return instance.put('cards/pack', {\r\n      cardsPack: {\r\n        _id: id,\r\n        name,\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport type GetDataType = {\r\n  cardPacks: PackType[];\r\n  error: string;\r\n  cardPacksTotalCount: number;\r\n  maxCardsCount: number;\r\n  minCardsCount: number;\r\n  page: number;\r\n  pageCount: number;\r\n  token: string;\r\n  tokenDeathTime: number;\r\n};\r\n\r\n","import {\r\n  ErrorHandlingActions,\r\n  ErrorHandlingActionsType,\r\n} from \"./../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStoreType } from \"../../../../main/bll/store\";\r\nimport { packsAPI, ParamsType } from \"../dal/packsInstance\";\r\nimport { PacksActions, PacksActionsType } from \"./packsActions\";\r\nimport {CardsActions, CardsActionsType} from \"../../cards/bll/cardsActions\";\r\n\r\nexport const getPacks = (\r\n  params: ParamsType\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHandlingActionsType | CardsActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .getPacks(params)\r\n    .then(({ data }) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(PacksActions.setPacks(data.cardPacks));\r\n      dispatch(PacksActions.setMinCardsCount(data.minCardsCount));\r\n      dispatch(PacksActions.setMaxCardsCount(data.maxCardsCount));\r\n        dispatch(CardsActions.setCards([]))\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const addPack = (\r\n  name: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHandlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .addPack(name)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getPacks({}));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const deletePack = (\r\n  id: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHandlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .deletePack(id)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getPacks({}));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n\r\nexport const updatePack = (\r\n  id: string,\r\n  name: string\r\n): ThunkAction<\r\n  void,\r\n  AppStoreType,\r\n  unknown,\r\n  PacksActionsType | ErrorHandlingActionsType\r\n> => (dispatch) => {\r\n  dispatch(ErrorHandlingActions.setLoading(true));\r\n  packsAPI\r\n    .updatePack(id, name)\r\n    .then((data) => {\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(getPacks({}));\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response\r\n        ? e.response.data.error\r\n        : e.message + \", more details in the console\";\r\n      dispatch(ErrorHandlingActions.setLoading(false));\r\n      dispatch(ErrorHandlingActions.setError(error));\r\n    });\r\n};\r\n","import { MouseEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStoreType } from '../../../../main/bll/store';\r\nimport { getPacks } from '../bll/packsThunks';\r\n\r\nimport s from './Paginator.module.css';\r\n\r\nexport const Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const page = useSelector<AppStoreType, number>((state) => state.packs.page);\r\n\r\n  const clickPage = (event: MouseEvent<HTMLButtonElement>) => {\r\n    //dispatch(PacksActions.setPage(+event.currentTarget.innerHTML));\r\n    dispatch(getPacks({page: +event.currentTarget.innerHTML}));\r\n    console.log(event.currentTarget)\r\n  };\r\n  const arr = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    arr.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <span style={{ fontWeight: 'bold' }}>Pages:</span>{' '}\r\n      {arr.map((pages, id) => {\r\n        return (\r\n          <span key={id} className={`${page - 1 === id ? s.active : ''} ${s.page}`} onClick={clickPage}>\r\n            {pages}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { AppStoreType } from \"../../../../main/bll/store\"\r\nimport { Preloader } from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\"\r\nimport { CustomSnackbar } from \"../../../../main/ui/common/CustomSnackbar/CustomSnackbar\"\r\nimport { CustomTable } from \"../../../../main/ui/common/CustomTable/CustomTable\"\r\nimport { PATH } from \"../../../../main/ui/routes/Routes\"\r\nimport { ErrorHandlingActions } from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\"\r\nimport { me } from \"../../../f1-auth/login/bll-login/loginThunks\"\r\nimport { PacksActions } from \"../bll/packsActions\"\r\nimport { addPack, deletePack, getPacks, updatePack } from \"../bll/packsThunks\"\r\nimport { Pagination } from \"./Paginator\"\r\nimport s from './Packs.module.css'\r\nimport { CustomModalWindow } from \"../../../../main/ui/common/CustomModalWindow/CustomModalWindow\"\r\nimport CustomInput from \"../../../../main/ui/common/CustomInput/CustomInput\"\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\"\r\nimport { PackType } from \"../bll/packsInitState\"\r\nimport { Sort } from \"../../../../main/ui/common/SortComponent/Sort\";\r\nimport { Search } from \"../../../../main/ui/common/SearchComponent/SearchComponent\";\r\nimport { DoubleRangeSlider } from \"../../../../main/ui/common/DoubleRangeSlider/DoubleRangeSlider\";\r\nimport CustomCheckbox from \"../../../../main/ui/common/CustomCheckbox/CustomCheckbox\";\r\n\r\n\r\nexport const Packs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const packs = useSelector<AppStoreType, PackType[]>(state => state.packs.packs)\r\n    const success = useSelector<AppStoreType, boolean>(state => state.login.success)\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const error = useSelector<AppStoreType, string>(state => state.errorHandling.error)\r\n\r\n    const minCardsCount = useSelector<AppStoreType, number>(state => state.packs.minCardsCount)\r\n    const maxCardsCount = useSelector<AppStoreType, number>(state => state.packs.maxCardsCount)\r\n    const userId = useSelector<AppStoreType, string | null>(state => state.login.user_id)\r\n    const [min, setMin] = useState(minCardsCount)\r\n    const [max, setMax] = useState(maxCardsCount)\r\n    const [getMyPacks, setGetMyPacks] = useState(false)\r\n    const finallyUserId = getMyPacks && userId !== null ? userId : undefined\r\n\r\n    const recent_pack_id = useSelector<AppStoreType, string>(state => state.packs.recent_pack_id)\r\n\r\n    const [newModalActive, setNewModalActive] = useState<boolean>(false)\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    const [newTitleFromModal, setNewTitleFromModal] = useState<string>('')\r\n    const [titleFromModal, setTitleFromModal] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        if (!success) {\r\n            dispatch(me())\r\n        }\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        dispatch(getPacks({}))\r\n    }, [dispatch])\r\n\r\n    const addPackHandler = () => {\r\n        dispatch(addPack(newTitleFromModal))\r\n        setNewTitleFromModal('')\r\n        setNewModalActive(false)\r\n    }\r\n\r\n    const deletePackHandler = (id: string) => {\r\n        dispatch(deletePack(id))\r\n    }\r\n\r\n    const updatePackHandler = () => {\r\n        dispatch(updatePack(recent_pack_id, titleFromModal))\r\n        setTitleFromModal('')\r\n        setModalActive(false)\r\n    }\r\n\r\n    const packIdSaver = (id: string) => {\r\n        dispatch(PacksActions.setPackId(id))\r\n    }\r\n\r\n\r\n    const sortByMore = () => {\r\n        dispatch(getPacks({ sortPacks: \"0cardsCount\", user_id: finallyUserId }))\r\n    }\r\n\r\n    const sortByFewer = () => {\r\n        dispatch(getPacks({ sortPacks: \"1cardsCount\", user_id: finallyUserId }))\r\n    }\r\n\r\n    const searchByName = (name: string) => {\r\n        dispatch(getPacks({ packName: name, min, max, user_id: finallyUserId }))\r\n    }\r\n\r\n    const onSearchingValuesChange = (values: [number, number]) => {\r\n        setMin(values[0])\r\n        setMax(values[1])\r\n    }\r\n\r\n    const onMyPacksCheckboxChange = (value: boolean) => {\r\n        setGetMyPacks(value)\r\n        dispatch(getPacks({ min, max, user_id: value && userId !== null ? userId : undefined }))\r\n    }\r\n\r\n    if (!success) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsContainer}>\r\n            Packs page\r\n            {loading && <Preloader />}\r\n            {error !== '' && <CustomSnackbar title={error} timer={3000} />}\r\n            <Pagination />\r\n            <div className={s.searchUtils}>\r\n                <div className={s.checkbox}>\r\n                    My packs\r\n                    <CustomCheckbox onChangeChecked={onMyPacksCheckboxChange} />\r\n                </div>\r\n                <div className={s.searchBlock}>\r\n                    Search by amount of cards:\r\n                    <DoubleRangeSlider min={minCardsCount} max={maxCardsCount} value={[min, max]}\r\n                        onChangeRange={onSearchingValuesChange} />\r\n                    Search by name:\r\n                    <Search placeholder={\"Search by name\"} searchFunction={searchByName} />\r\n                </div>\r\n                <div className={s.sortComponent}>Sorting by amout of cards:\r\n                    <Sort sortByMore={sortByMore} sortByFewer={sortByFewer} />\r\n                </div>\r\n            </div>\r\n            <CustomTable title={['Packs', 'Cards', 'Updated', 'url']}\r\n                data={packs}\r\n                deleteItemCallback={deletePackHandler}\r\n                saveRecentIdCallback={packIdSaver}\r\n                setModalView={setModalActive}\r\n                setNewModalView={setNewModalActive}\r\n                disabled={loading} />\r\n            {/* New title */}\r\n            <CustomModalWindow active={newModalActive} setActive={setNewModalActive}>\r\n                <p>Choose Title</p>\r\n                <CustomInput value={newTitleFromModal} onChange={e => setNewTitleFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => addPackHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setNewModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n            {/* Update title */}\r\n            <CustomModalWindow active={modalActive} setActive={setModalActive}>\r\n                <p>Change Title</p>\r\n                <CustomInput value={titleFromModal} onChange={e => setTitleFromModal(e.target.value)} />\r\n                <CustomButton onClick={() => updatePackHandler()}>Accept</CustomButton>\r\n                <CustomButton onClick={() => setModalActive(false)}>Cancel</CustomButton>\r\n            </CustomModalWindow>\r\n\r\n        </div>\r\n    )\r\n}","import style from './ErrorPage.module.css'\r\n\r\nexport const ErrorPage = () => {\r\n    return (\r\n        <div className={style.error_page}>\r\n            <div className={style.title_404}>404</div>\r\n            <div className={style.title}>UH OH! You're lost. ฅ/ᐠ.̫ .ᐟ\\ฅ</div>\r\n            <span>\r\n                The page you are looking for does not exist. <br />\r\n                        How you got here is a mystery! <br />\r\n                        But you can choose the section above and have fun there!\r\n                    </span>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {ErrorHandlingActions} from \"../../../../main/utils/ErrorHandling/bll/errorHandlingActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {getCards, updateCardGrade} from \"../../../f2-cards/cards/bll/cardsThunks\";\r\nimport {CardType} from \"../../../f2-cards/cards/bll/cardsInitState\";\r\nimport {AppStoreType} from \"../../../../main/bll/store\";\r\nimport CustomButton from \"../../../../main/ui/common/CustomButton/CustomButton\";\r\nimport {Preloader} from \"../../../../main/ui/common/CustomPreloader/CustomPreloader\";\r\nimport s from './Learning.module.css'\r\nimport navLinkStyle from '../../../../main/ui/header/Header.module.css'\r\nimport {PATH} from \"../../../../main/ui/routes/Routes\";\r\n\r\nexport type AnswerRateType = 1 | 2 | 3 | 4 | 5\r\n\r\nexport const Learning = () => {\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams<{ id: string }>()\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.errorHandling.loading)\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cards.cards)\r\n    const setGetNewCards = useSelector<AppStoreType, boolean>(state => state.errorHandling.getNewCards)\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const [currentCard, setCurrentCard] = useState<CardType>({\r\n        _id: '',\r\n        cardsPack_id: '',\r\n        user_id: '',\r\n        answer: '',\r\n        question: '',\r\n        grade: 0,\r\n        shots: 0,\r\n        questionImg: '',\r\n        answerImg: '',\r\n        answerVideo: '',\r\n        questionVideo: '',\r\n        comments: '',\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n        created: '',\r\n        updated: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(ErrorHandlingActions.setError(''))\r\n        if (first) {\r\n            dispatch(getCards(id));\r\n            setFirst(false);\r\n        }\r\n        if (cards.length > 0) setCurrentCard(getCard(cards));\r\n    }, [dispatch, id, cards])\r\n\r\n    const getCard = (cards: CardType[]) => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n        const rand = Math.random() * sum;\r\n        const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n                const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n                return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n            }\r\n            , {sum: 0, id: -1});\r\n\r\n        return cards[res.id + 1];\r\n    }\r\n\r\n\r\n    const onRateButtonClick = (rate: AnswerRateType) => {\r\n        setCheck(false)\r\n        dispatch(updateCardGrade(currentCard._id, rate, id))\r\n        setCurrentCard(getCard(cards))\r\n\r\n    }\r\n    if (!setGetNewCards) {\r\n        return (\r\n            <div className={s.loading_preloader}><Preloader/></div>\r\n        )\r\n    }\r\n    if (cards.length <= 0) {\r\n        return (\r\n            <div>\r\n                <div>There are no cards</div>\r\n                <NavLink to={PATH.PACKS} className={navLinkStyle.nav_link}>Back</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p>Learning Page</p>\r\n            {!check ?\r\n                <div className={s.questionBlock}>\r\n                    {loading ?\r\n                        <div className={s.learning_preloader}><Preloader/></div>\r\n                        :\r\n                        <div className={s.question}>\r\n                            <div className={s.text}>Question: {currentCard.question}</div>\r\n                        </div>\r\n                    }\r\n                    <CustomButton onClick={() => setCheck(true)} disabled={loading}>Check</CustomButton>\r\n                </div>\r\n                :\r\n                <div className={s.answerBlock}>\r\n                    <div className={s.answer}>\r\n                        <div className={s.text}>Answer: {currentCard.answer}</div>\r\n                    </div>\r\n                    <div className={s.answerButtons}>\r\n                        <div>Rate your answer:</div>\r\n                        <CustomButton onClick={() => onRateButtonClick(1)} disabled={loading}>Easy to\r\n                            answer</CustomButton>\r\n                        <CustomButton onClick={() => onRateButtonClick(2)} disabled={loading}>Right\r\n                            answer</CustomButton>\r\n                        <CustomButton onClick={() => onRateButtonClick(3)} disabled={loading}>Almost correct\r\n                            answer</CustomButton>\r\n                        <CustomButton onClick={() => onRateButtonClick(4)} disabled={loading}>It was hard to\r\n                            answer</CustomButton>\r\n                        <CustomButton onClick={() => onRateButtonClick(5)} disabled={loading}>Wrong\r\n                            answer</CustomButton>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n\r\n}","import React from \"react\"\r\nimport {Switch} from \"react-router\"\r\nimport {Redirect, Route, useParams} from \"react-router-dom\"\r\nimport {TestComponent} from \"../../../features/f0-test/TestComponent/ui/TestComponent\"\r\nimport {Forgot} from \"../../../features/f1-auth/forgot/ui-forgot/Forgot\"\r\nimport {Login} from \"../../../features/f1-auth/login/ui-login/Login\"\r\nimport {Profile} from \"../../../features/f1-auth/profile/ui-profile/Profile\"\r\nimport {Register} from \"../../../features/f1-auth/register/ui-register/Register\"\r\nimport {SetPassword} from \"../../../features/f1-auth/setPass/ui-setPass/SetPassword\"\r\nimport {Cards} from \"../../../features/f2-cards/cards/ui/Cards\"\r\nimport {Packs} from \"../../../features/f2-cards/packs/ui/Packs\"\r\nimport {ErrorPage} from \"../errorPage/ui/ErrorPage\"\r\nimport {Learning} from \"../../../features/f3-learning/learning/ui/Learning\";\r\n\r\nexport const PATH = {\r\n    HOME: '/',\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    PROFILE: \"/profile\",\r\n    FORGOT: '/forgot',\r\n    SET_PASS: '/set-new-password/:id',\r\n    TEST: '/test',\r\n    ERROR_PAGE: '/404',\r\n    CARDS: '/cards',\r\n    PACKS: '/packs',\r\n    LEARNING: '/learning'\r\n    // add paths\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу TEST*/}\r\n                <Route path={PATH.HOME} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.FORGOT} render={() => <Forgot/>}/>\r\n                <Route path={PATH.SET_PASS} render={() => <SetPassword/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={`${PATH.CARDS}/:id`} render={() => <Cards/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestComponent/>}/>\r\n                <Route path={`${PATH.LEARNING}/:id`} render={() => <Learning/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <ErrorPage/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStoreType } from \"../../bll/store\";\r\nimport { PATH } from \"../routes/Routes\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n\r\n    const recent_pack_id = useSelector<AppStoreType, string>(state => state.packs.recent_pack_id)\r\n    const samePath = recent_pack_id ? `${recent_pack_id}` : ''\r\n\r\n\r\n    return (\r\n        <div className={style.nav_container}>\r\n        <div className={style.nav_bar}>\r\n            <NavLink to={PATH.TEST} className={style.nav_link} activeClassName={style.current}>Home</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={style.nav_link} activeClassName={style.current}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTER} className={style.nav_link} activeClassName={style.current}>Register</NavLink>\r\n            <NavLink to={PATH.PROFILE} className={style.nav_link} activeClassName={style.current}>Profile</NavLink>\r\n            <NavLink to={PATH.FORGOT} className={style.nav_link} activeClassName={style.current}>Forgot</NavLink>\r\n            <NavLink to={PATH.SET_PASS} className={style.nav_link} activeClassName={style.current}>Set Password</NavLink>\r\n            <NavLink to={PATH.PACKS} className={style.nav_link} activeClassName={style.current}>Packs</NavLink>\r\n            <NavLink to={`${PATH.CARDS}/${samePath}`} className={style.nav_link} activeClassName={style.current}>Cards</NavLink>\r\n            <NavLink to={`${PATH.LEARNING}/${samePath}`} className={style.nav_link} activeClassName={style.current}>Learning</NavLink>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Routes } from \"./ui/routes/Routes\"\r\nimport { Header } from './ui/header/Header'\r\nimport s from './Main.module.css'\r\n\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div className={s.mainContainer}>\r\n            <Header />\r\n            <Routes />\r\n        </div>\r\n    )\r\n}","import { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from '../bll/store';\nimport { Main } from '../Main';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <>\n        <HashRouter>\n          <Provider store={store}>\n            <Main />\n          </Provider>\n        </HashRouter>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/main/ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}